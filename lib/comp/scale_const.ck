// Machine.add("lib/comp/note_const.ck")
// Machine.add("lib/comp/chord.ck")
// Machine.add("lib/comp/scale.ck")
// Machine.add("lib/comp/clock.ck")

public class ScaleConst {
  1.0 => float DEFAULT_GAIN;

  // Scale Intervals - Intervals also called Degrees
  // minor scales
  [0, 2, 3, 5, 7, 8, 10] @=> static int MINOR[]; // minor mode
  [0, 2, 3, 5, 7, 8, 11] @=> static int HARMONIC_MINOR[]; // harmonic minor
  [0, 2, 3, 5, 7, 9, 11] @=> static int ASC_MELODIC_MINOR[]; // ascending melodic minor
  [0, 1, 3, 5, 7, 8, 10] @=> static int NEAPOLITAN[]; // make 2nd degree neapolitain
  // other church modes
  [0, 2, 4, 5, 7, 9, 11] @=> static int MAJOR[]; // major scale
  [0, 2, 4, 5, 7, 8, 10] @=> static int MIXOLYDIAN[]; // church mixolydian
  [0, 2, 3, 5, 7, 9, 10] @=> static int DORIAN[]; // church dorian
  [0, 2, 4, 6, 7, 9, 11] @=> static int LYDIAN[]; // church lydian
  // other
  [0, 2, 4, 7, 9] @=> static int MAJOR_PENTATONIC[]; // major pentatonic
  [0, 2, 4, 6, 8, 10] @=> static int WHOLE_TONE[]; // the whole tone scale
  [0, 2, 3, 5, 6, 8, 9, 11] @=> static int DIMINISHED[]; // diminished scale 
 
  // Chords
  // common triads in Western music, as degrees from the chord root
  // Note these are 0-based, but in traditional music theory scales etc. are 1-based
  [0, 4, 7] @=> static int MAJOR_TRIAD[];  // So, 0th, 2nd and 4th offset are degrees 1, 4, 7 e.g. C-E-G for C MAJOR
  [0, 4, 7] @=> static int M[];  // common alias
  [0, 3, 7] @=> static int MINOR_TRIAD[];  
  [0, 3, 7] @=> static int m[];  
  [0, 3, 6] @=> static int DIMINISHED_TRIAD[];
  [0, 3, 6] @=> static int dim[];
  [0, 4, 8] @=> static int AUGMENTED_TRIAD[];
  [0, 4, 8] @=> static int aug[];


  // Init objects used to populate Rest and Chord Constants
  NoteConst n;
  Scale s;
  Chord c;
  // Init Clock so that duration of notes are set 
  // Events not used but needed to init the Clock
  Clock k;
  120 => int BPM;
  Event dummyStartEvent;
  Event dummyStepEvent; 
  Event dummyPlayoutputEvent;
  0 => int NUM_PLAYERS;
  k.init(BPM, dummyStartEvent, dummyStepEvent, dummyPlayoutputEvent);  

  // Rest Constants
  0.0 => float NO_GAIN;
  c.make(s.triad(0, n.C, M), NO_GAIN, k.SXTYFRTH) @=> Chord REST_64;
  c.make(s.triad(0, n.C, M), NO_GAIN, k.THRTYSCND) @=> Chord REST_32;
  c.make(s.triad(0, n.C, M), NO_GAIN, k.SXTNTH) @=> Chord REST_16;
  c.make(s.triad(0, n.C, M), NO_GAIN, k.ETH) @=> Chord REST_8;
  c.make(s.triad(0, n.C, M), NO_GAIN, k.QRTR) @=> Chord REST_4;
  c.make(s.triad(0, n.C, M), NO_GAIN, k.HLF) @=> Chord REST_2;
  c.make(s.triad(0, n.C, M), NO_GAIN, k.WHL) @=> Chord REST_1;

  //
  // Chord Constants 
  // grouped by duration, chord type, octave

  //
  // WHL 
  //

  // Major
  // 0-based offsets
  c.make(s.triad(0, n.C, M), DEFAULT_GAIN, k.WHL) @=> Chord CM_1;
  c.make(s.triad(0, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> Chord CsM_1;
  c.make(s.triad(0, n.D, M), DEFAULT_GAIN, k.WHL) @=> Chord DM_1;
  c.make(s.triad(0, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> Chord DsM_1;
  c.make(s.triad(0, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> Chord EfM_1;
  c.make(s.triad(0, n.E, M), DEFAULT_GAIN, k.WHL) @=> Chord EM_1;
  c.make(s.triad(0, n.F, M), DEFAULT_GAIN, k.WHL) @=> Chord FM_1;
  c.make(s.triad(0, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> Chord FsM_1;
  c.make(s.triad(0, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> Chord GfM_1;
  c.make(s.triad(0, n.G, M), DEFAULT_GAIN, k.WHL) @=> Chord GM_1;
  c.make(s.triad(0, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> Chord GsM_1;
  c.make(s.triad(0, n.Af, M), DEFAULT_GAIN, k.WHL) @=> Chord AfM_1;
  c.make(s.triad(0, n.A, M), DEFAULT_GAIN, k.WHL) @=> Chord AM_1;
  c.make(s.triad(0, n.As, M), DEFAULT_GAIN, k.WHL) @=> Chord AsM_1;
  c.make(s.triad(0, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> Chord BfM_1;
  c.make(s.triad(0, n.B, M), DEFAULT_GAIN, k.WHL) @=> Chord BM_1;

  // constants predefined per octave
  c.make(s.triad(1, n.C, M), DEFAULT_GAIN, k.WHL) @=> Chord CM0_1;
  c.make(s.triad(1, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> Chord CsM0_1;
  c.make(s.triad(1, n.D, M), DEFAULT_GAIN, k.WHL) @=> Chord DM0_1;
  c.make(s.triad(1, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> Chord DsM0_1;
  c.make(s.triad(1, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> Chord EfM0_1;
  c.make(s.triad(1, n.E, M), DEFAULT_GAIN, k.WHL) @=> Chord EM0_1;
  c.make(s.triad(1, n.F, M), DEFAULT_GAIN, k.WHL) @=> Chord FM0_1;
  c.make(s.triad(1, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> Chord FsM0_1;
  c.make(s.triad(1, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> Chord GfM0_1;
  c.make(s.triad(1, n.G, M), DEFAULT_GAIN, k.WHL) @=> Chord GM0_1;
  c.make(s.triad(1, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> Chord GsM0_1;
  c.make(s.triad(1, n.Af, M), DEFAULT_GAIN, k.WHL) @=> Chord AfM0_1;
  c.make(s.triad(1, n.A, M), DEFAULT_GAIN, k.WHL) @=> Chord AM0_1;
  c.make(s.triad(1, n.As, M), DEFAULT_GAIN, k.WHL) @=> Chord AsM0_1;
  c.make(s.triad(1, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> Chord BfM0_1;
  c.make(s.triad(1, n.B, M), DEFAULT_GAIN, k.WHL) @=> Chord BM0_1;

  c.make(s.triad(2, n.C, M), DEFAULT_GAIN, k.WHL) @=> Chord CM1_1;
  c.make(s.triad(2, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> Chord CsM1_1;
  c.make(s.triad(2, n.D, M), DEFAULT_GAIN, k.WHL) @=> Chord DM1_1;
  c.make(s.triad(2, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> Chord DsM1_1;
  c.make(s.triad(2, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> Chord EfM1_1;
  c.make(s.triad(2, n.E, M), DEFAULT_GAIN, k.WHL) @=> Chord EM1_1;
  c.make(s.triad(2, n.F, M), DEFAULT_GAIN, k.WHL) @=> Chord FM1_1;
  c.make(s.triad(2, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> Chord FsM1_1;
  c.make(s.triad(2, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> Chord GfM1_1;
  c.make(s.triad(2, n.G, M), DEFAULT_GAIN, k.WHL) @=> Chord GM1_1;
  c.make(s.triad(2, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> Chord GsM1_1;
  c.make(s.triad(2, n.Af, M), DEFAULT_GAIN, k.WHL) @=> Chord AfM1_1;
  c.make(s.triad(2, n.A, M), DEFAULT_GAIN, k.WHL) @=> Chord AM1_1;
  c.make(s.triad(2, n.As, M), DEFAULT_GAIN, k.WHL) @=> Chord AsM1_1;
  c.make(s.triad(2, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> Chord BfM1_1;
  c.make(s.triad(2, n.B, M), DEFAULT_GAIN, k.WHL) @=> Chord BM1_1;

  c.make(s.triad(3, n.C, M), DEFAULT_GAIN, k.WHL) @=> Chord CM2_1;
  c.make(s.triad(3, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> Chord CsM2_1;
  c.make(s.triad(3, n.D, M), DEFAULT_GAIN, k.WHL) @=> Chord DM2_1;
  c.make(s.triad(3, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> Chord DsM2_1;
  c.make(s.triad(3, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> Chord EfM2_1;
  c.make(s.triad(3, n.E, M), DEFAULT_GAIN, k.WHL) @=> Chord EM2_1;
  c.make(s.triad(3, n.F, M), DEFAULT_GAIN, k.WHL) @=> Chord FM2_1;
  c.make(s.triad(3, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> Chord FsM2_1;
  c.make(s.triad(3, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> Chord GfM2_1;
  c.make(s.triad(3, n.G, M), DEFAULT_GAIN, k.WHL) @=> Chord GM2_1;
  c.make(s.triad(3, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> Chord GsM2_1;
  c.make(s.triad(3, n.Af, M), DEFAULT_GAIN, k.WHL) @=> Chord AfM2_1;
  c.make(s.triad(3, n.A, M), DEFAULT_GAIN, k.WHL) @=> Chord AM2_1;
  c.make(s.triad(3, n.As, M), DEFAULT_GAIN, k.WHL) @=> Chord AsM2_1;
  c.make(s.triad(3, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> Chord BfM2_1;
  c.make(s.triad(3, n.B, M), DEFAULT_GAIN, k.WHL) @=> Chord BM2_1;

  c.make(s.triad(4, n.C, M), DEFAULT_GAIN, k.WHL) @=> Chord CM3_1;
  c.make(s.triad(4, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> Chord CsM3_1;
  c.make(s.triad(4, n.D, M), DEFAULT_GAIN, k.WHL) @=> Chord DM3_1;
  c.make(s.triad(4, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> Chord DsM3_1;
  c.make(s.triad(4, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> Chord EfM3_1;
  c.make(s.triad(4, n.E, M), DEFAULT_GAIN, k.WHL) @=> Chord EM3_1;
  c.make(s.triad(4, n.F, M), DEFAULT_GAIN, k.WHL) @=> Chord FM3_1;
  c.make(s.triad(4, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> Chord FsM3_1;
  c.make(s.triad(4, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> Chord GfM3_1;
  c.make(s.triad(4, n.G, M), DEFAULT_GAIN, k.WHL) @=> Chord GM3_1;
  c.make(s.triad(4, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> Chord GsM3_1;
  c.make(s.triad(4, n.Af, M), DEFAULT_GAIN, k.WHL) @=> Chord AfM3_1;
  c.make(s.triad(4, n.A, M), DEFAULT_GAIN, k.WHL) @=> Chord AM3_1;
  c.make(s.triad(4, n.As, M), DEFAULT_GAIN, k.WHL) @=> Chord AsM3_1;
  c.make(s.triad(4, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> Chord BfM3_1;
  c.make(s.triad(4, n.B, M), DEFAULT_GAIN, k.WHL) @=> Chord BM3_1;

  c.make(s.triad(5, n.C, M), DEFAULT_GAIN, k.WHL) @=> Chord CM4_1;
  c.make(s.triad(5, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> Chord CsM4_1;
  c.make(s.triad(5, n.D, M), DEFAULT_GAIN, k.WHL) @=> Chord DM4_1;
  c.make(s.triad(5, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> Chord DsM4_1;
  c.make(s.triad(5, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> Chord EfM4_1;
  c.make(s.triad(5, n.E, M), DEFAULT_GAIN, k.WHL) @=> Chord EM4_1;
  c.make(s.triad(5, n.F, M), DEFAULT_GAIN, k.WHL) @=> Chord FM4_1;
  c.make(s.triad(5, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> Chord FsM4_1;
  c.make(s.triad(5, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> Chord GfM4_1;
  c.make(s.triad(5, n.G, M), DEFAULT_GAIN, k.WHL) @=> Chord GM4_1;
  c.make(s.triad(5, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> Chord GsM4_1;
  c.make(s.triad(5, n.Af, M), DEFAULT_GAIN, k.WHL) @=> Chord AfM4_1;
  c.make(s.triad(5, n.A, M), DEFAULT_GAIN, k.WHL) @=> Chord AM4_1;
  c.make(s.triad(5, n.As, M), DEFAULT_GAIN, k.WHL) @=> Chord AsM4_1;
  c.make(s.triad(5, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> Chord BfM4_1;
  c.make(s.triad(5, n.B, M), DEFAULT_GAIN, k.WHL) @=> Chord BM4_1;

  c.make(s.triad(6, n.C, M), DEFAULT_GAIN, k.WHL) @=> Chord CM5_1;
  c.make(s.triad(6, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> Chord CsM5_1;
  c.make(s.triad(6, n.D, M), DEFAULT_GAIN, k.WHL) @=> Chord DM5_1;
  c.make(s.triad(6, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> Chord DsM5_1;
  c.make(s.triad(6, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> Chord EfM5_1;
  c.make(s.triad(6, n.E, M), DEFAULT_GAIN, k.WHL) @=> Chord EM5_1;
  c.make(s.triad(6, n.F, M), DEFAULT_GAIN, k.WHL) @=> Chord FM5_1;
  c.make(s.triad(6, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> Chord FsM5_1;
  c.make(s.triad(6, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> Chord GfM5_1;
  c.make(s.triad(6, n.G, M), DEFAULT_GAIN, k.WHL) @=> Chord GM5_1;
  c.make(s.triad(6, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> Chord GsM5_1;
  c.make(s.triad(6, n.Af, M), DEFAULT_GAIN, k.WHL) @=> Chord AfM5_1;
  c.make(s.triad(6, n.A, M), DEFAULT_GAIN, k.WHL) @=> Chord AM5_1;
  c.make(s.triad(6, n.As, M), DEFAULT_GAIN, k.WHL) @=> Chord AsM5_1;
  c.make(s.triad(6, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> Chord BfM5_1;
  c.make(s.triad(6, n.B, M), DEFAULT_GAIN, k.WHL) @=> Chord BM5_1;

  c.make(s.triad(7, n.C, M), DEFAULT_GAIN, k.WHL) @=> Chord CM6_1;
  c.make(s.triad(7, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> Chord CsM6_1;
  c.make(s.triad(7, n.D, M), DEFAULT_GAIN, k.WHL) @=> Chord DM6_1;
  c.make(s.triad(7, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> Chord DsM6_1;
  c.make(s.triad(7, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> Chord EfM6_1;
  c.make(s.triad(7, n.E, M), DEFAULT_GAIN, k.WHL) @=> Chord EM6_1;
  c.make(s.triad(7, n.F, M), DEFAULT_GAIN, k.WHL) @=> Chord FM6_1;
  c.make(s.triad(7, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> Chord FsM6_1;
  c.make(s.triad(7, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> Chord GfM6_1;
  c.make(s.triad(7, n.G, M), DEFAULT_GAIN, k.WHL) @=> Chord GM6_1;
  c.make(s.triad(7, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> Chord GsM6_1;
  c.make(s.triad(7, n.Af, M), DEFAULT_GAIN, k.WHL) @=> Chord AfM6_1;
  c.make(s.triad(7, n.A, M), DEFAULT_GAIN, k.WHL) @=> Chord AM6_1;
  c.make(s.triad(7, n.As, M), DEFAULT_GAIN, k.WHL) @=> Chord AsM6_1;
  c.make(s.triad(7, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> Chord BfM6_1;
  c.make(s.triad(7, n.B, M), DEFAULT_GAIN, k.WHL) @=> Chord BM6_1;

  c.make(s.triad(8, n.C, M), DEFAULT_GAIN, k.WHL) @=> Chord CM7_1;
  c.make(s.triad(8, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> Chord CsM7_1;
  c.make(s.triad(8, n.D, M), DEFAULT_GAIN, k.WHL) @=> Chord DM7_1;
  c.make(s.triad(8, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> Chord DsM7_1;
  c.make(s.triad(8, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> Chord EfM7_1;
  c.make(s.triad(8, n.E, M), DEFAULT_GAIN, k.WHL) @=> Chord EM7_1;
  c.make(s.triad(8, n.F, M), DEFAULT_GAIN, k.WHL) @=> Chord FM7_1;
  c.make(s.triad(8, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> Chord FsM7_1;
  c.make(s.triad(8, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> Chord GfM7_1;
  c.make(s.triad(8, n.G, M), DEFAULT_GAIN, k.WHL) @=> Chord GM7_1;
  c.make(s.triad(8, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> Chord GsM7_1;
  c.make(s.triad(8, n.Af, M), DEFAULT_GAIN, k.WHL) @=> Chord AfM7_1;
  c.make(s.triad(8, n.A, M), DEFAULT_GAIN, k.WHL) @=> Chord AM7_1;
  c.make(s.triad(8, n.As, M), DEFAULT_GAIN, k.WHL) @=> Chord AsM7_1;
  c.make(s.triad(8, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> Chord BfM7_1;
  c.make(s.triad(8, n.B, M), DEFAULT_GAIN, k.WHL) @=> Chord BM7_1;

  c.make(s.triad(9, n.C, M), DEFAULT_GAIN, k.WHL) @=> Chord CM8_1;
  c.make(s.triad(9, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> Chord CsM8_1;
  c.make(s.triad(9, n.D, M), DEFAULT_GAIN, k.WHL) @=> Chord DM8_1;
  c.make(s.triad(9, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> Chord DsM8_1;
  c.make(s.triad(9, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> Chord EfM8_1;
  c.make(s.triad(9, n.E, M), DEFAULT_GAIN, k.WHL) @=> Chord EM8_1;
  c.make(s.triad(9, n.F, M), DEFAULT_GAIN, k.WHL) @=> Chord FM8_1;
  c.make(s.triad(9, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> Chord FsM8_1;
  c.make(s.triad(9, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> Chord GfM8_1;
  c.make(s.triad(9, n.G, M), DEFAULT_GAIN, k.WHL) @=> Chord GM8_1;
  c.make(s.triad(9, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> Chord GsM8_1;
  c.make(s.triad(9, n.Af, M), DEFAULT_GAIN, k.WHL) @=> Chord AfM8_1;
  c.make(s.triad(9, n.A, M), DEFAULT_GAIN, k.WHL) @=> Chord AM8_1;
  c.make(s.triad(9, n.As, M), DEFAULT_GAIN, k.WHL) @=> Chord AsM8_1;
  c.make(s.triad(9, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> Chord BfM8_1;
  c.make(s.triad(9, n.B, M), DEFAULT_GAIN, k.WHL) @=> Chord BM8_1;

  // Minor
  c.make(s.triad(0, n.C, m), DEFAULT_GAIN, k.WHL) @=> Chord Cm_1;
  c.make(s.triad(0, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Chord Csm_1;
  c.make(s.triad(0, n.D, m), DEFAULT_GAIN, k.WHL) @=> Chord Dm_1;
  c.make(s.triad(0, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Chord Dsm_1;
  c.make(s.triad(0, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Chord Efm_1;
  c.make(s.triad(0, n.E, m), DEFAULT_GAIN, k.WHL) @=> Chord Em_1;
  c.make(s.triad(0, n.F, m), DEFAULT_GAIN, k.WHL) @=> Chord _Fm_1;
  c.make(s.triad(0, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Chord Fsm_1;
  c.make(s.triad(0, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Chord Gfm_1;
  c.make(s.triad(0, n.G, m), DEFAULT_GAIN, k.WHL) @=> Chord Gm_1;
  c.make(s.triad(0, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Chord Gsm_1;
  c.make(s.triad(0, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Chord Afm_1;
  c.make(s.triad(0, n.A, m), DEFAULT_GAIN, k.WHL) @=> Chord Am_1;
  c.make(s.triad(0, n.As, m), DEFAULT_GAIN, k.WHL) @=> Chord Asm_1;
  c.make(s.triad(0, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Chord Bfm_1;
  c.make(s.triad(0, n.B, m), DEFAULT_GAIN, k.WHL) @=> Chord Bm_1;

  c.make(s.triad(1, n.C, m), DEFAULT_GAIN, k.WHL) @=> Chord Cm0_1;
  c.make(s.triad(1, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Chord Csm0_1;
  c.make(s.triad(1, n.D, m), DEFAULT_GAIN, k.WHL) @=> Chord Dm0_1;
  c.make(s.triad(1, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Chord Dsm0_1;
  c.make(s.triad(1, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Chord Efm0_1;
  c.make(s.triad(1, n.E, m), DEFAULT_GAIN, k.WHL) @=> Chord Em0_1;
  c.make(s.triad(1, n.F, m), DEFAULT_GAIN, k.WHL) @=> Chord _Fm0_1;
  c.make(s.triad(1, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Chord Fsm0_1;
  c.make(s.triad(1, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Chord Gfm0_1;
  c.make(s.triad(1, n.G, m), DEFAULT_GAIN, k.WHL) @=> Chord Gm0_1;
  c.make(s.triad(1, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Chord Gsm0_1;
  c.make(s.triad(1, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Chord Afm0_1;
  c.make(s.triad(1, n.A, m), DEFAULT_GAIN, k.WHL) @=> Chord Am0_1;
  c.make(s.triad(1, n.As, m), DEFAULT_GAIN, k.WHL) @=> Chord Asm0_1;
  c.make(s.triad(1, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Chord Bfm0_1;
  c.make(s.triad(1, n.B, m), DEFAULT_GAIN, k.WHL) @=> Chord Bm0_1;

  c.make(s.triad(2, n.C, m), DEFAULT_GAIN, k.WHL) @=> Chord Cm1_1;
  c.make(s.triad(2, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Chord Csm1_1;
  c.make(s.triad(2, n.D, m), DEFAULT_GAIN, k.WHL) @=> Chord Dm1_1;
  c.make(s.triad(2, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Chord Dsm1_1;
  c.make(s.triad(2, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Chord Efm1_1;
  c.make(s.triad(2, n.E, m), DEFAULT_GAIN, k.WHL) @=> Chord Em1_1;
  c.make(s.triad(2, n.F, m), DEFAULT_GAIN, k.WHL) @=> Chord _Fm1_1;
  c.make(s.triad(2, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Chord Fsm1_1;
  c.make(s.triad(2, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Chord Gfm1_1;
  c.make(s.triad(2, n.G, m), DEFAULT_GAIN, k.WHL) @=> Chord Gm1_1;
  c.make(s.triad(2, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Chord Gsm1_1;
  c.make(s.triad(2, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Chord Afm1_1;
  c.make(s.triad(2, n.A, m), DEFAULT_GAIN, k.WHL) @=> Chord Am1_1;
  c.make(s.triad(2, n.As, m), DEFAULT_GAIN, k.WHL) @=> Chord Asm1_1;
  c.make(s.triad(2, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Chord Bfm1_1;
  c.make(s.triad(2, n.B, m), DEFAULT_GAIN, k.WHL) @=> Chord Bm1_1;

  c.make(s.triad(3, n.C, m), DEFAULT_GAIN, k.WHL) @=> Chord Cm2_1;
  c.make(s.triad(3, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Chord Csm2_1;
  c.make(s.triad(3, n.D, m), DEFAULT_GAIN, k.WHL) @=> Chord Dm2_1;
  c.make(s.triad(3, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Chord Dsm2_1;
  c.make(s.triad(3, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Chord Efm2_1;
  c.make(s.triad(3, n.E, m), DEFAULT_GAIN, k.WHL) @=> Chord Em2_1;
  c.make(s.triad(3, n.F, m), DEFAULT_GAIN, k.WHL) @=> Chord _Fm2_1;
  c.make(s.triad(3, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Chord Fsm2_1;
  c.make(s.triad(3, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Chord Gfm2_1;
  c.make(s.triad(3, n.G, m), DEFAULT_GAIN, k.WHL) @=> Chord Gm2_1;
  c.make(s.triad(3, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Chord Gsm2_1;
  c.make(s.triad(3, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Chord Afm2_1;
  c.make(s.triad(3, n.A, m), DEFAULT_GAIN, k.WHL) @=> Chord Am2_1;
  c.make(s.triad(3, n.As, m), DEFAULT_GAIN, k.WHL) @=> Chord Asm2_1;
  c.make(s.triad(3, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Chord Bfm2_1;
  c.make(s.triad(3, n.B, m), DEFAULT_GAIN, k.WHL) @=> Chord Bm2_1;

  c.make(s.triad(4, n.C, m), DEFAULT_GAIN, k.WHL) @=> Chord Cm3_1;
  c.make(s.triad(4, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Chord Csm3_1;
  c.make(s.triad(4, n.D, m), DEFAULT_GAIN, k.WHL) @=> Chord Dm3_1;
  c.make(s.triad(4, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Chord Dsm3_1;
  c.make(s.triad(4, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Chord Efm3_1;
  c.make(s.triad(4, n.E, m), DEFAULT_GAIN, k.WHL) @=> Chord Em3_1;
  c.make(s.triad(4, n.F, m), DEFAULT_GAIN, k.WHL) @=> Chord _Fm3_1;
  c.make(s.triad(4, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Chord Fsm3_1;
  c.make(s.triad(4, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Chord Gfm3_1;
  c.make(s.triad(4, n.G, m), DEFAULT_GAIN, k.WHL) @=> Chord Gm3_1;
  c.make(s.triad(4, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Chord Gsm3_1;
  c.make(s.triad(4, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Chord Afm3_1;
  c.make(s.triad(4, n.A, m), DEFAULT_GAIN, k.WHL) @=> Chord Am3_1;
  c.make(s.triad(4, n.As, m), DEFAULT_GAIN, k.WHL) @=> Chord Asm3_1;
  c.make(s.triad(4, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Chord Bfm3_1;
  c.make(s.triad(4, n.B, m), DEFAULT_GAIN, k.WHL) @=> Chord Bm3_1;

  c.make(s.triad(5, n.C, m), DEFAULT_GAIN, k.WHL) @=> Chord Cm4_1;
  c.make(s.triad(5, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Chord Csm4_1;
  c.make(s.triad(5, n.D, m), DEFAULT_GAIN, k.WHL) @=> Chord Dm4_1;
  c.make(s.triad(5, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Chord Dsm4_1;
  c.make(s.triad(5, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Chord Efm4_1;
  c.make(s.triad(5, n.E, m), DEFAULT_GAIN, k.WHL) @=> Chord Em4_1;
  c.make(s.triad(5, n.F, m), DEFAULT_GAIN, k.WHL) @=> Chord _Fm4_1;
  c.make(s.triad(5, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Chord Fsm4_1;
  c.make(s.triad(5, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Chord Gfm4_1;
  c.make(s.triad(5, n.G, m), DEFAULT_GAIN, k.WHL) @=> Chord Gm4_1;
  c.make(s.triad(5, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Chord Gsm4_1;
  c.make(s.triad(5, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Chord Afm4_1;
  c.make(s.triad(5, n.A, m), DEFAULT_GAIN, k.WHL) @=> Chord Am4_1;
  c.make(s.triad(5, n.As, m), DEFAULT_GAIN, k.WHL) @=> Chord Asm4_1;
  c.make(s.triad(5, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Chord Bfm4_1;
  c.make(s.triad(5, n.B, m), DEFAULT_GAIN, k.WHL) @=> Chord Bm4_1;

  c.make(s.triad(6, n.C, m), DEFAULT_GAIN, k.WHL) @=> Chord Cm5_1;
  c.make(s.triad(6, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Chord Csm5_1;
  c.make(s.triad(6, n.D, m), DEFAULT_GAIN, k.WHL) @=> Chord Dm5_1;
  c.make(s.triad(6, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Chord Dsm5_1;
  c.make(s.triad(6, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Chord Efm5_1;
  c.make(s.triad(6, n.E, m), DEFAULT_GAIN, k.WHL) @=> Chord Em5_1;
  c.make(s.triad(6, n.F, m), DEFAULT_GAIN, k.WHL) @=> Chord _Fm5_1;
  c.make(s.triad(6, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Chord Fsm5_1;
  c.make(s.triad(6, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Chord Gfm5_1;
  c.make(s.triad(6, n.G, m), DEFAULT_GAIN, k.WHL) @=> Chord Gm5_1;
  c.make(s.triad(6, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Chord Gsm5_1;
  c.make(s.triad(6, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Chord Afm5_1;
  c.make(s.triad(6, n.A, m), DEFAULT_GAIN, k.WHL) @=> Chord Am5_1;
  c.make(s.triad(6, n.As, m), DEFAULT_GAIN, k.WHL) @=> Chord Asm5_1;
  c.make(s.triad(6, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Chord Bfm5_1;
  c.make(s.triad(6, n.B, m), DEFAULT_GAIN, k.WHL) @=> Chord Bm5_1;

  c.make(s.triad(7, n.C, m), DEFAULT_GAIN, k.WHL) @=> Chord Cm6_1;
  c.make(s.triad(7, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Chord Csm6_1;
  c.make(s.triad(7, n.D, m), DEFAULT_GAIN, k.WHL) @=> Chord Dm6_1;
  c.make(s.triad(7, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Chord Dsm6_1;
  c.make(s.triad(7, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Chord Efm6_1;
  c.make(s.triad(7, n.E, m), DEFAULT_GAIN, k.WHL) @=> Chord Em6_1;
  c.make(s.triad(7, n.F, m), DEFAULT_GAIN, k.WHL) @=> Chord _Fm6_1;
  c.make(s.triad(7, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Chord Fsm6_1;
  c.make(s.triad(7, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Chord Gfm6_1;
  c.make(s.triad(7, n.G, m), DEFAULT_GAIN, k.WHL) @=> Chord Gm6_1;
  c.make(s.triad(7, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Chord Gsm6_1;
  c.make(s.triad(7, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Chord Afm6_1;
  c.make(s.triad(7, n.A, m), DEFAULT_GAIN, k.WHL) @=> Chord Am6_1;
  c.make(s.triad(7, n.As, m), DEFAULT_GAIN, k.WHL) @=> Chord Asm6_1;
  c.make(s.triad(7, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Chord Bfm6_1;
  c.make(s.triad(7, n.B, m), DEFAULT_GAIN, k.WHL) @=> Chord Bm6_1;

  c.make(s.triad(8, n.C, m), DEFAULT_GAIN, k.WHL) @=> Chord Cm7_1;
  c.make(s.triad(8, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Chord Csm7_1;
  c.make(s.triad(8, n.D, m), DEFAULT_GAIN, k.WHL) @=> Chord Dm7_1;
  c.make(s.triad(8, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Chord Dsm7_1;
  c.make(s.triad(8, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Chord Efm7_1;
  c.make(s.triad(8, n.E, m), DEFAULT_GAIN, k.WHL) @=> Chord Em7_1;
  c.make(s.triad(8, n.F, m), DEFAULT_GAIN, k.WHL) @=> Chord _Fm7_1;
  c.make(s.triad(8, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Chord Fsm7_1;
  c.make(s.triad(8, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Chord Gfm7_1;
  c.make(s.triad(8, n.G, m), DEFAULT_GAIN, k.WHL) @=> Chord Gm7_1;
  c.make(s.triad(8, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Chord Gsm7_1;
  c.make(s.triad(8, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Chord Afm7_1;
  c.make(s.triad(8, n.A, m), DEFAULT_GAIN, k.WHL) @=> Chord Am7_1;
  c.make(s.triad(8, n.As, m), DEFAULT_GAIN, k.WHL) @=> Chord Asm7_1;
  c.make(s.triad(8, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Chord Bfm7_1;
  c.make(s.triad(8, n.B, m), DEFAULT_GAIN, k.WHL) @=> Chord Bm7_1;

  c.make(s.triad(9, n.C, m), DEFAULT_GAIN, k.WHL) @=> Chord Cm8_1;
  c.make(s.triad(9, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Chord Csm8_1;
  c.make(s.triad(9, n.D, m), DEFAULT_GAIN, k.WHL) @=> Chord Dm8_1;
  c.make(s.triad(9, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Chord Dsm8_1;
  c.make(s.triad(9, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Chord Efm8_1;
  c.make(s.triad(9, n.E, m), DEFAULT_GAIN, k.WHL) @=> Chord Em8_1;
  c.make(s.triad(9, n.F, m), DEFAULT_GAIN, k.WHL) @=> Chord _Fm8_1;
  c.make(s.triad(9, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Chord Fsm8_1;
  c.make(s.triad(9, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Chord Gfm8_1;
  c.make(s.triad(9, n.G, m), DEFAULT_GAIN, k.WHL) @=> Chord Gm8_1;
  c.make(s.triad(9, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Chord Gsm8_1;
  c.make(s.triad(9, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Chord Afm8_1;
  c.make(s.triad(9, n.A, m), DEFAULT_GAIN, k.WHL) @=> Chord Am8_1;
  c.make(s.triad(9, n.As, m), DEFAULT_GAIN, k.WHL) @=> Chord Asm8_1;
  c.make(s.triad(9, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Chord Bfm8_1;
  c.make(s.triad(9, n.B, m), DEFAULT_GAIN, k.WHL) @=> Chord Bm8_1;

  // Augmented
  c.make(s.triad(0, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Chord Caug_1;
  c.make(s.triad(0, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Csaug_1;
  c.make(s.triad(0, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Chord Daug_1;
  c.make(s.triad(0, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Chord Dsaug_1;
  c.make(s.triad(0, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Chord Efaug_1;
  c.make(s.triad(0, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Chord Eaug_1;
  c.make(s.triad(0, n.F, aug), DEFAULT_GAIN, k.WHL) @=> Chord _Faug_1;
  c.make(s.triad(0, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Fsaug_1;
  c.make(s.triad(0, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gfaug_1;
  c.make(s.triad(0, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gaug_1;
  c.make(s.triad(0, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gsaug_1;
  c.make(s.triad(0, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Chord Afaug_1;
  c.make(s.triad(0, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Chord Aaug_1;
  c.make(s.triad(0, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Chord Asaug_1;
  c.make(s.triad(0, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Bfaug_1;
  c.make(s.triad(0, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Chord Baug_1;

  c.make(s.triad(1, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Chord Caug0_1;
  c.make(s.triad(1, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Csaug0_1;
  c.make(s.triad(1, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Chord Daug0_1;
  c.make(s.triad(1, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Chord Dsaug0_1;
  c.make(s.triad(1, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Chord Efaug0_1;
  c.make(s.triad(1, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Chord Eaug0_1;
  c.make(s.triad(1, n.F, aug), DEFAULT_GAIN, k.WHL) @=> Chord _Faug0_1;
  c.make(s.triad(1, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Fsaug0_1;
  c.make(s.triad(1, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gfaug0_1;
  c.make(s.triad(1, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gaug0_1;
  c.make(s.triad(1, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gsaug0_1;
  c.make(s.triad(1, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Chord Afaug0_1;
  c.make(s.triad(1, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Chord Aaug0_1;
  c.make(s.triad(1, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Chord Asaug0_1;
  c.make(s.triad(1, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Bfaug0_1;
  c.make(s.triad(1, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Chord Baug0_1;

  c.make(s.triad(2, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Chord Caug1_1;
  c.make(s.triad(2, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Csaug1_1;
  c.make(s.triad(2, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Chord Daug1_1;
  c.make(s.triad(2, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Chord Dsaug1_1;
  c.make(s.triad(2, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Chord Efaug1_1;
  c.make(s.triad(2, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Chord Eaug1_1;
  c.make(s.triad(2, n.F, aug), DEFAULT_GAIN, k.WHL) @=> Chord _Faug1_1;
  c.make(s.triad(2, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Fsaug1_1;
  c.make(s.triad(2, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gfaug1_1;
  c.make(s.triad(2, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gaug1_1;
  c.make(s.triad(2, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gsaug1_1;
  c.make(s.triad(2, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Chord Afaug1_1;
  c.make(s.triad(2, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Chord Aaug1_1;
  c.make(s.triad(2, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Chord Asaug1_1;
  c.make(s.triad(2, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Bfaug1_1;
  c.make(s.triad(2, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Chord Baug1_1;

  c.make(s.triad(3, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Chord Caug2_1;
  c.make(s.triad(3, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Csaug2_1;
  c.make(s.triad(3, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Chord Daug2_1;
  c.make(s.triad(3, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Chord Dsaug2_1;
  c.make(s.triad(3, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Chord Efaug2_1;
  c.make(s.triad(3, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Chord Eaug2_1;
  c.make(s.triad(3, n.F, aug), DEFAULT_GAIN, k.WHL) @=> Chord _Faug2_1;
  c.make(s.triad(3, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Fsaug2_1;
  c.make(s.triad(3, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gfaug2_1;
  c.make(s.triad(3, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gaug2_1;
  c.make(s.triad(3, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gsaug2_1;
  c.make(s.triad(3, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Chord Afaug2_1;
  c.make(s.triad(3, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Chord Aaug2_1;
  c.make(s.triad(3, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Chord Asaug2_1;
  c.make(s.triad(3, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Bfaug2_1;
  c.make(s.triad(3, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Chord Baug2_1;

  c.make(s.triad(4, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Chord Caug3_1;
  c.make(s.triad(4, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Csaug3_1;
  c.make(s.triad(4, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Chord Daug3_1;
  c.make(s.triad(4, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Chord Dsaug3_1;
  c.make(s.triad(4, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Chord Efaug3_1;
  c.make(s.triad(4, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Chord Eaug3_1;
  c.make(s.triad(4, n.F, aug), DEFAULT_GAIN, k.WHL) @=> Chord _Faug3_1;
  c.make(s.triad(4, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Fsaug3_1;
  c.make(s.triad(4, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gfaug3_1;
  c.make(s.triad(4, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gaug3_1;
  c.make(s.triad(4, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gsaug3_1;
  c.make(s.triad(4, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Chord Afaug3_1;
  c.make(s.triad(4, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Chord Aaug3_1;
  c.make(s.triad(4, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Chord Asaug3_1;
  c.make(s.triad(4, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Bfaug3_1;
  c.make(s.triad(4, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Chord Baug3_1;

  c.make(s.triad(5, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Chord Caug4_1;
  c.make(s.triad(5, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Csaug4_1;
  c.make(s.triad(5, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Chord Daug4_1;
  c.make(s.triad(5, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Chord Dsaug4_1;
  c.make(s.triad(5, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Chord Efaug4_1;
  c.make(s.triad(5, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Chord Eaug4_1;
  c.make(s.triad(5, n.F, aug), DEFAULT_GAIN, k.WHL) @=> Chord _Faug4_1;
  c.make(s.triad(5, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Fsaug4_1;
  c.make(s.triad(5, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gfaug4_1;
  c.make(s.triad(5, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gaug4_1;
  c.make(s.triad(5, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gsaug4_1;
  c.make(s.triad(5, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Chord Afaug4_1;
  c.make(s.triad(5, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Chord Aaug4_1;
  c.make(s.triad(5, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Chord Asaug4_1;
  c.make(s.triad(5, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Bfaug4_1;
  c.make(s.triad(5, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Chord Baug4_1;

  c.make(s.triad(6, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Chord Caug5_1;
  c.make(s.triad(6, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Csaug5_1;
  c.make(s.triad(6, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Chord Daug5_1;
  c.make(s.triad(6, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Chord Dsaug5_1;
  c.make(s.triad(6, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Chord Efaug5_1;
  c.make(s.triad(6, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Chord Eaug5_1;
  c.make(s.triad(6, n.F, aug), DEFAULT_GAIN, k.WHL) @=> Chord _Faug5_1;
  c.make(s.triad(6, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Fsaug5_1;
  c.make(s.triad(6, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gfaug5_1;
  c.make(s.triad(6, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gaug5_1;
  c.make(s.triad(6, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gsaug5_1;
  c.make(s.triad(6, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Chord Afaug5_1;
  c.make(s.triad(6, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Chord Aaug5_1;
  c.make(s.triad(6, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Chord Asaug5_1;
  c.make(s.triad(6, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Bfaug5_1;
  c.make(s.triad(6, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Chord Baug5_1;

  c.make(s.triad(7, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Chord Caug6_1;
  c.make(s.triad(7, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Csaug6_1;
  c.make(s.triad(7, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Chord Daug6_1;
  c.make(s.triad(7, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Chord Dsaug6_1;
  c.make(s.triad(7, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Chord Efaug6_1;
  c.make(s.triad(7, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Chord Eaug6_1;
  c.make(s.triad(7, n.F, aug), DEFAULT_GAIN, k.WHL) @=> Chord _Faug6_1;
  c.make(s.triad(7, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Fsaug6_1;
  c.make(s.triad(7, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gfaug6_1;
  c.make(s.triad(7, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gaug6_1;
  c.make(s.triad(7, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gsaug6_1;
  c.make(s.triad(7, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Chord Afaug6_1;
  c.make(s.triad(7, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Chord Aaug6_1;
  c.make(s.triad(7, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Chord Asaug6_1;
  c.make(s.triad(7, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Bfaug6_1;
  c.make(s.triad(7, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Chord Baug6_1;

  c.make(s.triad(8, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Chord Caug7_1;
  c.make(s.triad(8, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Csaug7_1;
  c.make(s.triad(8, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Chord Daug7_1;
  c.make(s.triad(8, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Chord Dsaug7_1;
  c.make(s.triad(8, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Chord Efaug7_1;
  c.make(s.triad(8, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Chord Eaug7_1;
  c.make(s.triad(8, n.F, aug), DEFAULT_GAIN, k.WHL) @=> Chord _Faug7_1;
  c.make(s.triad(8, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Fsaug7_1;
  c.make(s.triad(8, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gfaug7_1;
  c.make(s.triad(8, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gaug7_1;
  c.make(s.triad(8, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gsaug7_1;
  c.make(s.triad(8, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Chord Afaug7_1;
  c.make(s.triad(8, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Chord Aaug7_1;
  c.make(s.triad(8, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Chord Asaug7_1;
  c.make(s.triad(8, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Bfaug7_1;
  c.make(s.triad(8, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Chord Baug7_1;

  c.make(s.triad(9, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Chord Caug8_1;
  c.make(s.triad(9, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Csaug8_1;
  c.make(s.triad(9, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Chord Daug8_1;
  c.make(s.triad(9, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Chord Dsaug8_1;
  c.make(s.triad(9, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Chord Efaug8_1;
  c.make(s.triad(9, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Chord Eaug8_1;
  c.make(s.triad(9, n.F, aug), DEFAULT_GAIN, k.WHL) @=> Chord _Faug8_1;
  c.make(s.triad(9, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Fsaug8_1;
  c.make(s.triad(9, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gfaug8_1;
  c.make(s.triad(9, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gaug8_1;
  c.make(s.triad(9, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Chord Gsaug8_1;
  c.make(s.triad(9, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Chord Afaug8_1;
  c.make(s.triad(9, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Chord Aaug8_1;
  c.make(s.triad(9, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Chord Asaug8_1;
  c.make(s.triad(9, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Chord Bfaug8_1;
  c.make(s.triad(9, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Chord Baug8_1;

  // Diminished  
  c.make(s.triad(0, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Chord Cdim_1;
  c.make(s.triad(0, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Csdim_1;
  c.make(s.triad(0, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Chord Ddim_1;
  c.make(s.triad(0, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Chord Dsdim_1;
  c.make(s.triad(0, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Chord Efdim_1;
  c.make(s.triad(0, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Chord Edim_1;
  c.make(s.triad(0, n.F, dim), DEFAULT_GAIN, k.WHL) @=> Chord _Fdim_1;
  c.make(s.triad(0, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Fsdim_1;
  c.make(s.triad(0, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gfdim_1;
  c.make(s.triad(0, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gdim_1;
  c.make(s.triad(0, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gsdim_1;
  c.make(s.triad(0, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Chord Afdim_1;
  c.make(s.triad(0, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Chord Adim_1;
  c.make(s.triad(0, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Chord Asdim_1;
  c.make(s.triad(0, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bfdim_1;
  c.make(s.triad(0, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bdim_1;

  c.make(s.triad(1, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Chord Cdim0_1;
  c.make(s.triad(1, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Csdim0_1;
  c.make(s.triad(1, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Chord Ddim0_1;
  c.make(s.triad(1, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Chord Dsdim0_1;
  c.make(s.triad(1, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Chord Efdim0_1;
  c.make(s.triad(1, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Chord Edim0_1;
  c.make(s.triad(1, n.F, dim), DEFAULT_GAIN, k.WHL) @=> Chord _Fdim0_1;
  c.make(s.triad(1, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Fsdim0_1;
  c.make(s.triad(1, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gfdim0_1;
  c.make(s.triad(1, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gdim0_1;
  c.make(s.triad(1, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gsdim0_1;
  c.make(s.triad(1, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Chord Afdim0_1;
  c.make(s.triad(1, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Chord Adim0_1;
  c.make(s.triad(1, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Chord Asdim0_1;
  c.make(s.triad(1, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bfdim0_1;
  c.make(s.triad(1, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bdim0_1;

  c.make(s.triad(2, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Chord Cdim1_1;
  c.make(s.triad(2, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Csdim1_1;
  c.make(s.triad(2, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Chord Ddim1_1;
  c.make(s.triad(2, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Chord Dsdim1_1;
  c.make(s.triad(2, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Chord Efdim1_1;
  c.make(s.triad(2, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Chord Edim1_1;
  c.make(s.triad(2, n.F, dim), DEFAULT_GAIN, k.WHL) @=> Chord _Fdim1_1;
  c.make(s.triad(2, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Fsdim1_1;
  c.make(s.triad(2, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gfdim1_1;
  c.make(s.triad(2, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gdim1_1;
  c.make(s.triad(2, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gsdim1_1;
  c.make(s.triad(2, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Chord Afdim1_1;
  c.make(s.triad(2, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Chord Adim1_1;
  c.make(s.triad(2, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Chord Asdim1_1;
  c.make(s.triad(2, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bfdim1_1;
  c.make(s.triad(2, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bdim1_1;

  c.make(s.triad(3, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Chord Cdim2_1;
  c.make(s.triad(3, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Csdim2_1;
  c.make(s.triad(3, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Chord Ddim2_1;
  c.make(s.triad(3, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Chord Dsdim2_1;
  c.make(s.triad(3, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Chord Efdim2_1;
  c.make(s.triad(3, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Chord Edim2_1;
  c.make(s.triad(3, n.F, dim), DEFAULT_GAIN, k.WHL) @=> Chord _Fdim2_1;
  c.make(s.triad(3, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Fsdim2_1;
  c.make(s.triad(3, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gfdim2_1;
  c.make(s.triad(3, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gdim2_1;
  c.make(s.triad(3, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gsdim2_1;
  c.make(s.triad(3, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Chord Afdim2_1;
  c.make(s.triad(3, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Chord Adim2_1;
  c.make(s.triad(3, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Chord Asdim2_1;
  c.make(s.triad(3, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bfdim2_1;
  c.make(s.triad(3, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bdim2_1;

  c.make(s.triad(4, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Chord Cdim3_1;
  c.make(s.triad(4, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Csdim3_1;
  c.make(s.triad(4, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Chord Ddim3_1;
  c.make(s.triad(4, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Chord Dsdim3_1;
  c.make(s.triad(4, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Chord Efdim3_1;
  c.make(s.triad(4, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Chord Edim3_1;
  c.make(s.triad(4, n.F, dim), DEFAULT_GAIN, k.WHL) @=> Chord _Fdim3_1;
  c.make(s.triad(4, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Fsdim3_1;
  c.make(s.triad(4, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gfdim3_1;
  c.make(s.triad(4, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gdim3_1;
  c.make(s.triad(4, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gsdim3_1;
  c.make(s.triad(4, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Chord Afdim3_1;
  c.make(s.triad(4, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Chord Adim3_1;
  c.make(s.triad(4, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Chord Asdim3_1;
  c.make(s.triad(4, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bfdim3_1;
  c.make(s.triad(4, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bdim3_1;

  c.make(s.triad(5, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Chord Cdim4_1;
  c.make(s.triad(5, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Csdim4_1;
  c.make(s.triad(5, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Chord Ddim4_1;
  c.make(s.triad(5, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Chord Dsdim4_1;
  c.make(s.triad(5, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Chord Efdim4_1;
  c.make(s.triad(5, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Chord Edim4_1;
  c.make(s.triad(5, n.F, dim), DEFAULT_GAIN, k.WHL) @=> Chord _Fdim4_1;
  c.make(s.triad(5, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Fsdim4_1;
  c.make(s.triad(5, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gfdim4_1;
  c.make(s.triad(5, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gdim4_1;
  c.make(s.triad(5, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gsdim4_1;
  c.make(s.triad(5, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Chord Afdim4_1;
  c.make(s.triad(5, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Chord Adim4_1;
  c.make(s.triad(5, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Chord Asdim4_1;
  c.make(s.triad(5, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bfdim4_1;
  c.make(s.triad(5, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bdim4_1;

  c.make(s.triad(6, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Chord Cdim5_1;
  c.make(s.triad(6, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Csdim5_1;
  c.make(s.triad(6, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Chord Ddim5_1;
  c.make(s.triad(6, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Chord Dsdim5_1;
  c.make(s.triad(6, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Chord Efdim5_1;
  c.make(s.triad(6, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Chord Edim5_1;
  c.make(s.triad(6, n.F, dim), DEFAULT_GAIN, k.WHL) @=> Chord _Fdim5_1;
  c.make(s.triad(6, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Fsdim5_1;
  c.make(s.triad(6, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gfdim5_1;
  c.make(s.triad(6, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gdim5_1;
  c.make(s.triad(6, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gsdim5_1;
  c.make(s.triad(6, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Chord Afdim5_1;
  c.make(s.triad(6, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Chord Adim5_1;
  c.make(s.triad(6, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Chord Asdim5_1;
  c.make(s.triad(6, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bfdim5_1;
  c.make(s.triad(6, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bdim5_1;

  c.make(s.triad(7, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Chord Cdim6_1;
  c.make(s.triad(7, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Csdim6_1;
  c.make(s.triad(7, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Chord Ddim6_1;
  c.make(s.triad(7, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Chord Dsdim6_1;
  c.make(s.triad(7, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Chord Efdim6_1;
  c.make(s.triad(7, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Chord Edim6_1;
  c.make(s.triad(7, n.F, dim), DEFAULT_GAIN, k.WHL) @=> Chord _Fdim6_1;
  c.make(s.triad(7, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Fsdim6_1;
  c.make(s.triad(7, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gfdim6_1;
  c.make(s.triad(7, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gdim6_1;
  c.make(s.triad(7, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gsdim6_1;
  c.make(s.triad(7, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Chord Afdim6_1;
  c.make(s.triad(7, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Chord Adim6_1;
  c.make(s.triad(7, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Chord Asdim6_1;
  c.make(s.triad(7, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bfdim6_1;
  c.make(s.triad(7, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bdim6_1;

  c.make(s.triad(8, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Chord Cdim7_1;
  c.make(s.triad(8, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Csdim7_1;
  c.make(s.triad(8, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Chord Ddim7_1;
  c.make(s.triad(8, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Chord Dsdim7_1;
  c.make(s.triad(8, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Chord Efdim7_1;
  c.make(s.triad(8, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Chord Edim7_1;
  c.make(s.triad(8, n.F, dim), DEFAULT_GAIN, k.WHL) @=> Chord _Fdim7_1;
  c.make(s.triad(8, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Fsdim7_1;
  c.make(s.triad(8, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gfdim7_1;
  c.make(s.triad(8, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gdim7_1;
  c.make(s.triad(8, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gsdim7_1;
  c.make(s.triad(8, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Chord Afdim7_1;
  c.make(s.triad(8, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Chord Adim7_1;
  c.make(s.triad(8, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Chord Asdim7_1;
  c.make(s.triad(8, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bfdim7_1;
  c.make(s.triad(8, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bdim7_1;

  c.make(s.triad(9, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Chord Cdim8_1;
  c.make(s.triad(9, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Csdim8_1;
  c.make(s.triad(9, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Chord Ddim8_1;
  c.make(s.triad(9, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Chord Dsdim8_1;
  c.make(s.triad(9, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Chord Efdim8_1;
  c.make(s.triad(9, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Chord Edim8_1;
  c.make(s.triad(9, n.F, dim), DEFAULT_GAIN, k.WHL) @=> Chord _Fdim8_1;
  c.make(s.triad(9, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Fsdim8_1;
  c.make(s.triad(9, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gfdim8_1;
  c.make(s.triad(9, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gdim8_1;
  c.make(s.triad(9, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Chord Gsdim8_1;
  c.make(s.triad(9, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Chord Afdim8_1;
  c.make(s.triad(9, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Chord Adim8_1;
  c.make(s.triad(9, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Chord Asdim8_1;
  c.make(s.triad(9, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bfdim8_1;
  c.make(s.triad(9, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Chord Bdim8_1;


  //
  // HLF
  //

  // Major
  // 0-based offsets
  c.make(s.triad(0, n.C, M), DEFAULT_GAIN, k.HLF) @=> Chord CM_2;
  c.make(s.triad(0, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> Chord CsM_2;
  c.make(s.triad(0, n.D, M), DEFAULT_GAIN, k.HLF) @=> Chord DM_2;
  c.make(s.triad(0, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> Chord DsM_2;
  c.make(s.triad(0, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> Chord EfM_2;
  c.make(s.triad(0, n.E, M), DEFAULT_GAIN, k.HLF) @=> Chord EM_2;
  c.make(s.triad(0, n.F, M), DEFAULT_GAIN, k.HLF) @=> Chord FM_2;
  c.make(s.triad(0, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> Chord FsM_2;
  c.make(s.triad(0, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> Chord GfM_2;
  c.make(s.triad(0, n.G, M), DEFAULT_GAIN, k.HLF) @=> Chord GM_2;
  c.make(s.triad(0, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> Chord GsM_2;
  c.make(s.triad(0, n.Af, M), DEFAULT_GAIN, k.HLF) @=> Chord AfM_2;
  c.make(s.triad(0, n.A, M), DEFAULT_GAIN, k.HLF) @=> Chord AM_2;
  c.make(s.triad(0, n.As, M), DEFAULT_GAIN, k.HLF) @=> Chord AsM_2;
  c.make(s.triad(0, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> Chord BfM_2;
  c.make(s.triad(0, n.B, M), DEFAULT_GAIN, k.HLF) @=> Chord BM_2;

  // constants predefined per octave
  c.make(s.triad(1, n.C, M), DEFAULT_GAIN, k.HLF) @=> Chord CM0_2;
  c.make(s.triad(1, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> Chord CsM0_2;
  c.make(s.triad(1, n.D, M), DEFAULT_GAIN, k.HLF) @=> Chord DM0_2;
  c.make(s.triad(1, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> Chord DsM0_2;
  c.make(s.triad(1, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> Chord EfM0_2;
  c.make(s.triad(1, n.E, M), DEFAULT_GAIN, k.HLF) @=> Chord EM0_2;
  c.make(s.triad(1, n.F, M), DEFAULT_GAIN, k.HLF) @=> Chord FM0_2;
  c.make(s.triad(1, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> Chord FsM0_2;
  c.make(s.triad(1, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> Chord GfM0_2;
  c.make(s.triad(1, n.G, M), DEFAULT_GAIN, k.HLF) @=> Chord GM0_2;
  c.make(s.triad(1, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> Chord GsM0_2;
  c.make(s.triad(1, n.Af, M), DEFAULT_GAIN, k.HLF) @=> Chord AfM0_2;
  c.make(s.triad(1, n.A, M), DEFAULT_GAIN, k.HLF) @=> Chord AM0_2;
  c.make(s.triad(1, n.As, M), DEFAULT_GAIN, k.HLF) @=> Chord AsM0_2;
  c.make(s.triad(1, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> Chord BfM0_2;
  c.make(s.triad(1, n.B, M), DEFAULT_GAIN, k.HLF) @=> Chord BM0_2;

  c.make(s.triad(2, n.C, M), DEFAULT_GAIN, k.HLF) @=> Chord CM1_2;
  c.make(s.triad(2, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> Chord CsM1_2;
  c.make(s.triad(2, n.D, M), DEFAULT_GAIN, k.HLF) @=> Chord DM1_2;
  c.make(s.triad(2, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> Chord DsM1_2;
  c.make(s.triad(2, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> Chord EfM1_2;
  c.make(s.triad(2, n.E, M), DEFAULT_GAIN, k.HLF) @=> Chord EM1_2;
  c.make(s.triad(2, n.F, M), DEFAULT_GAIN, k.HLF) @=> Chord FM1_2;
  c.make(s.triad(2, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> Chord FsM1_2;
  c.make(s.triad(2, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> Chord GfM1_2;
  c.make(s.triad(2, n.G, M), DEFAULT_GAIN, k.HLF) @=> Chord GM1_2;
  c.make(s.triad(2, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> Chord GsM1_2;
  c.make(s.triad(2, n.Af, M), DEFAULT_GAIN, k.HLF) @=> Chord AfM1_2;
  c.make(s.triad(2, n.A, M), DEFAULT_GAIN, k.HLF) @=> Chord AM1_2;
  c.make(s.triad(2, n.As, M), DEFAULT_GAIN, k.HLF) @=> Chord AsM1_2;
  c.make(s.triad(2, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> Chord BfM1_2;
  c.make(s.triad(2, n.B, M), DEFAULT_GAIN, k.HLF) @=> Chord BM1_2;

  c.make(s.triad(3, n.C, M), DEFAULT_GAIN, k.HLF) @=> Chord CM2_2;
  c.make(s.triad(3, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> Chord CsM2_2;
  c.make(s.triad(3, n.D, M), DEFAULT_GAIN, k.HLF) @=> Chord DM2_2;
  c.make(s.triad(3, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> Chord DsM2_2;
  c.make(s.triad(3, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> Chord EfM2_2;
  c.make(s.triad(3, n.E, M), DEFAULT_GAIN, k.HLF) @=> Chord EM2_2;
  c.make(s.triad(3, n.F, M), DEFAULT_GAIN, k.HLF) @=> Chord FM2_2;
  c.make(s.triad(3, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> Chord FsM2_2;
  c.make(s.triad(3, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> Chord GfM2_2;
  c.make(s.triad(3, n.G, M), DEFAULT_GAIN, k.HLF) @=> Chord GM2_2;
  c.make(s.triad(3, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> Chord GsM2_2;
  c.make(s.triad(3, n.Af, M), DEFAULT_GAIN, k.HLF) @=> Chord AfM2_2;
  c.make(s.triad(3, n.A, M), DEFAULT_GAIN, k.HLF) @=> Chord AM2_2;
  c.make(s.triad(3, n.As, M), DEFAULT_GAIN, k.HLF) @=> Chord AsM2_2;
  c.make(s.triad(3, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> Chord BfM2_2;
  c.make(s.triad(3, n.B, M), DEFAULT_GAIN, k.HLF) @=> Chord BM2_2;

  c.make(s.triad(4, n.C, M), DEFAULT_GAIN, k.HLF) @=> Chord CM3_2;
  c.make(s.triad(4, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> Chord CsM3_2;
  c.make(s.triad(4, n.D, M), DEFAULT_GAIN, k.HLF) @=> Chord DM3_2;
  c.make(s.triad(4, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> Chord DsM3_2;
  c.make(s.triad(4, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> Chord EfM3_2;
  c.make(s.triad(4, n.E, M), DEFAULT_GAIN, k.HLF) @=> Chord EM3_2;
  c.make(s.triad(4, n.F, M), DEFAULT_GAIN, k.HLF) @=> Chord FM3_2;
  c.make(s.triad(4, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> Chord FsM3_2;
  c.make(s.triad(4, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> Chord GfM3_2;
  c.make(s.triad(4, n.G, M), DEFAULT_GAIN, k.HLF) @=> Chord GM3_2;
  c.make(s.triad(4, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> Chord GsM3_2;
  c.make(s.triad(4, n.Af, M), DEFAULT_GAIN, k.HLF) @=> Chord AfM3_2;
  c.make(s.triad(4, n.A, M), DEFAULT_GAIN, k.HLF) @=> Chord AM3_2;
  c.make(s.triad(4, n.As, M), DEFAULT_GAIN, k.HLF) @=> Chord AsM3_2;
  c.make(s.triad(4, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> Chord BfM3_2;
  c.make(s.triad(4, n.B, M), DEFAULT_GAIN, k.HLF) @=> Chord BM3_2;

  c.make(s.triad(5, n.C, M), DEFAULT_GAIN, k.HLF) @=> Chord CM4_2;
  c.make(s.triad(5, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> Chord CsM4_2;
  c.make(s.triad(5, n.D, M), DEFAULT_GAIN, k.HLF) @=> Chord DM4_2;
  c.make(s.triad(5, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> Chord DsM4_2;
  c.make(s.triad(5, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> Chord EfM4_2;
  c.make(s.triad(5, n.E, M), DEFAULT_GAIN, k.HLF) @=> Chord EM4_2;
  c.make(s.triad(5, n.F, M), DEFAULT_GAIN, k.HLF) @=> Chord FM4_2;
  c.make(s.triad(5, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> Chord FsM4_2;
  c.make(s.triad(5, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> Chord GfM4_2;
  c.make(s.triad(5, n.G, M), DEFAULT_GAIN, k.HLF) @=> Chord GM4_2;
  c.make(s.triad(5, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> Chord GsM4_2;
  c.make(s.triad(5, n.Af, M), DEFAULT_GAIN, k.HLF) @=> Chord AfM4_2;
  c.make(s.triad(5, n.A, M), DEFAULT_GAIN, k.HLF) @=> Chord AM4_2;
  c.make(s.triad(5, n.As, M), DEFAULT_GAIN, k.HLF) @=> Chord AsM4_2;
  c.make(s.triad(5, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> Chord BfM4_2;
  c.make(s.triad(5, n.B, M), DEFAULT_GAIN, k.HLF) @=> Chord BM4_2;

  c.make(s.triad(6, n.C, M), DEFAULT_GAIN, k.HLF) @=> Chord CM5_2;
  c.make(s.triad(6, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> Chord CsM5_2;
  c.make(s.triad(6, n.D, M), DEFAULT_GAIN, k.HLF) @=> Chord DM5_2;
  c.make(s.triad(6, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> Chord DsM5_2;
  c.make(s.triad(6, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> Chord EfM5_2;
  c.make(s.triad(6, n.E, M), DEFAULT_GAIN, k.HLF) @=> Chord EM5_2;
  c.make(s.triad(6, n.F, M), DEFAULT_GAIN, k.HLF) @=> Chord FM5_2;
  c.make(s.triad(6, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> Chord FsM5_2;
  c.make(s.triad(6, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> Chord GfM5_2;
  c.make(s.triad(6, n.G, M), DEFAULT_GAIN, k.HLF) @=> Chord GM5_2;
  c.make(s.triad(6, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> Chord GsM5_2;
  c.make(s.triad(6, n.Af, M), DEFAULT_GAIN, k.HLF) @=> Chord AfM5_2;
  c.make(s.triad(6, n.A, M), DEFAULT_GAIN, k.HLF) @=> Chord AM5_2;
  c.make(s.triad(6, n.As, M), DEFAULT_GAIN, k.HLF) @=> Chord AsM5_2;
  c.make(s.triad(6, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> Chord BfM5_2;
  c.make(s.triad(6, n.B, M), DEFAULT_GAIN, k.HLF) @=> Chord BM5_2;

  c.make(s.triad(7, n.C, M), DEFAULT_GAIN, k.HLF) @=> Chord CM6_2;
  c.make(s.triad(7, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> Chord CsM6_2;
  c.make(s.triad(7, n.D, M), DEFAULT_GAIN, k.HLF) @=> Chord DM6_2;
  c.make(s.triad(7, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> Chord DsM6_2;
  c.make(s.triad(7, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> Chord EfM6_2;
  c.make(s.triad(7, n.E, M), DEFAULT_GAIN, k.HLF) @=> Chord EM6_2;
  c.make(s.triad(7, n.F, M), DEFAULT_GAIN, k.HLF) @=> Chord FM6_2;
  c.make(s.triad(7, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> Chord FsM6_2;
  c.make(s.triad(7, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> Chord GfM6_2;
  c.make(s.triad(7, n.G, M), DEFAULT_GAIN, k.HLF) @=> Chord GM6_2;
  c.make(s.triad(7, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> Chord GsM6_2;
  c.make(s.triad(7, n.Af, M), DEFAULT_GAIN, k.HLF) @=> Chord AfM6_2;
  c.make(s.triad(7, n.A, M), DEFAULT_GAIN, k.HLF) @=> Chord AM6_2;
  c.make(s.triad(7, n.As, M), DEFAULT_GAIN, k.HLF) @=> Chord AsM6_2;
  c.make(s.triad(7, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> Chord BfM6_2;
  c.make(s.triad(7, n.B, M), DEFAULT_GAIN, k.HLF) @=> Chord BM6_2;

  c.make(s.triad(8, n.C, M), DEFAULT_GAIN, k.HLF) @=> Chord CM7_2;
  c.make(s.triad(8, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> Chord CsM7_2;
  c.make(s.triad(8, n.D, M), DEFAULT_GAIN, k.HLF) @=> Chord DM7_2;
  c.make(s.triad(8, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> Chord DsM7_2;
  c.make(s.triad(8, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> Chord EfM7_2;
  c.make(s.triad(8, n.E, M), DEFAULT_GAIN, k.HLF) @=> Chord EM7_2;
  c.make(s.triad(8, n.F, M), DEFAULT_GAIN, k.HLF) @=> Chord FM7_2;
  c.make(s.triad(8, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> Chord FsM7_2;
  c.make(s.triad(8, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> Chord GfM7_2;
  c.make(s.triad(8, n.G, M), DEFAULT_GAIN, k.HLF) @=> Chord GM7_2;
  c.make(s.triad(8, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> Chord GsM7_2;
  c.make(s.triad(8, n.Af, M), DEFAULT_GAIN, k.HLF) @=> Chord AfM7_2;
  c.make(s.triad(8, n.A, M), DEFAULT_GAIN, k.HLF) @=> Chord AM7_2;
  c.make(s.triad(8, n.As, M), DEFAULT_GAIN, k.HLF) @=> Chord AsM7_2;
  c.make(s.triad(8, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> Chord BfM7_2;
  c.make(s.triad(8, n.B, M), DEFAULT_GAIN, k.HLF) @=> Chord BM7_2;

  c.make(s.triad(9, n.C, M), DEFAULT_GAIN, k.HLF) @=> Chord CM8_2;
  c.make(s.triad(9, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> Chord CsM8_2;
  c.make(s.triad(9, n.D, M), DEFAULT_GAIN, k.HLF) @=> Chord DM8_2;
  c.make(s.triad(9, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> Chord DsM8_2;
  c.make(s.triad(9, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> Chord EfM8_2;
  c.make(s.triad(9, n.E, M), DEFAULT_GAIN, k.HLF) @=> Chord EM8_2;
  c.make(s.triad(9, n.F, M), DEFAULT_GAIN, k.HLF) @=> Chord FM8_2;
  c.make(s.triad(9, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> Chord FsM8_2;
  c.make(s.triad(9, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> Chord GfM8_2;
  c.make(s.triad(9, n.G, M), DEFAULT_GAIN, k.HLF) @=> Chord GM8_2;
  c.make(s.triad(9, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> Chord GsM8_2;
  c.make(s.triad(9, n.Af, M), DEFAULT_GAIN, k.HLF) @=> Chord AfM8_2;
  c.make(s.triad(9, n.A, M), DEFAULT_GAIN, k.HLF) @=> Chord AM8_2;
  c.make(s.triad(9, n.As, M), DEFAULT_GAIN, k.HLF) @=> Chord AsM8_2;
  c.make(s.triad(9, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> Chord BfM8_2;
  c.make(s.triad(9, n.B, M), DEFAULT_GAIN, k.HLF) @=> Chord BM8_2;

  // Minor
  c.make(s.triad(0, n.C, m), DEFAULT_GAIN, k.HLF) @=> Chord Cm_2;
  c.make(s.triad(0, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Chord Csm_2;
  c.make(s.triad(0, n.D, m), DEFAULT_GAIN, k.HLF) @=> Chord Dm_2;
  c.make(s.triad(0, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Chord Dsm_2;
  c.make(s.triad(0, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Chord Efm_2;
  c.make(s.triad(0, n.E, m), DEFAULT_GAIN, k.HLF) @=> Chord Em_2;
  c.make(s.triad(0, n.F, m), DEFAULT_GAIN, k.HLF) @=> Chord _Fm_2;
  c.make(s.triad(0, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Chord Fsm_2;
  c.make(s.triad(0, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Chord Gfm_2;
  c.make(s.triad(0, n.G, m), DEFAULT_GAIN, k.HLF) @=> Chord Gm_2;
  c.make(s.triad(0, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Chord Gsm_2;
  c.make(s.triad(0, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Chord Afm_2;
  c.make(s.triad(0, n.A, m), DEFAULT_GAIN, k.HLF) @=> Chord Am_2;
  c.make(s.triad(0, n.As, m), DEFAULT_GAIN, k.HLF) @=> Chord Asm_2;
  c.make(s.triad(0, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Chord Bfm_2;
  c.make(s.triad(0, n.B, m), DEFAULT_GAIN, k.HLF) @=> Chord Bm_2;

  c.make(s.triad(1, n.C, m), DEFAULT_GAIN, k.HLF) @=> Chord Cm0_2;
  c.make(s.triad(1, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Chord Csm0_2;
  c.make(s.triad(1, n.D, m), DEFAULT_GAIN, k.HLF) @=> Chord Dm0_2;
  c.make(s.triad(1, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Chord Dsm0_2;
  c.make(s.triad(1, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Chord Efm0_2;
  c.make(s.triad(1, n.E, m), DEFAULT_GAIN, k.HLF) @=> Chord Em0_2;
  c.make(s.triad(1, n.F, m), DEFAULT_GAIN, k.HLF) @=> Chord _Fm0_2;
  c.make(s.triad(1, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Chord Fsm0_2;
  c.make(s.triad(1, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Chord Gfm0_2;
  c.make(s.triad(1, n.G, m), DEFAULT_GAIN, k.HLF) @=> Chord Gm0_2;
  c.make(s.triad(1, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Chord Gsm0_2;
  c.make(s.triad(1, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Chord Afm0_2;
  c.make(s.triad(1, n.A, m), DEFAULT_GAIN, k.HLF) @=> Chord Am0_2;
  c.make(s.triad(1, n.As, m), DEFAULT_GAIN, k.HLF) @=> Chord Asm0_2;
  c.make(s.triad(1, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Chord Bfm0_2;
  c.make(s.triad(1, n.B, m), DEFAULT_GAIN, k.HLF) @=> Chord Bm0_2;

  c.make(s.triad(2, n.C, m), DEFAULT_GAIN, k.HLF) @=> Chord Cm1_2;
  c.make(s.triad(2, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Chord Csm1_2;
  c.make(s.triad(2, n.D, m), DEFAULT_GAIN, k.HLF) @=> Chord Dm1_2;
  c.make(s.triad(2, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Chord Dsm1_2;
  c.make(s.triad(2, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Chord Efm1_2;
  c.make(s.triad(2, n.E, m), DEFAULT_GAIN, k.HLF) @=> Chord Em1_2;
  c.make(s.triad(2, n.F, m), DEFAULT_GAIN, k.HLF) @=> Chord _Fm1_2;
  c.make(s.triad(2, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Chord Fsm1_2;
  c.make(s.triad(2, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Chord Gfm1_2;
  c.make(s.triad(2, n.G, m), DEFAULT_GAIN, k.HLF) @=> Chord Gm1_2;
  c.make(s.triad(2, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Chord Gsm1_2;
  c.make(s.triad(2, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Chord Afm1_2;
  c.make(s.triad(2, n.A, m), DEFAULT_GAIN, k.HLF) @=> Chord Am1_2;
  c.make(s.triad(2, n.As, m), DEFAULT_GAIN, k.HLF) @=> Chord Asm1_2;
  c.make(s.triad(2, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Chord Bfm1_2;
  c.make(s.triad(2, n.B, m), DEFAULT_GAIN, k.HLF) @=> Chord Bm1_2;

  c.make(s.triad(3, n.C, m), DEFAULT_GAIN, k.HLF) @=> Chord Cm2_2;
  c.make(s.triad(3, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Chord Csm2_2;
  c.make(s.triad(3, n.D, m), DEFAULT_GAIN, k.HLF) @=> Chord Dm2_2;
  c.make(s.triad(3, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Chord Dsm2_2;
  c.make(s.triad(3, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Chord Efm2_2;
  c.make(s.triad(3, n.E, m), DEFAULT_GAIN, k.HLF) @=> Chord Em2_2;
  c.make(s.triad(3, n.F, m), DEFAULT_GAIN, k.HLF) @=> Chord _Fm2_2;
  c.make(s.triad(3, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Chord Fsm2_2;
  c.make(s.triad(3, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Chord Gfm2_2;
  c.make(s.triad(3, n.G, m), DEFAULT_GAIN, k.HLF) @=> Chord Gm2_2;
  c.make(s.triad(3, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Chord Gsm2_2;
  c.make(s.triad(3, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Chord Afm2_2;
  c.make(s.triad(3, n.A, m), DEFAULT_GAIN, k.HLF) @=> Chord Am2_2;
  c.make(s.triad(3, n.As, m), DEFAULT_GAIN, k.HLF) @=> Chord Asm2_2;
  c.make(s.triad(3, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Chord Bfm2_2;
  c.make(s.triad(3, n.B, m), DEFAULT_GAIN, k.HLF) @=> Chord Bm2_2;

  c.make(s.triad(4, n.C, m), DEFAULT_GAIN, k.HLF) @=> Chord Cm3_2;
  c.make(s.triad(4, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Chord Csm3_2;
  c.make(s.triad(4, n.D, m), DEFAULT_GAIN, k.HLF) @=> Chord Dm3_2;
  c.make(s.triad(4, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Chord Dsm3_2;
  c.make(s.triad(4, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Chord Efm3_2;
  c.make(s.triad(4, n.E, m), DEFAULT_GAIN, k.HLF) @=> Chord Em3_2;
  c.make(s.triad(4, n.F, m), DEFAULT_GAIN, k.HLF) @=> Chord _Fm3_2;
  c.make(s.triad(4, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Chord Fsm3_2;
  c.make(s.triad(4, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Chord Gfm3_2;
  c.make(s.triad(4, n.G, m), DEFAULT_GAIN, k.HLF) @=> Chord Gm3_2;
  c.make(s.triad(4, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Chord Gsm3_2;
  c.make(s.triad(4, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Chord Afm3_2;
  c.make(s.triad(4, n.A, m), DEFAULT_GAIN, k.HLF) @=> Chord Am3_2;
  c.make(s.triad(4, n.As, m), DEFAULT_GAIN, k.HLF) @=> Chord Asm3_2;
  c.make(s.triad(4, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Chord Bfm3_2;
  c.make(s.triad(4, n.B, m), DEFAULT_GAIN, k.HLF) @=> Chord Bm3_2;

  c.make(s.triad(5, n.C, m), DEFAULT_GAIN, k.HLF) @=> Chord Cm4_2;
  c.make(s.triad(5, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Chord Csm4_2;
  c.make(s.triad(5, n.D, m), DEFAULT_GAIN, k.HLF) @=> Chord Dm4_2;
  c.make(s.triad(5, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Chord Dsm4_2;
  c.make(s.triad(5, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Chord Efm4_2;
  c.make(s.triad(5, n.E, m), DEFAULT_GAIN, k.HLF) @=> Chord Em4_2;
  c.make(s.triad(5, n.F, m), DEFAULT_GAIN, k.HLF) @=> Chord _Fm4_2;
  c.make(s.triad(5, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Chord Fsm4_2;
  c.make(s.triad(5, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Chord Gfm4_2;
  c.make(s.triad(5, n.G, m), DEFAULT_GAIN, k.HLF) @=> Chord Gm4_2;
  c.make(s.triad(5, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Chord Gsm4_2;
  c.make(s.triad(5, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Chord Afm4_2;
  c.make(s.triad(5, n.A, m), DEFAULT_GAIN, k.HLF) @=> Chord Am4_2;
  c.make(s.triad(5, n.As, m), DEFAULT_GAIN, k.HLF) @=> Chord Asm4_2;
  c.make(s.triad(5, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Chord Bfm4_2;
  c.make(s.triad(5, n.B, m), DEFAULT_GAIN, k.HLF) @=> Chord Bm4_2;

  c.make(s.triad(6, n.C, m), DEFAULT_GAIN, k.HLF) @=> Chord Cm5_2;
  c.make(s.triad(6, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Chord Csm5_2;
  c.make(s.triad(6, n.D, m), DEFAULT_GAIN, k.HLF) @=> Chord Dm5_2;
  c.make(s.triad(6, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Chord Dsm5_2;
  c.make(s.triad(6, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Chord Efm5_2;
  c.make(s.triad(6, n.E, m), DEFAULT_GAIN, k.HLF) @=> Chord Em5_2;
  c.make(s.triad(6, n.F, m), DEFAULT_GAIN, k.HLF) @=> Chord _Fm5_2;
  c.make(s.triad(6, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Chord Fsm5_2;
  c.make(s.triad(6, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Chord Gfm5_2;
  c.make(s.triad(6, n.G, m), DEFAULT_GAIN, k.HLF) @=> Chord Gm5_2;
  c.make(s.triad(6, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Chord Gsm5_2;
  c.make(s.triad(6, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Chord Afm5_2;
  c.make(s.triad(6, n.A, m), DEFAULT_GAIN, k.HLF) @=> Chord Am5_2;
  c.make(s.triad(6, n.As, m), DEFAULT_GAIN, k.HLF) @=> Chord Asm5_2;
  c.make(s.triad(6, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Chord Bfm5_2;
  c.make(s.triad(6, n.B, m), DEFAULT_GAIN, k.HLF) @=> Chord Bm5_2;

  c.make(s.triad(7, n.C, m), DEFAULT_GAIN, k.HLF) @=> Chord Cm6_2;
  c.make(s.triad(7, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Chord Csm6_2;
  c.make(s.triad(7, n.D, m), DEFAULT_GAIN, k.HLF) @=> Chord Dm6_2;
  c.make(s.triad(7, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Chord Dsm6_2;
  c.make(s.triad(7, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Chord Efm6_2;
  c.make(s.triad(7, n.E, m), DEFAULT_GAIN, k.HLF) @=> Chord Em6_2;
  c.make(s.triad(7, n.F, m), DEFAULT_GAIN, k.HLF) @=> Chord _Fm6_2;
  c.make(s.triad(7, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Chord Fsm6_2;
  c.make(s.triad(7, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Chord Gfm6_2;
  c.make(s.triad(7, n.G, m), DEFAULT_GAIN, k.HLF) @=> Chord Gm6_2;
  c.make(s.triad(7, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Chord Gsm6_2;
  c.make(s.triad(7, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Chord Afm6_2;
  c.make(s.triad(7, n.A, m), DEFAULT_GAIN, k.HLF) @=> Chord Am6_2;
  c.make(s.triad(7, n.As, m), DEFAULT_GAIN, k.HLF) @=> Chord Asm6_2;
  c.make(s.triad(7, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Chord Bfm6_2;
  c.make(s.triad(7, n.B, m), DEFAULT_GAIN, k.HLF) @=> Chord Bm6_2;

  c.make(s.triad(8, n.C, m), DEFAULT_GAIN, k.HLF) @=> Chord Cm7_2;
  c.make(s.triad(8, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Chord Csm7_2;
  c.make(s.triad(8, n.D, m), DEFAULT_GAIN, k.HLF) @=> Chord Dm7_2;
  c.make(s.triad(8, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Chord Dsm7_2;
  c.make(s.triad(8, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Chord Efm7_2;
  c.make(s.triad(8, n.E, m), DEFAULT_GAIN, k.HLF) @=> Chord Em7_2;
  c.make(s.triad(8, n.F, m), DEFAULT_GAIN, k.HLF) @=> Chord _Fm7_2;
  c.make(s.triad(8, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Chord Fsm7_2;
  c.make(s.triad(8, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Chord Gfm7_2;
  c.make(s.triad(8, n.G, m), DEFAULT_GAIN, k.HLF) @=> Chord Gm7_2;
  c.make(s.triad(8, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Chord Gsm7_2;
  c.make(s.triad(8, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Chord Afm7_2;
  c.make(s.triad(8, n.A, m), DEFAULT_GAIN, k.HLF) @=> Chord Am7_2;
  c.make(s.triad(8, n.As, m), DEFAULT_GAIN, k.HLF) @=> Chord Asm7_2;
  c.make(s.triad(8, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Chord Bfm7_2;
  c.make(s.triad(8, n.B, m), DEFAULT_GAIN, k.HLF) @=> Chord Bm7_2;

  c.make(s.triad(9, n.C, m), DEFAULT_GAIN, k.HLF) @=> Chord Cm8_2;
  c.make(s.triad(9, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Chord Csm8_2;
  c.make(s.triad(9, n.D, m), DEFAULT_GAIN, k.HLF) @=> Chord Dm8_2;
  c.make(s.triad(9, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Chord Dsm8_2;
  c.make(s.triad(9, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Chord Efm8_2;
  c.make(s.triad(9, n.E, m), DEFAULT_GAIN, k.HLF) @=> Chord Em8_2;
  c.make(s.triad(9, n.F, m), DEFAULT_GAIN, k.HLF) @=> Chord _Fm8_2;
  c.make(s.triad(9, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Chord Fsm8_2;
  c.make(s.triad(9, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Chord Gfm8_2;
  c.make(s.triad(9, n.G, m), DEFAULT_GAIN, k.HLF) @=> Chord Gm8_2;
  c.make(s.triad(9, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Chord Gsm8_2;
  c.make(s.triad(9, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Chord Afm8_2;
  c.make(s.triad(9, n.A, m), DEFAULT_GAIN, k.HLF) @=> Chord Am8_2;
  c.make(s.triad(9, n.As, m), DEFAULT_GAIN, k.HLF) @=> Chord Asm8_2;
  c.make(s.triad(9, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Chord Bfm8_2;
  c.make(s.triad(9, n.B, m), DEFAULT_GAIN, k.HLF) @=> Chord Bm8_2;

  // Augmented
  c.make(s.triad(0, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Chord Caug_2;
  c.make(s.triad(0, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Csaug_2;
  c.make(s.triad(0, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Chord Daug_2;
  c.make(s.triad(0, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Chord Dsaug_2;
  c.make(s.triad(0, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Chord Efaug_2;
  c.make(s.triad(0, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Chord Eaug_2;
  c.make(s.triad(0, n.F, aug), DEFAULT_GAIN, k.HLF) @=> Chord _Faug_2;
  c.make(s.triad(0, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Fsaug_2;
  c.make(s.triad(0, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gfaug_2;
  c.make(s.triad(0, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gaug_2;
  c.make(s.triad(0, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gsaug_2;
  c.make(s.triad(0, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Chord Afaug_2;
  c.make(s.triad(0, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Chord Aaug_2;
  c.make(s.triad(0, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Chord Asaug_2;
  c.make(s.triad(0, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Bfaug_2;
  c.make(s.triad(0, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Chord Baug_2;

  c.make(s.triad(1, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Chord Caug0_2;
  c.make(s.triad(1, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Csaug0_2;
  c.make(s.triad(1, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Chord Daug0_2;
  c.make(s.triad(1, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Chord Dsaug0_2;
  c.make(s.triad(1, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Chord Efaug0_2;
  c.make(s.triad(1, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Chord Eaug0_2;
  c.make(s.triad(1, n.F, aug), DEFAULT_GAIN, k.HLF) @=> Chord _Faug0_2;
  c.make(s.triad(1, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Fsaug0_2;
  c.make(s.triad(1, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gfaug0_2;
  c.make(s.triad(1, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gaug0_2;
  c.make(s.triad(1, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gsaug0_2;
  c.make(s.triad(1, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Chord Afaug0_2;
  c.make(s.triad(1, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Chord Aaug0_2;
  c.make(s.triad(1, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Chord Asaug0_2;
  c.make(s.triad(1, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Bfaug0_2;
  c.make(s.triad(1, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Chord Baug0_2;

  c.make(s.triad(2, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Chord Caug1_2;
  c.make(s.triad(2, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Csaug1_2;
  c.make(s.triad(2, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Chord Daug1_2;
  c.make(s.triad(2, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Chord Dsaug1_2;
  c.make(s.triad(2, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Chord Efaug1_2;
  c.make(s.triad(2, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Chord Eaug1_2;
  c.make(s.triad(2, n.F, aug), DEFAULT_GAIN, k.HLF) @=> Chord _Faug1_2;
  c.make(s.triad(2, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Fsaug1_2;
  c.make(s.triad(2, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gfaug1_2;
  c.make(s.triad(2, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gaug1_2;
  c.make(s.triad(2, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gsaug1_2;
  c.make(s.triad(2, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Chord Afaug1_2;
  c.make(s.triad(2, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Chord Aaug1_2;
  c.make(s.triad(2, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Chord Asaug1_2;
  c.make(s.triad(2, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Bfaug1_2;
  c.make(s.triad(2, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Chord Baug1_2;

  c.make(s.triad(3, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Chord Caug2_2;
  c.make(s.triad(3, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Csaug2_2;
  c.make(s.triad(3, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Chord Daug2_2;
  c.make(s.triad(3, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Chord Dsaug2_2;
  c.make(s.triad(3, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Chord Efaug2_2;
  c.make(s.triad(3, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Chord Eaug2_2;
  c.make(s.triad(3, n.F, aug), DEFAULT_GAIN, k.HLF) @=> Chord _Faug2_2;
  c.make(s.triad(3, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Fsaug2_2;
  c.make(s.triad(3, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gfaug2_2;
  c.make(s.triad(3, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gaug2_2;
  c.make(s.triad(3, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gsaug2_2;
  c.make(s.triad(3, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Chord Afaug2_2;
  c.make(s.triad(3, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Chord Aaug2_2;
  c.make(s.triad(3, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Chord Asaug2_2;
  c.make(s.triad(3, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Bfaug2_2;
  c.make(s.triad(3, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Chord Baug2_2;

  c.make(s.triad(4, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Chord Caug3_2;
  c.make(s.triad(4, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Csaug3_2;
  c.make(s.triad(4, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Chord Daug3_2;
  c.make(s.triad(4, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Chord Dsaug3_2;
  c.make(s.triad(4, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Chord Efaug3_2;
  c.make(s.triad(4, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Chord Eaug3_2;
  c.make(s.triad(4, n.F, aug), DEFAULT_GAIN, k.HLF) @=> Chord _Faug3_2;
  c.make(s.triad(4, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Fsaug3_2;
  c.make(s.triad(4, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gfaug3_2;
  c.make(s.triad(4, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gaug3_2;
  c.make(s.triad(4, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gsaug3_2;
  c.make(s.triad(4, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Chord Afaug3_2;
  c.make(s.triad(4, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Chord Aaug3_2;
  c.make(s.triad(4, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Chord Asaug3_2;
  c.make(s.triad(4, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Bfaug3_2;
  c.make(s.triad(4, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Chord Baug3_2;

  c.make(s.triad(5, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Chord Caug4_2;
  c.make(s.triad(5, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Csaug4_2;
  c.make(s.triad(5, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Chord Daug4_2;
  c.make(s.triad(5, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Chord Dsaug4_2;
  c.make(s.triad(5, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Chord Efaug4_2;
  c.make(s.triad(5, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Chord Eaug4_2;
  c.make(s.triad(5, n.F, aug), DEFAULT_GAIN, k.HLF) @=> Chord _Faug4_2;
  c.make(s.triad(5, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Fsaug4_2;
  c.make(s.triad(5, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gfaug4_2;
  c.make(s.triad(5, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gaug4_2;
  c.make(s.triad(5, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gsaug4_2;
  c.make(s.triad(5, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Chord Afaug4_2;
  c.make(s.triad(5, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Chord Aaug4_2;
  c.make(s.triad(5, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Chord Asaug4_2;
  c.make(s.triad(5, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Bfaug4_2;
  c.make(s.triad(5, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Chord Baug4_2;

  c.make(s.triad(6, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Chord Caug5_2;
  c.make(s.triad(6, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Csaug5_2;
  c.make(s.triad(6, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Chord Daug5_2;
  c.make(s.triad(6, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Chord Dsaug5_2;
  c.make(s.triad(6, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Chord Efaug5_2;
  c.make(s.triad(6, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Chord Eaug5_2;
  c.make(s.triad(6, n.F, aug), DEFAULT_GAIN, k.HLF) @=> Chord _Faug5_2;
  c.make(s.triad(6, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Fsaug5_2;
  c.make(s.triad(6, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gfaug5_2;
  c.make(s.triad(6, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gaug5_2;
  c.make(s.triad(6, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gsaug5_2;
  c.make(s.triad(6, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Chord Afaug5_2;
  c.make(s.triad(6, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Chord Aaug5_2;
  c.make(s.triad(6, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Chord Asaug5_2;
  c.make(s.triad(6, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Bfaug5_2;
  c.make(s.triad(6, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Chord Baug5_2;

  c.make(s.triad(7, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Chord Caug6_2;
  c.make(s.triad(7, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Csaug6_2;
  c.make(s.triad(7, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Chord Daug6_2;
  c.make(s.triad(7, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Chord Dsaug6_2;
  c.make(s.triad(7, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Chord Efaug6_2;
  c.make(s.triad(7, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Chord Eaug6_2;
  c.make(s.triad(7, n.F, aug), DEFAULT_GAIN, k.HLF) @=> Chord _Faug6_2;
  c.make(s.triad(7, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Fsaug6_2;
  c.make(s.triad(7, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gfaug6_2;
  c.make(s.triad(7, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gaug6_2;
  c.make(s.triad(7, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gsaug6_2;
  c.make(s.triad(7, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Chord Afaug6_2;
  c.make(s.triad(7, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Chord Aaug6_2;
  c.make(s.triad(7, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Chord Asaug6_2;
  c.make(s.triad(7, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Bfaug6_2;
  c.make(s.triad(7, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Chord Baug6_2;

  c.make(s.triad(8, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Chord Caug7_2;
  c.make(s.triad(8, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Csaug7_2;
  c.make(s.triad(8, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Chord Daug7_2;
  c.make(s.triad(8, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Chord Dsaug7_2;
  c.make(s.triad(8, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Chord Efaug7_2;
  c.make(s.triad(8, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Chord Eaug7_2;
  c.make(s.triad(8, n.F, aug), DEFAULT_GAIN, k.HLF) @=> Chord _Faug7_2;
  c.make(s.triad(8, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Fsaug7_2;
  c.make(s.triad(8, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gfaug7_2;
  c.make(s.triad(8, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gaug7_2;
  c.make(s.triad(8, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gsaug7_2;
  c.make(s.triad(8, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Chord Afaug7_2;
  c.make(s.triad(8, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Chord Aaug7_2;
  c.make(s.triad(8, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Chord Asaug7_2;
  c.make(s.triad(8, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Bfaug7_2;
  c.make(s.triad(8, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Chord Baug7_2;

  c.make(s.triad(9, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Chord Caug8_2;
  c.make(s.triad(9, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Csaug8_2;
  c.make(s.triad(9, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Chord Daug8_2;
  c.make(s.triad(9, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Chord Dsaug8_2;
  c.make(s.triad(9, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Chord Efaug8_2;
  c.make(s.triad(9, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Chord Eaug8_2;
  c.make(s.triad(9, n.F, aug), DEFAULT_GAIN, k.HLF) @=> Chord _Faug8_2;
  c.make(s.triad(9, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Fsaug8_2;
  c.make(s.triad(9, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gfaug8_2;
  c.make(s.triad(9, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gaug8_2;
  c.make(s.triad(9, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Chord Gsaug8_2;
  c.make(s.triad(9, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Chord Afaug8_2;
  c.make(s.triad(9, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Chord Aaug8_2;
  c.make(s.triad(9, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Chord Asaug8_2;
  c.make(s.triad(9, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Chord Bfaug8_2;
  c.make(s.triad(9, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Chord Baug8_2;

  // Diminished  
  c.make(s.triad(0, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Chord Cdim_2;
  c.make(s.triad(0, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Csdim_2;
  c.make(s.triad(0, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Chord Ddim_2;
  c.make(s.triad(0, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Chord Dsdim_2;
  c.make(s.triad(0, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Chord Efdim_2;
  c.make(s.triad(0, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Chord Edim_2;
  c.make(s.triad(0, n.F, dim), DEFAULT_GAIN, k.HLF) @=> Chord _Fdim_2;
  c.make(s.triad(0, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Fsdim_2;
  c.make(s.triad(0, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gfdim_2;
  c.make(s.triad(0, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gdim_2;
  c.make(s.triad(0, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gsdim_2;
  c.make(s.triad(0, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Chord Afdim_2;
  c.make(s.triad(0, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Chord Adim_2;
  c.make(s.triad(0, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Chord Asdim_2;
  c.make(s.triad(0, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bfdim_2;
  c.make(s.triad(0, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bdim_2;

  c.make(s.triad(1, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Chord Cdim0_2;
  c.make(s.triad(1, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Csdim0_2;
  c.make(s.triad(1, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Chord Ddim0_2;
  c.make(s.triad(1, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Chord Dsdim0_2;
  c.make(s.triad(1, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Chord Efdim0_2;
  c.make(s.triad(1, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Chord Edim0_2;
  c.make(s.triad(1, n.F, dim), DEFAULT_GAIN, k.HLF) @=> Chord _Fdim0_2;
  c.make(s.triad(1, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Fsdim0_2;
  c.make(s.triad(1, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gfdim0_2;
  c.make(s.triad(1, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gdim0_2;
  c.make(s.triad(1, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gsdim0_2;
  c.make(s.triad(1, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Chord Afdim0_2;
  c.make(s.triad(1, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Chord Adim0_2;
  c.make(s.triad(1, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Chord Asdim0_2;
  c.make(s.triad(1, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bfdim0_2;
  c.make(s.triad(1, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bdim0_2;

  c.make(s.triad(2, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Chord Cdim1_2;
  c.make(s.triad(2, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Csdim1_2;
  c.make(s.triad(2, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Chord Ddim1_2;
  c.make(s.triad(2, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Chord Dsdim1_2;
  c.make(s.triad(2, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Chord Efdim1_2;
  c.make(s.triad(2, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Chord Edim1_2;
  c.make(s.triad(2, n.F, dim), DEFAULT_GAIN, k.HLF) @=> Chord _Fdim1_2;
  c.make(s.triad(2, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Fsdim1_2;
  c.make(s.triad(2, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gfdim1_2;
  c.make(s.triad(2, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gdim1_2;
  c.make(s.triad(2, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gsdim1_2;
  c.make(s.triad(2, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Chord Afdim1_2;
  c.make(s.triad(2, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Chord Adim1_2;
  c.make(s.triad(2, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Chord Asdim1_2;
  c.make(s.triad(2, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bfdim1_2;
  c.make(s.triad(2, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bdim1_2;

  c.make(s.triad(3, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Chord Cdim2_2;
  c.make(s.triad(3, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Csdim2_2;
  c.make(s.triad(3, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Chord Ddim2_2;
  c.make(s.triad(3, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Chord Dsdim2_2;
  c.make(s.triad(3, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Chord Efdim2_2;
  c.make(s.triad(3, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Chord Edim2_2;
  c.make(s.triad(3, n.F, dim), DEFAULT_GAIN, k.HLF) @=> Chord _Fdim2_2;
  c.make(s.triad(3, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Fsdim2_2;
  c.make(s.triad(3, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gfdim2_2;
  c.make(s.triad(3, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gdim2_2;
  c.make(s.triad(3, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gsdim2_2;
  c.make(s.triad(3, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Chord Afdim2_2;
  c.make(s.triad(3, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Chord Adim2_2;
  c.make(s.triad(3, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Chord Asdim2_2;
  c.make(s.triad(3, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bfdim2_2;
  c.make(s.triad(3, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bdim2_2;

  c.make(s.triad(4, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Chord Cdim3_2;
  c.make(s.triad(4, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Csdim3_2;
  c.make(s.triad(4, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Chord Ddim3_2;
  c.make(s.triad(4, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Chord Dsdim3_2;
  c.make(s.triad(4, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Chord Efdim3_2;
  c.make(s.triad(4, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Chord Edim3_2;
  c.make(s.triad(4, n.F, dim), DEFAULT_GAIN, k.HLF) @=> Chord _Fdim3_2;
  c.make(s.triad(4, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Fsdim3_2;
  c.make(s.triad(4, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gfdim3_2;
  c.make(s.triad(4, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gdim3_2;
  c.make(s.triad(4, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gsdim3_2;
  c.make(s.triad(4, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Chord Afdim3_2;
  c.make(s.triad(4, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Chord Adim3_2;
  c.make(s.triad(4, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Chord Asdim3_2;
  c.make(s.triad(4, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bfdim3_2;
  c.make(s.triad(4, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bdim3_2;

  c.make(s.triad(5, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Chord Cdim4_2;
  c.make(s.triad(5, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Csdim4_2;
  c.make(s.triad(5, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Chord Ddim4_2;
  c.make(s.triad(5, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Chord Dsdim4_2;
  c.make(s.triad(5, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Chord Efdim4_2;
  c.make(s.triad(5, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Chord Edim4_2;
  c.make(s.triad(5, n.F, dim), DEFAULT_GAIN, k.HLF) @=> Chord _Fdim4_2;
  c.make(s.triad(5, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Fsdim4_2;
  c.make(s.triad(5, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gfdim4_2;
  c.make(s.triad(5, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gdim4_2;
  c.make(s.triad(5, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gsdim4_2;
  c.make(s.triad(5, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Chord Afdim4_2;
  c.make(s.triad(5, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Chord Adim4_2;
  c.make(s.triad(5, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Chord Asdim4_2;
  c.make(s.triad(5, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bfdim4_2;
  c.make(s.triad(5, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bdim4_2;

  c.make(s.triad(6, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Chord Cdim5_2;
  c.make(s.triad(6, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Csdim5_2;
  c.make(s.triad(6, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Chord Ddim5_2;
  c.make(s.triad(6, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Chord Dsdim5_2;
  c.make(s.triad(6, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Chord Efdim5_2;
  c.make(s.triad(6, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Chord Edim5_2;
  c.make(s.triad(6, n.F, dim), DEFAULT_GAIN, k.HLF) @=> Chord _Fdim5_2;
  c.make(s.triad(6, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Fsdim5_2;
  c.make(s.triad(6, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gfdim5_2;
  c.make(s.triad(6, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gdim5_2;
  c.make(s.triad(6, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gsdim5_2;
  c.make(s.triad(6, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Chord Afdim5_2;
  c.make(s.triad(6, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Chord Adim5_2;
  c.make(s.triad(6, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Chord Asdim5_2;
  c.make(s.triad(6, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bfdim5_2;
  c.make(s.triad(6, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bdim5_2;

  c.make(s.triad(7, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Chord Cdim6_2;
  c.make(s.triad(7, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Csdim6_2;
  c.make(s.triad(7, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Chord Ddim6_2;
  c.make(s.triad(7, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Chord Dsdim6_2;
  c.make(s.triad(7, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Chord Efdim6_2;
  c.make(s.triad(7, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Chord Edim6_2;
  c.make(s.triad(7, n.F, dim), DEFAULT_GAIN, k.HLF) @=> Chord _Fdim6_2;
  c.make(s.triad(7, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Fsdim6_2;
  c.make(s.triad(7, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gfdim6_2;
  c.make(s.triad(7, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gdim6_2;
  c.make(s.triad(7, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gsdim6_2;
  c.make(s.triad(7, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Chord Afdim6_2;
  c.make(s.triad(7, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Chord Adim6_2;
  c.make(s.triad(7, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Chord Asdim6_2;
  c.make(s.triad(7, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bfdim6_2;
  c.make(s.triad(7, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bdim6_2;

  c.make(s.triad(8, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Chord Cdim7_2;
  c.make(s.triad(8, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Csdim7_2;
  c.make(s.triad(8, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Chord Ddim7_2;
  c.make(s.triad(8, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Chord Dsdim7_2;
  c.make(s.triad(8, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Chord Efdim7_2;
  c.make(s.triad(8, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Chord Edim7_2;
  c.make(s.triad(8, n.F, dim), DEFAULT_GAIN, k.HLF) @=> Chord _Fdim7_2;
  c.make(s.triad(8, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Fsdim7_2;
  c.make(s.triad(8, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gfdim7_2;
  c.make(s.triad(8, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gdim7_2;
  c.make(s.triad(8, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gsdim7_2;
  c.make(s.triad(8, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Chord Afdim7_2;
  c.make(s.triad(8, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Chord Adim7_2;
  c.make(s.triad(8, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Chord Asdim7_2;
  c.make(s.triad(8, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bfdim7_2;
  c.make(s.triad(8, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bdim7_2;

  c.make(s.triad(9, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Chord Cdim8_2;
  c.make(s.triad(9, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Csdim8_2;
  c.make(s.triad(9, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Chord Ddim8_2;
  c.make(s.triad(9, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Chord Dsdim8_2;
  c.make(s.triad(9, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Chord Efdim8_2;
  c.make(s.triad(9, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Chord Edim8_2;
  c.make(s.triad(9, n.F, dim), DEFAULT_GAIN, k.HLF) @=> Chord _Fdim8_2;
  c.make(s.triad(9, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Fsdim8_2;
  c.make(s.triad(9, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gfdim8_2;
  c.make(s.triad(9, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gdim8_2;
  c.make(s.triad(9, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Chord Gsdim8_2;
  c.make(s.triad(9, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Chord Afdim8_2;
  c.make(s.triad(9, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Chord Adim8_2;
  c.make(s.triad(9, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Chord Asdim8_2;
  c.make(s.triad(9, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bfdim8_2;
  c.make(s.triad(9, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Chord Bdim8_2;

  //
  // QRTR
  //

  // Major
  // 0-based offsets
  c.make(s.triad(0, n.C, M), DEFAULT_GAIN, k.QRTR) @=> Chord CM_4;
  c.make(s.triad(0, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> Chord CsM_4;
  c.make(s.triad(0, n.D, M), DEFAULT_GAIN, k.QRTR) @=> Chord DM_4;
  c.make(s.triad(0, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> Chord DsM_4;
  c.make(s.triad(0, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> Chord EfM_4;
  c.make(s.triad(0, n.E, M), DEFAULT_GAIN, k.QRTR) @=> Chord EM_4;
  c.make(s.triad(0, n.F, M), DEFAULT_GAIN, k.QRTR) @=> Chord FM_4;
  c.make(s.triad(0, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> Chord FsM_4;
  c.make(s.triad(0, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> Chord GfM_4;
  c.make(s.triad(0, n.G, M), DEFAULT_GAIN, k.QRTR) @=> Chord GM_4;
  c.make(s.triad(0, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> Chord GsM_4;
  c.make(s.triad(0, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> Chord AfM_4;
  c.make(s.triad(0, n.A, M), DEFAULT_GAIN, k.QRTR) @=> Chord AM_4;
  c.make(s.triad(0, n.As, M), DEFAULT_GAIN, k.QRTR) @=> Chord AsM_4;
  c.make(s.triad(0, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> Chord BfM_4;
  c.make(s.triad(0, n.B, M), DEFAULT_GAIN, k.QRTR) @=> Chord BM_4;

  // constants predefined per octave
  c.make(s.triad(1, n.C, M), DEFAULT_GAIN, k.QRTR) @=> Chord CM0_4;
  c.make(s.triad(1, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> Chord CsM0_4;
  c.make(s.triad(1, n.D, M), DEFAULT_GAIN, k.QRTR) @=> Chord DM0_4;
  c.make(s.triad(1, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> Chord DsM0_4;
  c.make(s.triad(1, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> Chord EfM0_4;
  c.make(s.triad(1, n.E, M), DEFAULT_GAIN, k.QRTR) @=> Chord EM0_4;
  c.make(s.triad(1, n.F, M), DEFAULT_GAIN, k.QRTR) @=> Chord FM0_4;
  c.make(s.triad(1, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> Chord FsM0_4;
  c.make(s.triad(1, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> Chord GfM0_4;
  c.make(s.triad(1, n.G, M), DEFAULT_GAIN, k.QRTR) @=> Chord GM0_4;
  c.make(s.triad(1, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> Chord GsM0_4;
  c.make(s.triad(1, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> Chord AfM0_4;
  c.make(s.triad(1, n.A, M), DEFAULT_GAIN, k.QRTR) @=> Chord AM0_4;
  c.make(s.triad(1, n.As, M), DEFAULT_GAIN, k.QRTR) @=> Chord AsM0_4;
  c.make(s.triad(1, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> Chord BfM0_4;
  c.make(s.triad(1, n.B, M), DEFAULT_GAIN, k.QRTR) @=> Chord BM0_4;

  c.make(s.triad(2, n.C, M), DEFAULT_GAIN, k.QRTR) @=> Chord CM1_4;
  c.make(s.triad(2, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> Chord CsM1_4;
  c.make(s.triad(2, n.D, M), DEFAULT_GAIN, k.QRTR) @=> Chord DM1_4;
  c.make(s.triad(2, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> Chord DsM1_4;
  c.make(s.triad(2, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> Chord EfM1_4;
  c.make(s.triad(2, n.E, M), DEFAULT_GAIN, k.QRTR) @=> Chord EM1_4;
  c.make(s.triad(2, n.F, M), DEFAULT_GAIN, k.QRTR) @=> Chord FM1_4;
  c.make(s.triad(2, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> Chord FsM1_4;
  c.make(s.triad(2, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> Chord GfM1_4;
  c.make(s.triad(2, n.G, M), DEFAULT_GAIN, k.QRTR) @=> Chord GM1_4;
  c.make(s.triad(2, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> Chord GsM1_4;
  c.make(s.triad(2, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> Chord AfM1_4;
  c.make(s.triad(2, n.A, M), DEFAULT_GAIN, k.QRTR) @=> Chord AM1_4;
  c.make(s.triad(2, n.As, M), DEFAULT_GAIN, k.QRTR) @=> Chord AsM1_4;
  c.make(s.triad(2, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> Chord BfM1_4;
  c.make(s.triad(2, n.B, M), DEFAULT_GAIN, k.QRTR) @=> Chord BM1_4;

  c.make(s.triad(3, n.C, M), DEFAULT_GAIN, k.QRTR) @=> Chord CM2_4;
  c.make(s.triad(3, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> Chord CsM2_4;
  c.make(s.triad(3, n.D, M), DEFAULT_GAIN, k.QRTR) @=> Chord DM2_4;
  c.make(s.triad(3, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> Chord DsM2_4;
  c.make(s.triad(3, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> Chord EfM2_4;
  c.make(s.triad(3, n.E, M), DEFAULT_GAIN, k.QRTR) @=> Chord EM2_4;
  c.make(s.triad(3, n.F, M), DEFAULT_GAIN, k.QRTR) @=> Chord FM2_4;
  c.make(s.triad(3, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> Chord FsM2_4;
  c.make(s.triad(3, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> Chord GfM2_4;
  c.make(s.triad(3, n.G, M), DEFAULT_GAIN, k.QRTR) @=> Chord GM2_4;
  c.make(s.triad(3, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> Chord GsM2_4;
  c.make(s.triad(3, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> Chord AfM2_4;
  c.make(s.triad(3, n.A, M), DEFAULT_GAIN, k.QRTR) @=> Chord AM2_4;
  c.make(s.triad(3, n.As, M), DEFAULT_GAIN, k.QRTR) @=> Chord AsM2_4;
  c.make(s.triad(3, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> Chord BfM2_4;
  c.make(s.triad(3, n.B, M), DEFAULT_GAIN, k.QRTR) @=> Chord BM2_4;

  c.make(s.triad(4, n.C, M), DEFAULT_GAIN, k.QRTR) @=> Chord CM3_4;
  c.make(s.triad(4, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> Chord CsM3_4;
  c.make(s.triad(4, n.D, M), DEFAULT_GAIN, k.QRTR) @=> Chord DM3_4;
  c.make(s.triad(4, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> Chord DsM3_4;
  c.make(s.triad(4, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> Chord EfM3_4;
  c.make(s.triad(4, n.E, M), DEFAULT_GAIN, k.QRTR) @=> Chord EM3_4;
  c.make(s.triad(4, n.F, M), DEFAULT_GAIN, k.QRTR) @=> Chord FM3_4;
  c.make(s.triad(4, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> Chord FsM3_4;
  c.make(s.triad(4, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> Chord GfM3_4;
  c.make(s.triad(4, n.G, M), DEFAULT_GAIN, k.QRTR) @=> Chord GM3_4;
  c.make(s.triad(4, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> Chord GsM3_4;
  c.make(s.triad(4, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> Chord AfM3_4;
  c.make(s.triad(4, n.A, M), DEFAULT_GAIN, k.QRTR) @=> Chord AM3_4;
  c.make(s.triad(4, n.As, M), DEFAULT_GAIN, k.QRTR) @=> Chord AsM3_4;
  c.make(s.triad(4, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> Chord BfM3_4;
  c.make(s.triad(4, n.B, M), DEFAULT_GAIN, k.QRTR) @=> Chord BM3_4;

  c.make(s.triad(5, n.C, M), DEFAULT_GAIN, k.QRTR) @=> Chord CM4_4;
  c.make(s.triad(5, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> Chord CsM4_4;
  c.make(s.triad(5, n.D, M), DEFAULT_GAIN, k.QRTR) @=> Chord DM4_4;
  c.make(s.triad(5, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> Chord DsM4_4;
  c.make(s.triad(5, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> Chord EfM4_4;
  c.make(s.triad(5, n.E, M), DEFAULT_GAIN, k.QRTR) @=> Chord EM4_4;
  c.make(s.triad(5, n.F, M), DEFAULT_GAIN, k.QRTR) @=> Chord FM4_4;
  c.make(s.triad(5, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> Chord FsM4_4;
  c.make(s.triad(5, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> Chord GfM4_4;
  c.make(s.triad(5, n.G, M), DEFAULT_GAIN, k.QRTR) @=> Chord GM4_4;
  c.make(s.triad(5, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> Chord GsM4_4;
  c.make(s.triad(5, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> Chord AfM4_4;
  c.make(s.triad(5, n.A, M), DEFAULT_GAIN, k.QRTR) @=> Chord AM4_4;
  c.make(s.triad(5, n.As, M), DEFAULT_GAIN, k.QRTR) @=> Chord AsM4_4;
  c.make(s.triad(5, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> Chord BfM4_4;
  c.make(s.triad(5, n.B, M), DEFAULT_GAIN, k.QRTR) @=> Chord BM4_4;

  c.make(s.triad(6, n.C, M), DEFAULT_GAIN, k.QRTR) @=> Chord CM5_4;
  c.make(s.triad(6, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> Chord CsM5_4;
  c.make(s.triad(6, n.D, M), DEFAULT_GAIN, k.QRTR) @=> Chord DM5_4;
  c.make(s.triad(6, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> Chord DsM5_4;
  c.make(s.triad(6, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> Chord EfM5_4;
  c.make(s.triad(6, n.E, M), DEFAULT_GAIN, k.QRTR) @=> Chord EM5_4;
  c.make(s.triad(6, n.F, M), DEFAULT_GAIN, k.QRTR) @=> Chord FM5_4;
  c.make(s.triad(6, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> Chord FsM5_4;
  c.make(s.triad(6, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> Chord GfM5_4;
  c.make(s.triad(6, n.G, M), DEFAULT_GAIN, k.QRTR) @=> Chord GM5_4;
  c.make(s.triad(6, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> Chord GsM5_4;
  c.make(s.triad(6, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> Chord AfM5_4;
  c.make(s.triad(6, n.A, M), DEFAULT_GAIN, k.QRTR) @=> Chord AM5_4;
  c.make(s.triad(6, n.As, M), DEFAULT_GAIN, k.QRTR) @=> Chord AsM5_4;
  c.make(s.triad(6, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> Chord BfM5_4;
  c.make(s.triad(6, n.B, M), DEFAULT_GAIN, k.QRTR) @=> Chord BM5_4;

  c.make(s.triad(7, n.C, M), DEFAULT_GAIN, k.QRTR) @=> Chord CM6_4;
  c.make(s.triad(7, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> Chord CsM6_4;
  c.make(s.triad(7, n.D, M), DEFAULT_GAIN, k.QRTR) @=> Chord DM6_4;
  c.make(s.triad(7, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> Chord DsM6_4;
  c.make(s.triad(7, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> Chord EfM6_4;
  c.make(s.triad(7, n.E, M), DEFAULT_GAIN, k.QRTR) @=> Chord EM6_4;
  c.make(s.triad(7, n.F, M), DEFAULT_GAIN, k.QRTR) @=> Chord FM6_4;
  c.make(s.triad(7, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> Chord FsM6_4;
  c.make(s.triad(7, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> Chord GfM6_4;
  c.make(s.triad(7, n.G, M), DEFAULT_GAIN, k.QRTR) @=> Chord GM6_4;
  c.make(s.triad(7, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> Chord GsM6_4;
  c.make(s.triad(7, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> Chord AfM6_4;
  c.make(s.triad(7, n.A, M), DEFAULT_GAIN, k.QRTR) @=> Chord AM6_4;
  c.make(s.triad(7, n.As, M), DEFAULT_GAIN, k.QRTR) @=> Chord AsM6_4;
  c.make(s.triad(7, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> Chord BfM6_4;
  c.make(s.triad(7, n.B, M), DEFAULT_GAIN, k.QRTR) @=> Chord BM6_4;

  c.make(s.triad(8, n.C, M), DEFAULT_GAIN, k.QRTR) @=> Chord CM7_4;
  c.make(s.triad(8, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> Chord CsM7_4;
  c.make(s.triad(8, n.D, M), DEFAULT_GAIN, k.QRTR) @=> Chord DM7_4;
  c.make(s.triad(8, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> Chord DsM7_4;
  c.make(s.triad(8, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> Chord EfM7_4;
  c.make(s.triad(8, n.E, M), DEFAULT_GAIN, k.QRTR) @=> Chord EM7_4;
  c.make(s.triad(8, n.F, M), DEFAULT_GAIN, k.QRTR) @=> Chord FM7_4;
  c.make(s.triad(8, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> Chord FsM7_4;
  c.make(s.triad(8, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> Chord GfM7_4;
  c.make(s.triad(8, n.G, M), DEFAULT_GAIN, k.QRTR) @=> Chord GM7_4;
  c.make(s.triad(8, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> Chord GsM7_4;
  c.make(s.triad(8, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> Chord AfM7_4;
  c.make(s.triad(8, n.A, M), DEFAULT_GAIN, k.QRTR) @=> Chord AM7_4;
  c.make(s.triad(8, n.As, M), DEFAULT_GAIN, k.QRTR) @=> Chord AsM7_4;
  c.make(s.triad(8, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> Chord BfM7_4;
  c.make(s.triad(8, n.B, M), DEFAULT_GAIN, k.QRTR) @=> Chord BM7_4;

  c.make(s.triad(9, n.C, M), DEFAULT_GAIN, k.QRTR) @=> Chord CM8_4;
  c.make(s.triad(9, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> Chord CsM8_4;
  c.make(s.triad(9, n.D, M), DEFAULT_GAIN, k.QRTR) @=> Chord DM8_4;
  c.make(s.triad(9, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> Chord DsM8_4;
  c.make(s.triad(9, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> Chord EfM8_4;
  c.make(s.triad(9, n.E, M), DEFAULT_GAIN, k.QRTR) @=> Chord EM8_4;
  c.make(s.triad(9, n.F, M), DEFAULT_GAIN, k.QRTR) @=> Chord FM8_4;
  c.make(s.triad(9, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> Chord FsM8_4;
  c.make(s.triad(9, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> Chord GfM8_4;
  c.make(s.triad(9, n.G, M), DEFAULT_GAIN, k.QRTR) @=> Chord GM8_4;
  c.make(s.triad(9, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> Chord GsM8_4;
  c.make(s.triad(9, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> Chord AfM8_4;
  c.make(s.triad(9, n.A, M), DEFAULT_GAIN, k.QRTR) @=> Chord AM8_4;
  c.make(s.triad(9, n.As, M), DEFAULT_GAIN, k.QRTR) @=> Chord AsM8_4;
  c.make(s.triad(9, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> Chord BfM8_4;
  c.make(s.triad(9, n.B, M), DEFAULT_GAIN, k.QRTR) @=> Chord BM8_4;

  // Minor
  c.make(s.triad(0, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Chord Cm_4;
  c.make(s.triad(0, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Csm_4;
  c.make(s.triad(0, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dm_4;
  c.make(s.triad(0, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dsm_4;
  c.make(s.triad(0, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Chord Efm_4;
  c.make(s.triad(0, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Chord Em_4;
  c.make(s.triad(0, n.F, m), DEFAULT_GAIN, k.QRTR) @=> Chord _Fm_4;
  c.make(s.triad(0, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Fsm_4;
  c.make(s.triad(0, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gfm_4;
  c.make(s.triad(0, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gm_4;
  c.make(s.triad(0, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gsm_4;
  c.make(s.triad(0, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Chord Afm_4;
  c.make(s.triad(0, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Chord Am_4;
  c.make(s.triad(0, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Chord Asm_4;
  c.make(s.triad(0, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bfm_4;
  c.make(s.triad(0, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bm_4;

  c.make(s.triad(1, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Chord Cm0_4;
  c.make(s.triad(1, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Csm0_4;
  c.make(s.triad(1, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dm0_4;
  c.make(s.triad(1, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dsm0_4;
  c.make(s.triad(1, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Chord Efm0_4;
  c.make(s.triad(1, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Chord Em0_4;
  c.make(s.triad(1, n.F, m), DEFAULT_GAIN, k.QRTR) @=> Chord _Fm0_4;
  c.make(s.triad(1, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Fsm0_4;
  c.make(s.triad(1, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gfm0_4;
  c.make(s.triad(1, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gm0_4;
  c.make(s.triad(1, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gsm0_4;
  c.make(s.triad(1, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Chord Afm0_4;
  c.make(s.triad(1, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Chord Am0_4;
  c.make(s.triad(1, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Chord Asm0_4;
  c.make(s.triad(1, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bfm0_4;
  c.make(s.triad(1, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bm0_4;

  c.make(s.triad(2, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Chord Cm1_4;
  c.make(s.triad(2, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Csm1_4;
  c.make(s.triad(2, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dm1_4;
  c.make(s.triad(2, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dsm1_4;
  c.make(s.triad(2, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Chord Efm1_4;
  c.make(s.triad(2, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Chord Em1_4;
  c.make(s.triad(2, n.F, m), DEFAULT_GAIN, k.QRTR) @=> Chord _Fm1_4;
  c.make(s.triad(2, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Fsm1_4;
  c.make(s.triad(2, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gfm1_4;
  c.make(s.triad(2, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gm1_4;
  c.make(s.triad(2, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gsm1_4;
  c.make(s.triad(2, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Chord Afm1_4;
  c.make(s.triad(2, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Chord Am1_4;
  c.make(s.triad(2, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Chord Asm1_4;
  c.make(s.triad(2, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bfm1_4;
  c.make(s.triad(2, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bm1_4;

  c.make(s.triad(3, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Chord Cm2_4;
  c.make(s.triad(3, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Csm2_4;
  c.make(s.triad(3, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dm2_4;
  c.make(s.triad(3, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dsm2_4;
  c.make(s.triad(3, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Chord Efm2_4;
  c.make(s.triad(3, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Chord Em2_4;
  c.make(s.triad(3, n.F, m), DEFAULT_GAIN, k.QRTR) @=> Chord _Fm2_4;
  c.make(s.triad(3, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Fsm2_4;
  c.make(s.triad(3, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gfm2_4;
  c.make(s.triad(3, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gm2_4;
  c.make(s.triad(3, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gsm2_4;
  c.make(s.triad(3, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Chord Afm2_4;
  c.make(s.triad(3, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Chord Am2_4;
  c.make(s.triad(3, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Chord Asm2_4;
  c.make(s.triad(3, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bfm2_4;
  c.make(s.triad(3, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bm2_4;

  c.make(s.triad(4, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Chord Cm3_4;
  c.make(s.triad(4, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Csm3_4;
  c.make(s.triad(4, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dm3_4;
  c.make(s.triad(4, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dsm3_4;
  c.make(s.triad(4, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Chord Efm3_4;
  c.make(s.triad(4, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Chord Em3_4;
  c.make(s.triad(4, n.F, m), DEFAULT_GAIN, k.QRTR) @=> Chord _Fm3_4;
  c.make(s.triad(4, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Fsm3_4;
  c.make(s.triad(4, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gfm3_4;
  c.make(s.triad(4, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gm3_4;
  c.make(s.triad(4, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gsm3_4;
  c.make(s.triad(4, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Chord Afm3_4;
  c.make(s.triad(4, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Chord Am3_4;
  c.make(s.triad(4, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Chord Asm3_4;
  c.make(s.triad(4, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bfm3_4;
  c.make(s.triad(4, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bm3_4;

  c.make(s.triad(5, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Chord Cm4_4;
  c.make(s.triad(5, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Csm4_4;
  c.make(s.triad(5, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dm4_4;
  c.make(s.triad(5, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dsm4_4;
  c.make(s.triad(5, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Chord Efm4_4;
  c.make(s.triad(5, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Chord Em4_4;
  c.make(s.triad(5, n.F, m), DEFAULT_GAIN, k.QRTR) @=> Chord _Fm4_4;
  c.make(s.triad(5, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Fsm4_4;
  c.make(s.triad(5, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gfm4_4;
  c.make(s.triad(5, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gm4_4;
  c.make(s.triad(5, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gsm4_4;
  c.make(s.triad(5, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Chord Afm4_4;
  c.make(s.triad(5, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Chord Am4_4;
  c.make(s.triad(5, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Chord Asm4_4;
  c.make(s.triad(5, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bfm4_4;
  c.make(s.triad(5, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bm4_4;

  c.make(s.triad(6, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Chord Cm5_4;
  c.make(s.triad(6, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Csm5_4;
  c.make(s.triad(6, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dm5_4;
  c.make(s.triad(6, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dsm5_4;
  c.make(s.triad(6, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Chord Efm5_4;
  c.make(s.triad(6, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Chord Em5_4;
  c.make(s.triad(6, n.F, m), DEFAULT_GAIN, k.QRTR) @=> Chord _Fm5_4;
  c.make(s.triad(6, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Fsm5_4;
  c.make(s.triad(6, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gfm5_4;
  c.make(s.triad(6, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gm5_4;
  c.make(s.triad(6, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gsm5_4;
  c.make(s.triad(6, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Chord Afm5_4;
  c.make(s.triad(6, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Chord Am5_4;
  c.make(s.triad(6, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Chord Asm5_4;
  c.make(s.triad(6, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bfm5_4;
  c.make(s.triad(6, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bm5_4;

  c.make(s.triad(7, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Chord Cm6_4;
  c.make(s.triad(7, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Csm6_4;
  c.make(s.triad(7, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dm6_4;
  c.make(s.triad(7, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dsm6_4;
  c.make(s.triad(7, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Chord Efm6_4;
  c.make(s.triad(7, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Chord Em6_4;
  c.make(s.triad(7, n.F, m), DEFAULT_GAIN, k.QRTR) @=> Chord _Fm6_4;
  c.make(s.triad(7, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Fsm6_4;
  c.make(s.triad(7, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gfm6_4;
  c.make(s.triad(7, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gm6_4;
  c.make(s.triad(7, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gsm6_4;
  c.make(s.triad(7, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Chord Afm6_4;
  c.make(s.triad(7, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Chord Am6_4;
  c.make(s.triad(7, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Chord Asm6_4;
  c.make(s.triad(7, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bfm6_4;
  c.make(s.triad(7, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bm6_4;

  c.make(s.triad(8, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Chord Cm7_4;
  c.make(s.triad(8, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Csm7_4;
  c.make(s.triad(8, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dm7_4;
  c.make(s.triad(8, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dsm7_4;
  c.make(s.triad(8, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Chord Efm7_4;
  c.make(s.triad(8, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Chord Em7_4;
  c.make(s.triad(8, n.F, m), DEFAULT_GAIN, k.QRTR) @=> Chord _Fm7_4;
  c.make(s.triad(8, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Fsm7_4;
  c.make(s.triad(8, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gfm7_4;
  c.make(s.triad(8, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gm7_4;
  c.make(s.triad(8, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gsm7_4;
  c.make(s.triad(8, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Chord Afm7_4;
  c.make(s.triad(8, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Chord Am7_4;
  c.make(s.triad(8, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Chord Asm7_4;
  c.make(s.triad(8, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bfm7_4;
  c.make(s.triad(8, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bm7_4;

  c.make(s.triad(9, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Chord Cm8_4;
  c.make(s.triad(9, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Csm8_4;
  c.make(s.triad(9, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dm8_4;
  c.make(s.triad(9, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Chord Dsm8_4;
  c.make(s.triad(9, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Chord Efm8_4;
  c.make(s.triad(9, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Chord Em8_4;
  c.make(s.triad(9, n.F, m), DEFAULT_GAIN, k.QRTR) @=> Chord _Fm8_4;
  c.make(s.triad(9, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Fsm8_4;
  c.make(s.triad(9, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gfm8_4;
  c.make(s.triad(9, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gm8_4;
  c.make(s.triad(9, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Chord Gsm8_4;
  c.make(s.triad(9, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Chord Afm8_4;
  c.make(s.triad(9, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Chord Am8_4;
  c.make(s.triad(9, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Chord Asm8_4;
  c.make(s.triad(9, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bfm8_4;
  c.make(s.triad(9, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Chord Bm8_4;

  // Augmented
  c.make(s.triad(0, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Caug_4;
  c.make(s.triad(0, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Csaug_4;
  c.make(s.triad(0, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Daug_4;
  c.make(s.triad(0, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Dsaug_4;
  c.make(s.triad(0, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Efaug_4;
  c.make(s.triad(0, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Eaug_4;
  c.make(s.triad(0, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> Chord _Faug_4;
  c.make(s.triad(0, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Fsaug_4;
  c.make(s.triad(0, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gfaug_4;
  c.make(s.triad(0, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gaug_4;
  c.make(s.triad(0, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gsaug_4;
  c.make(s.triad(0, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Afaug_4;
  c.make(s.triad(0, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Aaug_4;
  c.make(s.triad(0, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Asaug_4;
  c.make(s.triad(0, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Bfaug_4;
  c.make(s.triad(0, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Baug_4;

  c.make(s.triad(1, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Caug0_4;
  c.make(s.triad(1, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Csaug0_4;
  c.make(s.triad(1, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Daug0_4;
  c.make(s.triad(1, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Dsaug0_4;
  c.make(s.triad(1, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Efaug0_4;
  c.make(s.triad(1, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Eaug0_4;
  c.make(s.triad(1, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> Chord _Faug0_4;
  c.make(s.triad(1, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Fsaug0_4;
  c.make(s.triad(1, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gfaug0_4;
  c.make(s.triad(1, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gaug0_4;
  c.make(s.triad(1, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gsaug0_4;
  c.make(s.triad(1, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Afaug0_4;
  c.make(s.triad(1, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Aaug0_4;
  c.make(s.triad(1, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Asaug0_4;
  c.make(s.triad(1, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Bfaug0_4;
  c.make(s.triad(1, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Baug0_4;

  c.make(s.triad(2, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Caug1_4;
  c.make(s.triad(2, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Csaug1_4;
  c.make(s.triad(2, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Daug1_4;
  c.make(s.triad(2, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Dsaug1_4;
  c.make(s.triad(2, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Efaug1_4;
  c.make(s.triad(2, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Eaug1_4;
  c.make(s.triad(2, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> Chord _Faug1_4;
  c.make(s.triad(2, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Fsaug1_4;
  c.make(s.triad(2, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gfaug1_4;
  c.make(s.triad(2, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gaug1_4;
  c.make(s.triad(2, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gsaug1_4;
  c.make(s.triad(2, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Afaug1_4;
  c.make(s.triad(2, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Aaug1_4;
  c.make(s.triad(2, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Asaug1_4;
  c.make(s.triad(2, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Bfaug1_4;
  c.make(s.triad(2, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Baug1_4;

  c.make(s.triad(3, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Caug2_4;
  c.make(s.triad(3, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Csaug2_4;
  c.make(s.triad(3, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Daug2_4;
  c.make(s.triad(3, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Dsaug2_4;
  c.make(s.triad(3, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Efaug2_4;
  c.make(s.triad(3, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Eaug2_4;
  c.make(s.triad(3, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> Chord _Faug2_4;
  c.make(s.triad(3, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Fsaug2_4;
  c.make(s.triad(3, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gfaug2_4;
  c.make(s.triad(3, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gaug2_4;
  c.make(s.triad(3, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gsaug2_4;
  c.make(s.triad(3, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Afaug2_4;
  c.make(s.triad(3, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Aaug2_4;
  c.make(s.triad(3, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Asaug2_4;
  c.make(s.triad(3, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Bfaug2_4;
  c.make(s.triad(3, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Baug2_4;

  c.make(s.triad(4, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Caug3_4;
  c.make(s.triad(4, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Csaug3_4;
  c.make(s.triad(4, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Daug3_4;
  c.make(s.triad(4, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Dsaug3_4;
  c.make(s.triad(4, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Efaug3_4;
  c.make(s.triad(4, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Eaug3_4;
  c.make(s.triad(4, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> Chord _Faug3_4;
  c.make(s.triad(4, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Fsaug3_4;
  c.make(s.triad(4, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gfaug3_4;
  c.make(s.triad(4, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gaug3_4;
  c.make(s.triad(4, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gsaug3_4;
  c.make(s.triad(4, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Afaug3_4;
  c.make(s.triad(4, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Aaug3_4;
  c.make(s.triad(4, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Asaug3_4;
  c.make(s.triad(4, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Bfaug3_4;
  c.make(s.triad(4, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Baug3_4;

  c.make(s.triad(5, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Caug4_4;
  c.make(s.triad(5, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Csaug4_4;
  c.make(s.triad(5, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Daug4_4;
  c.make(s.triad(5, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Dsaug4_4;
  c.make(s.triad(5, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Efaug4_4;
  c.make(s.triad(5, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Eaug4_4;
  c.make(s.triad(5, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> Chord _Faug4_4;
  c.make(s.triad(5, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Fsaug4_4;
  c.make(s.triad(5, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gfaug4_4;
  c.make(s.triad(5, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gaug4_4;
  c.make(s.triad(5, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gsaug4_4;
  c.make(s.triad(5, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Afaug4_4;
  c.make(s.triad(5, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Aaug4_4;
  c.make(s.triad(5, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Asaug4_4;
  c.make(s.triad(5, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Bfaug4_4;
  c.make(s.triad(5, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Baug4_4;

  c.make(s.triad(6, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Caug5_4;
  c.make(s.triad(6, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Csaug5_4;
  c.make(s.triad(6, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Daug5_4;
  c.make(s.triad(6, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Dsaug5_4;
  c.make(s.triad(6, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Efaug5_4;
  c.make(s.triad(6, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Eaug5_4;
  c.make(s.triad(6, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> Chord _Faug5_4;
  c.make(s.triad(6, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Fsaug5_4;
  c.make(s.triad(6, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gfaug5_4;
  c.make(s.triad(6, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gaug5_4;
  c.make(s.triad(6, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gsaug5_4;
  c.make(s.triad(6, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Afaug5_4;
  c.make(s.triad(6, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Aaug5_4;
  c.make(s.triad(6, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Asaug5_4;
  c.make(s.triad(6, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Bfaug5_4;
  c.make(s.triad(6, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Baug5_4;

  c.make(s.triad(7, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Caug6_4;
  c.make(s.triad(7, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Csaug6_4;
  c.make(s.triad(7, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Daug6_4;
  c.make(s.triad(7, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Dsaug6_4;
  c.make(s.triad(7, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Efaug6_4;
  c.make(s.triad(7, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Eaug6_4;
  c.make(s.triad(7, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> Chord _Faug6_4;
  c.make(s.triad(7, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Fsaug6_4;
  c.make(s.triad(7, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gfaug6_4;
  c.make(s.triad(7, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gaug6_4;
  c.make(s.triad(7, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gsaug6_4;
  c.make(s.triad(7, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Afaug6_4;
  c.make(s.triad(7, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Aaug6_4;
  c.make(s.triad(7, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Asaug6_4;
  c.make(s.triad(7, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Bfaug6_4;
  c.make(s.triad(7, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Baug6_4;

  c.make(s.triad(8, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Caug7_4;
  c.make(s.triad(8, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Csaug7_4;
  c.make(s.triad(8, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Daug7_4;
  c.make(s.triad(8, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Dsaug7_4;
  c.make(s.triad(8, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Efaug7_4;
  c.make(s.triad(8, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Eaug7_4;
  c.make(s.triad(8, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> Chord _Faug7_4;
  c.make(s.triad(8, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Fsaug7_4;
  c.make(s.triad(8, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gfaug7_4;
  c.make(s.triad(8, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gaug7_4;
  c.make(s.triad(8, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gsaug7_4;
  c.make(s.triad(8, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Afaug7_4;
  c.make(s.triad(8, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Aaug7_4;
  c.make(s.triad(8, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Asaug7_4;
  c.make(s.triad(8, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Bfaug7_4;
  c.make(s.triad(8, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Baug7_4;

  c.make(s.triad(9, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Caug8_4;
  c.make(s.triad(9, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Csaug8_4;
  c.make(s.triad(9, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Daug8_4;
  c.make(s.triad(9, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Dsaug8_4;
  c.make(s.triad(9, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Efaug8_4;
  c.make(s.triad(9, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Eaug8_4;
  c.make(s.triad(9, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> Chord _Faug8_4;
  c.make(s.triad(9, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Fsaug8_4;
  c.make(s.triad(9, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gfaug8_4;
  c.make(s.triad(9, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gaug8_4;
  c.make(s.triad(9, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Gsaug8_4;
  c.make(s.triad(9, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Afaug8_4;
  c.make(s.triad(9, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Aaug8_4;
  c.make(s.triad(9, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Asaug8_4;
  c.make(s.triad(9, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Bfaug8_4;
  c.make(s.triad(9, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Chord Baug8_4;

  // Diminished  
  c.make(s.triad(0, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Cdim_4;
  c.make(s.triad(0, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Csdim_4;
  c.make(s.triad(0, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Ddim_4;
  c.make(s.triad(0, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Dsdim_4;
  c.make(s.triad(0, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Efdim_4;
  c.make(s.triad(0, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Edim_4;
  c.make(s.triad(0, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> Chord _Fdim_4;
  c.make(s.triad(0, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Fsdim_4;
  c.make(s.triad(0, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gfdim_4;
  c.make(s.triad(0, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gdim_4;
  c.make(s.triad(0, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gsdim_4;
  c.make(s.triad(0, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Afdim_4;
  c.make(s.triad(0, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Adim_4;
  c.make(s.triad(0, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Asdim_4;
  c.make(s.triad(0, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bfdim_4;
  c.make(s.triad(0, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bdim_4;

  c.make(s.triad(1, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Cdim0_4;
  c.make(s.triad(1, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Csdim0_4;
  c.make(s.triad(1, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Ddim0_4;
  c.make(s.triad(1, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Dsdim0_4;
  c.make(s.triad(1, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Efdim0_4;
  c.make(s.triad(1, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Edim0_4;
  c.make(s.triad(1, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> Chord _Fdim0_4;
  c.make(s.triad(1, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Fsdim0_4;
  c.make(s.triad(1, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gfdim0_4;
  c.make(s.triad(1, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gdim0_4;
  c.make(s.triad(1, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gsdim0_4;
  c.make(s.triad(1, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Afdim0_4;
  c.make(s.triad(1, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Adim0_4;
  c.make(s.triad(1, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Asdim0_4;
  c.make(s.triad(1, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bfdim0_4;
  c.make(s.triad(1, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bdim0_4;

  c.make(s.triad(2, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Cdim1_4;
  c.make(s.triad(2, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Csdim1_4;
  c.make(s.triad(2, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Ddim1_4;
  c.make(s.triad(2, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Dsdim1_4;
  c.make(s.triad(2, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Efdim1_4;
  c.make(s.triad(2, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Edim1_4;
  c.make(s.triad(2, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> Chord _Fdim1_4;
  c.make(s.triad(2, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Fsdim1_4;
  c.make(s.triad(2, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gfdim1_4;
  c.make(s.triad(2, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gdim1_4;
  c.make(s.triad(2, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gsdim1_4;
  c.make(s.triad(2, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Afdim1_4;
  c.make(s.triad(2, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Adim1_4;
  c.make(s.triad(2, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Asdim1_4;
  c.make(s.triad(2, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bfdim1_4;
  c.make(s.triad(2, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bdim1_4;

  c.make(s.triad(3, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Cdim2_4;
  c.make(s.triad(3, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Csdim2_4;
  c.make(s.triad(3, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Ddim2_4;
  c.make(s.triad(3, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Dsdim2_4;
  c.make(s.triad(3, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Efdim2_4;
  c.make(s.triad(3, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Edim2_4;
  c.make(s.triad(3, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> Chord _Fdim2_4;
  c.make(s.triad(3, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Fsdim2_4;
  c.make(s.triad(3, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gfdim2_4;
  c.make(s.triad(3, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gdim2_4;
  c.make(s.triad(3, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gsdim2_4;
  c.make(s.triad(3, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Afdim2_4;
  c.make(s.triad(3, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Adim2_4;
  c.make(s.triad(3, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Asdim2_4;
  c.make(s.triad(3, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bfdim2_4;
  c.make(s.triad(3, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bdim2_4;

  c.make(s.triad(4, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Cdim3_4;
  c.make(s.triad(4, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Csdim3_4;
  c.make(s.triad(4, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Ddim3_4;
  c.make(s.triad(4, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Dsdim3_4;
  c.make(s.triad(4, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Efdim3_4;
  c.make(s.triad(4, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Edim3_4;
  c.make(s.triad(4, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> Chord _Fdim3_4;
  c.make(s.triad(4, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Fsdim3_4;
  c.make(s.triad(4, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gfdim3_4;
  c.make(s.triad(4, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gdim3_4;
  c.make(s.triad(4, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gsdim3_4;
  c.make(s.triad(4, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Afdim3_4;
  c.make(s.triad(4, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Adim3_4;
  c.make(s.triad(4, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Asdim3_4;
  c.make(s.triad(4, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bfdim3_4;
  c.make(s.triad(4, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bdim3_4;

  c.make(s.triad(5, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Cdim4_4;
  c.make(s.triad(5, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Csdim4_4;
  c.make(s.triad(5, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Ddim4_4;
  c.make(s.triad(5, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Dsdim4_4;
  c.make(s.triad(5, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Efdim4_4;
  c.make(s.triad(5, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Edim4_4;
  c.make(s.triad(5, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> Chord _Fdim4_4;
  c.make(s.triad(5, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Fsdim4_4;
  c.make(s.triad(5, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gfdim4_4;
  c.make(s.triad(5, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gdim4_4;
  c.make(s.triad(5, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gsdim4_4;
  c.make(s.triad(5, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Afdim4_4;
  c.make(s.triad(5, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Adim4_4;
  c.make(s.triad(5, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Asdim4_4;
  c.make(s.triad(5, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bfdim4_4;
  c.make(s.triad(5, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bdim4_4;

  c.make(s.triad(6, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Cdim5_4;
  c.make(s.triad(6, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Csdim5_4;
  c.make(s.triad(6, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Ddim5_4;
  c.make(s.triad(6, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Dsdim5_4;
  c.make(s.triad(6, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Efdim5_4;
  c.make(s.triad(6, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Edim5_4;
  c.make(s.triad(6, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> Chord _Fdim5_4;
  c.make(s.triad(6, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Fsdim5_4;
  c.make(s.triad(6, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gfdim5_4;
  c.make(s.triad(6, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gdim5_4;
  c.make(s.triad(6, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gsdim5_4;
  c.make(s.triad(6, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Afdim5_4;
  c.make(s.triad(6, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Adim5_4;
  c.make(s.triad(6, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Asdim5_4;
  c.make(s.triad(6, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bfdim5_4;
  c.make(s.triad(6, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bdim5_4;

  c.make(s.triad(7, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Cdim6_4;
  c.make(s.triad(7, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Csdim6_4;
  c.make(s.triad(7, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Ddim6_4;
  c.make(s.triad(7, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Dsdim6_4;
  c.make(s.triad(7, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Efdim6_4;
  c.make(s.triad(7, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Edim6_4;
  c.make(s.triad(7, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> Chord _Fdim6_4;
  c.make(s.triad(7, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Fsdim6_4;
  c.make(s.triad(7, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gfdim6_4;
  c.make(s.triad(7, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gdim6_4;
  c.make(s.triad(7, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gsdim6_4;
  c.make(s.triad(7, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Afdim6_4;
  c.make(s.triad(7, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Adim6_4;
  c.make(s.triad(7, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Asdim6_4;
  c.make(s.triad(7, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bfdim6_4;
  c.make(s.triad(7, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bdim6_4;

  c.make(s.triad(8, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Cdim7_4;
  c.make(s.triad(8, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Csdim7_4;
  c.make(s.triad(8, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Ddim7_4;
  c.make(s.triad(8, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Dsdim7_4;
  c.make(s.triad(8, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Efdim7_4;
  c.make(s.triad(8, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Edim7_4;
  c.make(s.triad(8, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> Chord _Fdim7_4;
  c.make(s.triad(8, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Fsdim7_4;
  c.make(s.triad(8, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gfdim7_4;
  c.make(s.triad(8, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gdim7_4;
  c.make(s.triad(8, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gsdim7_4;
  c.make(s.triad(8, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Afdim7_4;
  c.make(s.triad(8, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Adim7_4;
  c.make(s.triad(8, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Asdim7_4;
  c.make(s.triad(8, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bfdim7_4;
  c.make(s.triad(8, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bdim7_4;

  c.make(s.triad(9, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Cdim8_4;
  c.make(s.triad(9, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Csdim8_4;
  c.make(s.triad(9, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Ddim8_4;
  c.make(s.triad(9, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Dsdim8_4;
  c.make(s.triad(9, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Efdim8_4;
  c.make(s.triad(9, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Edim8_4;
  c.make(s.triad(9, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> Chord _Fdim8_4;
  c.make(s.triad(9, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Fsdim8_4;
  c.make(s.triad(9, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gfdim8_4;
  c.make(s.triad(9, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gdim8_4;
  c.make(s.triad(9, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Gsdim8_4;
  c.make(s.triad(9, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Afdim8_4;
  c.make(s.triad(9, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Adim8_4;
  c.make(s.triad(9, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Asdim8_4;
  c.make(s.triad(9, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bfdim8_4;
  c.make(s.triad(9, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Chord Bdim8_4;

  //
  // ETH
  //

  // Major
  // 0-based offsets
  c.make(s.triad(0, n.C, M), DEFAULT_GAIN, k.ETH) @=> Chord CM_8;
  c.make(s.triad(0, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> Chord CsM_8;
  c.make(s.triad(0, n.D, M), DEFAULT_GAIN, k.ETH) @=> Chord DM_8;
  c.make(s.triad(0, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> Chord DsM_8;
  c.make(s.triad(0, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> Chord EfM_8;
  c.make(s.triad(0, n.E, M), DEFAULT_GAIN, k.ETH) @=> Chord EM_8;
  c.make(s.triad(0, n.F, M), DEFAULT_GAIN, k.ETH) @=> Chord FM_8;
  c.make(s.triad(0, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> Chord FsM_8;
  c.make(s.triad(0, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> Chord GfM_8;
  c.make(s.triad(0, n.G, M), DEFAULT_GAIN, k.ETH) @=> Chord GM_8;
  c.make(s.triad(0, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> Chord GsM_8;
  c.make(s.triad(0, n.Af, M), DEFAULT_GAIN, k.ETH) @=> Chord AfM_8;
  c.make(s.triad(0, n.A, M), DEFAULT_GAIN, k.ETH) @=> Chord AM_8;
  c.make(s.triad(0, n.As, M), DEFAULT_GAIN, k.ETH) @=> Chord AsM_8;
  c.make(s.triad(0, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> Chord BfM_8;
  c.make(s.triad(0, n.B, M), DEFAULT_GAIN, k.ETH) @=> Chord BM_8;

  // constants predefined per octave
  c.make(s.triad(1, n.C, M), DEFAULT_GAIN, k.ETH) @=> Chord CM0_8;
  c.make(s.triad(1, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> Chord CsM0_8;
  c.make(s.triad(1, n.D, M), DEFAULT_GAIN, k.ETH) @=> Chord DM0_8;
  c.make(s.triad(1, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> Chord DsM0_8;
  c.make(s.triad(1, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> Chord EfM0_8;
  c.make(s.triad(1, n.E, M), DEFAULT_GAIN, k.ETH) @=> Chord EM0_8;
  c.make(s.triad(1, n.F, M), DEFAULT_GAIN, k.ETH) @=> Chord FM0_8;
  c.make(s.triad(1, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> Chord FsM0_8;
  c.make(s.triad(1, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> Chord GfM0_8;
  c.make(s.triad(1, n.G, M), DEFAULT_GAIN, k.ETH) @=> Chord GM0_8;
  c.make(s.triad(1, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> Chord GsM0_8;
  c.make(s.triad(1, n.Af, M), DEFAULT_GAIN, k.ETH) @=> Chord AfM0_8;
  c.make(s.triad(1, n.A, M), DEFAULT_GAIN, k.ETH) @=> Chord AM0_8;
  c.make(s.triad(1, n.As, M), DEFAULT_GAIN, k.ETH) @=> Chord AsM0_8;
  c.make(s.triad(1, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> Chord BfM0_8;
  c.make(s.triad(1, n.B, M), DEFAULT_GAIN, k.ETH) @=> Chord BM0_8;

  c.make(s.triad(2, n.C, M), DEFAULT_GAIN, k.ETH) @=> Chord CM1_8;
  c.make(s.triad(2, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> Chord CsM1_8;
  c.make(s.triad(2, n.D, M), DEFAULT_GAIN, k.ETH) @=> Chord DM1_8;
  c.make(s.triad(2, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> Chord DsM1_8;
  c.make(s.triad(2, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> Chord EfM1_8;
  c.make(s.triad(2, n.E, M), DEFAULT_GAIN, k.ETH) @=> Chord EM1_8;
  c.make(s.triad(2, n.F, M), DEFAULT_GAIN, k.ETH) @=> Chord FM1_8;
  c.make(s.triad(2, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> Chord FsM1_8;
  c.make(s.triad(2, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> Chord GfM1_8;
  c.make(s.triad(2, n.G, M), DEFAULT_GAIN, k.ETH) @=> Chord GM1_8;
  c.make(s.triad(2, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> Chord GsM1_8;
  c.make(s.triad(2, n.Af, M), DEFAULT_GAIN, k.ETH) @=> Chord AfM1_8;
  c.make(s.triad(2, n.A, M), DEFAULT_GAIN, k.ETH) @=> Chord AM1_8;
  c.make(s.triad(2, n.As, M), DEFAULT_GAIN, k.ETH) @=> Chord AsM1_8;
  c.make(s.triad(2, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> Chord BfM1_8;
  c.make(s.triad(2, n.B, M), DEFAULT_GAIN, k.ETH) @=> Chord BM1_8;

  c.make(s.triad(3, n.C, M), DEFAULT_GAIN, k.ETH) @=> Chord CM2_8;
  c.make(s.triad(3, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> Chord CsM2_8;
  c.make(s.triad(3, n.D, M), DEFAULT_GAIN, k.ETH) @=> Chord DM2_8;
  c.make(s.triad(3, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> Chord DsM2_8;
  c.make(s.triad(3, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> Chord EfM2_8;
  c.make(s.triad(3, n.E, M), DEFAULT_GAIN, k.ETH) @=> Chord EM2_8;
  c.make(s.triad(3, n.F, M), DEFAULT_GAIN, k.ETH) @=> Chord FM2_8;
  c.make(s.triad(3, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> Chord FsM2_8;
  c.make(s.triad(3, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> Chord GfM2_8;
  c.make(s.triad(3, n.G, M), DEFAULT_GAIN, k.ETH) @=> Chord GM2_8;
  c.make(s.triad(3, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> Chord GsM2_8;
  c.make(s.triad(3, n.Af, M), DEFAULT_GAIN, k.ETH) @=> Chord AfM2_8;
  c.make(s.triad(3, n.A, M), DEFAULT_GAIN, k.ETH) @=> Chord AM2_8;
  c.make(s.triad(3, n.As, M), DEFAULT_GAIN, k.ETH) @=> Chord AsM2_8;
  c.make(s.triad(3, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> Chord BfM2_8;
  c.make(s.triad(3, n.B, M), DEFAULT_GAIN, k.ETH) @=> Chord BM2_8;

  c.make(s.triad(4, n.C, M), DEFAULT_GAIN, k.ETH) @=> Chord CM3_8;
  c.make(s.triad(4, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> Chord CsM3_8;
  c.make(s.triad(4, n.D, M), DEFAULT_GAIN, k.ETH) @=> Chord DM3_8;
  c.make(s.triad(4, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> Chord DsM3_8;
  c.make(s.triad(4, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> Chord EfM3_8;
  c.make(s.triad(4, n.E, M), DEFAULT_GAIN, k.ETH) @=> Chord EM3_8;
  c.make(s.triad(4, n.F, M), DEFAULT_GAIN, k.ETH) @=> Chord FM3_8;
  c.make(s.triad(4, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> Chord FsM3_8;
  c.make(s.triad(4, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> Chord GfM3_8;
  c.make(s.triad(4, n.G, M), DEFAULT_GAIN, k.ETH) @=> Chord GM3_8;
  c.make(s.triad(4, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> Chord GsM3_8;
  c.make(s.triad(4, n.Af, M), DEFAULT_GAIN, k.ETH) @=> Chord AfM3_8;
  c.make(s.triad(4, n.A, M), DEFAULT_GAIN, k.ETH) @=> Chord AM3_8;
  c.make(s.triad(4, n.As, M), DEFAULT_GAIN, k.ETH) @=> Chord AsM3_8;
  c.make(s.triad(4, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> Chord BfM3_8;
  c.make(s.triad(4, n.B, M), DEFAULT_GAIN, k.ETH) @=> Chord BM3_8;

  c.make(s.triad(5, n.C, M), DEFAULT_GAIN, k.ETH) @=> Chord CM4_8;
  c.make(s.triad(5, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> Chord CsM4_8;
  c.make(s.triad(5, n.D, M), DEFAULT_GAIN, k.ETH) @=> Chord DM4_8;
  c.make(s.triad(5, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> Chord DsM4_8;
  c.make(s.triad(5, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> Chord EfM4_8;
  c.make(s.triad(5, n.E, M), DEFAULT_GAIN, k.ETH) @=> Chord EM4_8;
  c.make(s.triad(5, n.F, M), DEFAULT_GAIN, k.ETH) @=> Chord FM4_8;
  c.make(s.triad(5, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> Chord FsM4_8;
  c.make(s.triad(5, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> Chord GfM4_8;
  c.make(s.triad(5, n.G, M), DEFAULT_GAIN, k.ETH) @=> Chord GM4_8;
  c.make(s.triad(5, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> Chord GsM4_8;
  c.make(s.triad(5, n.Af, M), DEFAULT_GAIN, k.ETH) @=> Chord AfM4_8;
  c.make(s.triad(5, n.A, M), DEFAULT_GAIN, k.ETH) @=> Chord AM4_8;
  c.make(s.triad(5, n.As, M), DEFAULT_GAIN, k.ETH) @=> Chord AsM4_8;
  c.make(s.triad(5, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> Chord BfM4_8;
  c.make(s.triad(5, n.B, M), DEFAULT_GAIN, k.ETH) @=> Chord BM4_8;

  c.make(s.triad(6, n.C, M), DEFAULT_GAIN, k.ETH) @=> Chord CM5_8;
  c.make(s.triad(6, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> Chord CsM5_8;
  c.make(s.triad(6, n.D, M), DEFAULT_GAIN, k.ETH) @=> Chord DM5_8;
  c.make(s.triad(6, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> Chord DsM5_8;
  c.make(s.triad(6, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> Chord EfM5_8;
  c.make(s.triad(6, n.E, M), DEFAULT_GAIN, k.ETH) @=> Chord EM5_8;
  c.make(s.triad(6, n.F, M), DEFAULT_GAIN, k.ETH) @=> Chord FM5_8;
  c.make(s.triad(6, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> Chord FsM5_8;
  c.make(s.triad(6, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> Chord GfM5_8;
  c.make(s.triad(6, n.G, M), DEFAULT_GAIN, k.ETH) @=> Chord GM5_8;
  c.make(s.triad(6, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> Chord GsM5_8;
  c.make(s.triad(6, n.Af, M), DEFAULT_GAIN, k.ETH) @=> Chord AfM5_8;
  c.make(s.triad(6, n.A, M), DEFAULT_GAIN, k.ETH) @=> Chord AM5_8;
  c.make(s.triad(6, n.As, M), DEFAULT_GAIN, k.ETH) @=> Chord AsM5_8;
  c.make(s.triad(6, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> Chord BfM5_8;
  c.make(s.triad(6, n.B, M), DEFAULT_GAIN, k.ETH) @=> Chord BM5_8;

  c.make(s.triad(7, n.C, M), DEFAULT_GAIN, k.ETH) @=> Chord CM6_8;
  c.make(s.triad(7, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> Chord CsM6_8;
  c.make(s.triad(7, n.D, M), DEFAULT_GAIN, k.ETH) @=> Chord DM6_8;
  c.make(s.triad(7, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> Chord DsM6_8;
  c.make(s.triad(7, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> Chord EfM6_8;
  c.make(s.triad(7, n.E, M), DEFAULT_GAIN, k.ETH) @=> Chord EM6_8;
  c.make(s.triad(7, n.F, M), DEFAULT_GAIN, k.ETH) @=> Chord FM6_8;
  c.make(s.triad(7, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> Chord FsM6_8;
  c.make(s.triad(7, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> Chord GfM6_8;
  c.make(s.triad(7, n.G, M), DEFAULT_GAIN, k.ETH) @=> Chord GM6_8;
  c.make(s.triad(7, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> Chord GsM6_8;
  c.make(s.triad(7, n.Af, M), DEFAULT_GAIN, k.ETH) @=> Chord AfM6_8;
  c.make(s.triad(7, n.A, M), DEFAULT_GAIN, k.ETH) @=> Chord AM6_8;
  c.make(s.triad(7, n.As, M), DEFAULT_GAIN, k.ETH) @=> Chord AsM6_8;
  c.make(s.triad(7, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> Chord BfM6_8;
  c.make(s.triad(7, n.B, M), DEFAULT_GAIN, k.ETH) @=> Chord BM6_8;

  c.make(s.triad(8, n.C, M), DEFAULT_GAIN, k.ETH) @=> Chord CM7_8;
  c.make(s.triad(8, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> Chord CsM7_8;
  c.make(s.triad(8, n.D, M), DEFAULT_GAIN, k.ETH) @=> Chord DM7_8;
  c.make(s.triad(8, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> Chord DsM7_8;
  c.make(s.triad(8, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> Chord EfM7_8;
  c.make(s.triad(8, n.E, M), DEFAULT_GAIN, k.ETH) @=> Chord EM7_8;
  c.make(s.triad(8, n.F, M), DEFAULT_GAIN, k.ETH) @=> Chord FM7_8;
  c.make(s.triad(8, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> Chord FsM7_8;
  c.make(s.triad(8, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> Chord GfM7_8;
  c.make(s.triad(8, n.G, M), DEFAULT_GAIN, k.ETH) @=> Chord GM7_8;
  c.make(s.triad(8, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> Chord GsM7_8;
  c.make(s.triad(8, n.Af, M), DEFAULT_GAIN, k.ETH) @=> Chord AfM7_8;
  c.make(s.triad(8, n.A, M), DEFAULT_GAIN, k.ETH) @=> Chord AM7_8;
  c.make(s.triad(8, n.As, M), DEFAULT_GAIN, k.ETH) @=> Chord AsM7_8;
  c.make(s.triad(8, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> Chord BfM7_8;
  c.make(s.triad(8, n.B, M), DEFAULT_GAIN, k.ETH) @=> Chord BM7_8;

  c.make(s.triad(9, n.C, M), DEFAULT_GAIN, k.ETH) @=> Chord CM8_8;
  c.make(s.triad(9, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> Chord CsM8_8;
  c.make(s.triad(9, n.D, M), DEFAULT_GAIN, k.ETH) @=> Chord DM8_8;
  c.make(s.triad(9, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> Chord DsM8_8;
  c.make(s.triad(9, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> Chord EfM8_8;
  c.make(s.triad(9, n.E, M), DEFAULT_GAIN, k.ETH) @=> Chord EM8_8;
  c.make(s.triad(9, n.F, M), DEFAULT_GAIN, k.ETH) @=> Chord FM8_8;
  c.make(s.triad(9, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> Chord FsM8_8;
  c.make(s.triad(9, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> Chord GfM8_8;
  c.make(s.triad(9, n.G, M), DEFAULT_GAIN, k.ETH) @=> Chord GM8_8;
  c.make(s.triad(9, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> Chord GsM8_8;
  c.make(s.triad(9, n.Af, M), DEFAULT_GAIN, k.ETH) @=> Chord AfM8_8;
  c.make(s.triad(9, n.A, M), DEFAULT_GAIN, k.ETH) @=> Chord AM8_8;
  c.make(s.triad(9, n.As, M), DEFAULT_GAIN, k.ETH) @=> Chord AsM8_8;
  c.make(s.triad(9, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> Chord BfM8_8;
  c.make(s.triad(9, n.B, M), DEFAULT_GAIN, k.ETH) @=> Chord BM8_8;

  // Minor
  c.make(s.triad(0, n.C, m), DEFAULT_GAIN, k.ETH) @=> Chord Cm_8;
  c.make(s.triad(0, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Chord Csm_8;
  c.make(s.triad(0, n.D, m), DEFAULT_GAIN, k.ETH) @=> Chord Dm_8;
  c.make(s.triad(0, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Chord Dsm_8;
  c.make(s.triad(0, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Chord Efm_8;
  c.make(s.triad(0, n.E, m), DEFAULT_GAIN, k.ETH) @=> Chord Em_8;
  c.make(s.triad(0, n.F, m), DEFAULT_GAIN, k.ETH) @=> Chord _Fm_8;
  c.make(s.triad(0, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Chord Fsm_8;
  c.make(s.triad(0, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Chord Gfm_8;
  c.make(s.triad(0, n.G, m), DEFAULT_GAIN, k.ETH) @=> Chord Gm_8;
  c.make(s.triad(0, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Chord Gsm_8;
  c.make(s.triad(0, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Chord Afm_8;
  c.make(s.triad(0, n.A, m), DEFAULT_GAIN, k.ETH) @=> Chord Am_8;
  c.make(s.triad(0, n.As, m), DEFAULT_GAIN, k.ETH) @=> Chord Asm_8;
  c.make(s.triad(0, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Chord Bfm_8;
  c.make(s.triad(0, n.B, m), DEFAULT_GAIN, k.ETH) @=> Chord Bm_8;

  c.make(s.triad(1, n.C, m), DEFAULT_GAIN, k.ETH) @=> Chord Cm0_8;
  c.make(s.triad(1, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Chord Csm0_8;
  c.make(s.triad(1, n.D, m), DEFAULT_GAIN, k.ETH) @=> Chord Dm0_8;
  c.make(s.triad(1, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Chord Dsm0_8;
  c.make(s.triad(1, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Chord Efm0_8;
  c.make(s.triad(1, n.E, m), DEFAULT_GAIN, k.ETH) @=> Chord Em0_8;
  c.make(s.triad(1, n.F, m), DEFAULT_GAIN, k.ETH) @=> Chord _Fm0_8;
  c.make(s.triad(1, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Chord Fsm0_8;
  c.make(s.triad(1, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Chord Gfm0_8;
  c.make(s.triad(1, n.G, m), DEFAULT_GAIN, k.ETH) @=> Chord Gm0_8;
  c.make(s.triad(1, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Chord Gsm0_8;
  c.make(s.triad(1, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Chord Afm0_8;
  c.make(s.triad(1, n.A, m), DEFAULT_GAIN, k.ETH) @=> Chord Am0_8;
  c.make(s.triad(1, n.As, m), DEFAULT_GAIN, k.ETH) @=> Chord Asm0_8;
  c.make(s.triad(1, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Chord Bfm0_8;
  c.make(s.triad(1, n.B, m), DEFAULT_GAIN, k.ETH) @=> Chord Bm0_8;

  c.make(s.triad(2, n.C, m), DEFAULT_GAIN, k.ETH) @=> Chord Cm1_8;
  c.make(s.triad(2, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Chord Csm1_8;
  c.make(s.triad(2, n.D, m), DEFAULT_GAIN, k.ETH) @=> Chord Dm1_8;
  c.make(s.triad(2, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Chord Dsm1_8;
  c.make(s.triad(2, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Chord Efm1_8;
  c.make(s.triad(2, n.E, m), DEFAULT_GAIN, k.ETH) @=> Chord Em1_8;
  c.make(s.triad(2, n.F, m), DEFAULT_GAIN, k.ETH) @=> Chord _Fm1_8;
  c.make(s.triad(2, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Chord Fsm1_8;
  c.make(s.triad(2, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Chord Gfm1_8;
  c.make(s.triad(2, n.G, m), DEFAULT_GAIN, k.ETH) @=> Chord Gm1_8;
  c.make(s.triad(2, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Chord Gsm1_8;
  c.make(s.triad(2, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Chord Afm1_8;
  c.make(s.triad(2, n.A, m), DEFAULT_GAIN, k.ETH) @=> Chord Am1_8;
  c.make(s.triad(2, n.As, m), DEFAULT_GAIN, k.ETH) @=> Chord Asm1_8;
  c.make(s.triad(2, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Chord Bfm1_8;
  c.make(s.triad(2, n.B, m), DEFAULT_GAIN, k.ETH) @=> Chord Bm1_8;

  c.make(s.triad(3, n.C, m), DEFAULT_GAIN, k.ETH) @=> Chord Cm2_8;
  c.make(s.triad(3, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Chord Csm2_8;
  c.make(s.triad(3, n.D, m), DEFAULT_GAIN, k.ETH) @=> Chord Dm2_8;
  c.make(s.triad(3, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Chord Dsm2_8;
  c.make(s.triad(3, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Chord Efm2_8;
  c.make(s.triad(3, n.E, m), DEFAULT_GAIN, k.ETH) @=> Chord Em2_8;
  c.make(s.triad(3, n.F, m), DEFAULT_GAIN, k.ETH) @=> Chord _Fm2_8;
  c.make(s.triad(3, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Chord Fsm2_8;
  c.make(s.triad(3, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Chord Gfm2_8;
  c.make(s.triad(3, n.G, m), DEFAULT_GAIN, k.ETH) @=> Chord Gm2_8;
  c.make(s.triad(3, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Chord Gsm2_8;
  c.make(s.triad(3, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Chord Afm2_8;
  c.make(s.triad(3, n.A, m), DEFAULT_GAIN, k.ETH) @=> Chord Am2_8;
  c.make(s.triad(3, n.As, m), DEFAULT_GAIN, k.ETH) @=> Chord Asm2_8;
  c.make(s.triad(3, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Chord Bfm2_8;
  c.make(s.triad(3, n.B, m), DEFAULT_GAIN, k.ETH) @=> Chord Bm2_8;

  c.make(s.triad(4, n.C, m), DEFAULT_GAIN, k.ETH) @=> Chord Cm3_8;
  c.make(s.triad(4, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Chord Csm3_8;
  c.make(s.triad(4, n.D, m), DEFAULT_GAIN, k.ETH) @=> Chord Dm3_8;
  c.make(s.triad(4, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Chord Dsm3_8;
  c.make(s.triad(4, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Chord Efm3_8;
  c.make(s.triad(4, n.E, m), DEFAULT_GAIN, k.ETH) @=> Chord Em3_8;
  c.make(s.triad(4, n.F, m), DEFAULT_GAIN, k.ETH) @=> Chord _Fm3_8;
  c.make(s.triad(4, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Chord Fsm3_8;
  c.make(s.triad(4, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Chord Gfm3_8;
  c.make(s.triad(4, n.G, m), DEFAULT_GAIN, k.ETH) @=> Chord Gm3_8;
  c.make(s.triad(4, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Chord Gsm3_8;
  c.make(s.triad(4, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Chord Afm3_8;
  c.make(s.triad(4, n.A, m), DEFAULT_GAIN, k.ETH) @=> Chord Am3_8;
  c.make(s.triad(4, n.As, m), DEFAULT_GAIN, k.ETH) @=> Chord Asm3_8;
  c.make(s.triad(4, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Chord Bfm3_8;
  c.make(s.triad(4, n.B, m), DEFAULT_GAIN, k.ETH) @=> Chord Bm3_8;

  c.make(s.triad(5, n.C, m), DEFAULT_GAIN, k.ETH) @=> Chord Cm4_8;
  c.make(s.triad(5, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Chord Csm4_8;
  c.make(s.triad(5, n.D, m), DEFAULT_GAIN, k.ETH) @=> Chord Dm4_8;
  c.make(s.triad(5, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Chord Dsm4_8;
  c.make(s.triad(5, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Chord Efm4_8;
  c.make(s.triad(5, n.E, m), DEFAULT_GAIN, k.ETH) @=> Chord Em4_8;
  c.make(s.triad(5, n.F, m), DEFAULT_GAIN, k.ETH) @=> Chord _Fm4_8;
  c.make(s.triad(5, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Chord Fsm4_8;
  c.make(s.triad(5, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Chord Gfm4_8;
  c.make(s.triad(5, n.G, m), DEFAULT_GAIN, k.ETH) @=> Chord Gm4_8;
  c.make(s.triad(5, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Chord Gsm4_8;
  c.make(s.triad(5, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Chord Afm4_8;
  c.make(s.triad(5, n.A, m), DEFAULT_GAIN, k.ETH) @=> Chord Am4_8;
  c.make(s.triad(5, n.As, m), DEFAULT_GAIN, k.ETH) @=> Chord Asm4_8;
  c.make(s.triad(5, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Chord Bfm4_8;
  c.make(s.triad(5, n.B, m), DEFAULT_GAIN, k.ETH) @=> Chord Bm4_8;

  c.make(s.triad(6, n.C, m), DEFAULT_GAIN, k.ETH) @=> Chord Cm5_8;
  c.make(s.triad(6, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Chord Csm5_8;
  c.make(s.triad(6, n.D, m), DEFAULT_GAIN, k.ETH) @=> Chord Dm5_8;
  c.make(s.triad(6, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Chord Dsm5_8;
  c.make(s.triad(6, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Chord Efm5_8;
  c.make(s.triad(6, n.E, m), DEFAULT_GAIN, k.ETH) @=> Chord Em5_8;
  c.make(s.triad(6, n.F, m), DEFAULT_GAIN, k.ETH) @=> Chord _Fm5_8;
  c.make(s.triad(6, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Chord Fsm5_8;
  c.make(s.triad(6, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Chord Gfm5_8;
  c.make(s.triad(6, n.G, m), DEFAULT_GAIN, k.ETH) @=> Chord Gm5_8;
  c.make(s.triad(6, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Chord Gsm5_8;
  c.make(s.triad(6, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Chord Afm5_8;
  c.make(s.triad(6, n.A, m), DEFAULT_GAIN, k.ETH) @=> Chord Am5_8;
  c.make(s.triad(6, n.As, m), DEFAULT_GAIN, k.ETH) @=> Chord Asm5_8;
  c.make(s.triad(6, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Chord Bfm5_8;
  c.make(s.triad(6, n.B, m), DEFAULT_GAIN, k.ETH) @=> Chord Bm5_8;

  c.make(s.triad(7, n.C, m), DEFAULT_GAIN, k.ETH) @=> Chord Cm6_8;
  c.make(s.triad(7, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Chord Csm6_8;
  c.make(s.triad(7, n.D, m), DEFAULT_GAIN, k.ETH) @=> Chord Dm6_8;
  c.make(s.triad(7, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Chord Dsm6_8;
  c.make(s.triad(7, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Chord Efm6_8;
  c.make(s.triad(7, n.E, m), DEFAULT_GAIN, k.ETH) @=> Chord Em6_8;
  c.make(s.triad(7, n.F, m), DEFAULT_GAIN, k.ETH) @=> Chord _Fm6_8;
  c.make(s.triad(7, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Chord Fsm6_8;
  c.make(s.triad(7, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Chord Gfm6_8;
  c.make(s.triad(7, n.G, m), DEFAULT_GAIN, k.ETH) @=> Chord Gm6_8;
  c.make(s.triad(7, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Chord Gsm6_8;
  c.make(s.triad(7, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Chord Afm6_8;
  c.make(s.triad(7, n.A, m), DEFAULT_GAIN, k.ETH) @=> Chord Am6_8;
  c.make(s.triad(7, n.As, m), DEFAULT_GAIN, k.ETH) @=> Chord Asm6_8;
  c.make(s.triad(7, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Chord Bfm6_8;
  c.make(s.triad(7, n.B, m), DEFAULT_GAIN, k.ETH) @=> Chord Bm6_8;

  c.make(s.triad(8, n.C, m), DEFAULT_GAIN, k.ETH) @=> Chord Cm7_8;
  c.make(s.triad(8, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Chord Csm7_8;
  c.make(s.triad(8, n.D, m), DEFAULT_GAIN, k.ETH) @=> Chord Dm7_8;
  c.make(s.triad(8, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Chord Dsm7_8;
  c.make(s.triad(8, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Chord Efm7_8;
  c.make(s.triad(8, n.E, m), DEFAULT_GAIN, k.ETH) @=> Chord Em7_8;
  c.make(s.triad(8, n.F, m), DEFAULT_GAIN, k.ETH) @=> Chord _Fm7_8;
  c.make(s.triad(8, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Chord Fsm7_8;
  c.make(s.triad(8, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Chord Gfm7_8;
  c.make(s.triad(8, n.G, m), DEFAULT_GAIN, k.ETH) @=> Chord Gm7_8;
  c.make(s.triad(8, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Chord Gsm7_8;
  c.make(s.triad(8, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Chord Afm7_8;
  c.make(s.triad(8, n.A, m), DEFAULT_GAIN, k.ETH) @=> Chord Am7_8;
  c.make(s.triad(8, n.As, m), DEFAULT_GAIN, k.ETH) @=> Chord Asm7_8;
  c.make(s.triad(8, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Chord Bfm7_8;
  c.make(s.triad(8, n.B, m), DEFAULT_GAIN, k.ETH) @=> Chord Bm7_8;

  c.make(s.triad(9, n.C, m), DEFAULT_GAIN, k.ETH) @=> Chord Cm8_8;
  c.make(s.triad(9, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Chord Csm8_8;
  c.make(s.triad(9, n.D, m), DEFAULT_GAIN, k.ETH) @=> Chord Dm8_8;
  c.make(s.triad(9, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Chord Dsm8_8;
  c.make(s.triad(9, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Chord Efm8_8;
  c.make(s.triad(9, n.E, m), DEFAULT_GAIN, k.ETH) @=> Chord Em8_8;
  c.make(s.triad(9, n.F, m), DEFAULT_GAIN, k.ETH) @=> Chord _Fm8_8;
  c.make(s.triad(9, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Chord Fsm8_8;
  c.make(s.triad(9, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Chord Gfm8_8;
  c.make(s.triad(9, n.G, m), DEFAULT_GAIN, k.ETH) @=> Chord Gm8_8;
  c.make(s.triad(9, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Chord Gsm8_8;
  c.make(s.triad(9, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Chord Afm8_8;
  c.make(s.triad(9, n.A, m), DEFAULT_GAIN, k.ETH) @=> Chord Am8_8;
  c.make(s.triad(9, n.As, m), DEFAULT_GAIN, k.ETH) @=> Chord Asm8_8;
  c.make(s.triad(9, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Chord Bfm8_8;
  c.make(s.triad(9, n.B, m), DEFAULT_GAIN, k.ETH) @=> Chord Bm8_8;

  // Augmented
  c.make(s.triad(0, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Chord Caug_8;
  c.make(s.triad(0, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Csaug_8;
  c.make(s.triad(0, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Chord Daug_8;
  c.make(s.triad(0, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Chord Dsaug_8;
  c.make(s.triad(0, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Chord Efaug_8;
  c.make(s.triad(0, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Chord Eaug_8;
  c.make(s.triad(0, n.F, aug), DEFAULT_GAIN, k.ETH) @=> Chord _Faug_8;
  c.make(s.triad(0, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Fsaug_8;
  c.make(s.triad(0, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gfaug_8;
  c.make(s.triad(0, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gaug_8;
  c.make(s.triad(0, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gsaug_8;
  c.make(s.triad(0, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Chord Afaug_8;
  c.make(s.triad(0, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Chord Aaug_8;
  c.make(s.triad(0, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Chord Asaug_8;
  c.make(s.triad(0, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Bfaug_8;
  c.make(s.triad(0, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Chord Baug_8;

  c.make(s.triad(1, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Chord Caug0_8;
  c.make(s.triad(1, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Csaug0_8;
  c.make(s.triad(1, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Chord Daug0_8;
  c.make(s.triad(1, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Chord Dsaug0_8;
  c.make(s.triad(1, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Chord Efaug0_8;
  c.make(s.triad(1, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Chord Eaug0_8;
  c.make(s.triad(1, n.F, aug), DEFAULT_GAIN, k.ETH) @=> Chord _Faug0_8;
  c.make(s.triad(1, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Fsaug0_8;
  c.make(s.triad(1, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gfaug0_8;
  c.make(s.triad(1, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gaug0_8;
  c.make(s.triad(1, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gsaug0_8;
  c.make(s.triad(1, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Chord Afaug0_8;
  c.make(s.triad(1, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Chord Aaug0_8;
  c.make(s.triad(1, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Chord Asaug0_8;
  c.make(s.triad(1, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Bfaug0_8;
  c.make(s.triad(1, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Chord Baug0_8;

  c.make(s.triad(2, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Chord Caug1_8;
  c.make(s.triad(2, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Csaug1_8;
  c.make(s.triad(2, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Chord Daug1_8;
  c.make(s.triad(2, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Chord Dsaug1_8;
  c.make(s.triad(2, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Chord Efaug1_8;
  c.make(s.triad(2, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Chord Eaug1_8;
  c.make(s.triad(2, n.F, aug), DEFAULT_GAIN, k.ETH) @=> Chord _Faug1_8;
  c.make(s.triad(2, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Fsaug1_8;
  c.make(s.triad(2, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gfaug1_8;
  c.make(s.triad(2, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gaug1_8;
  c.make(s.triad(2, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gsaug1_8;
  c.make(s.triad(2, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Chord Afaug1_8;
  c.make(s.triad(2, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Chord Aaug1_8;
  c.make(s.triad(2, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Chord Asaug1_8;
  c.make(s.triad(2, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Bfaug1_8;
  c.make(s.triad(2, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Chord Baug1_8;

  c.make(s.triad(3, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Chord Caug2_8;
  c.make(s.triad(3, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Csaug2_8;
  c.make(s.triad(3, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Chord Daug2_8;
  c.make(s.triad(3, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Chord Dsaug2_8;
  c.make(s.triad(3, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Chord Efaug2_8;
  c.make(s.triad(3, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Chord Eaug2_8;
  c.make(s.triad(3, n.F, aug), DEFAULT_GAIN, k.ETH) @=> Chord _Faug2_8;
  c.make(s.triad(3, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Fsaug2_8;
  c.make(s.triad(3, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gfaug2_8;
  c.make(s.triad(3, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gaug2_8;
  c.make(s.triad(3, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gsaug2_8;
  c.make(s.triad(3, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Chord Afaug2_8;
  c.make(s.triad(3, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Chord Aaug2_8;
  c.make(s.triad(3, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Chord Asaug2_8;
  c.make(s.triad(3, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Bfaug2_8;
  c.make(s.triad(3, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Chord Baug2_8;

  c.make(s.triad(4, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Chord Caug3_8;
  c.make(s.triad(4, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Csaug3_8;
  c.make(s.triad(4, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Chord Daug3_8;
  c.make(s.triad(4, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Chord Dsaug3_8;
  c.make(s.triad(4, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Chord Efaug3_8;
  c.make(s.triad(4, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Chord Eaug3_8;
  c.make(s.triad(4, n.F, aug), DEFAULT_GAIN, k.ETH) @=> Chord _Faug3_8;
  c.make(s.triad(4, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Fsaug3_8;
  c.make(s.triad(4, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gfaug3_8;
  c.make(s.triad(4, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gaug3_8;
  c.make(s.triad(4, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gsaug3_8;
  c.make(s.triad(4, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Chord Afaug3_8;
  c.make(s.triad(4, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Chord Aaug3_8;
  c.make(s.triad(4, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Chord Asaug3_8;
  c.make(s.triad(4, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Bfaug3_8;
  c.make(s.triad(4, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Chord Baug3_8;

  c.make(s.triad(5, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Chord Caug4_8;
  c.make(s.triad(5, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Csaug4_8;
  c.make(s.triad(5, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Chord Daug4_8;
  c.make(s.triad(5, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Chord Dsaug4_8;
  c.make(s.triad(5, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Chord Efaug4_8;
  c.make(s.triad(5, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Chord Eaug4_8;
  c.make(s.triad(5, n.F, aug), DEFAULT_GAIN, k.ETH) @=> Chord _Faug4_8;
  c.make(s.triad(5, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Fsaug4_8;
  c.make(s.triad(5, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gfaug4_8;
  c.make(s.triad(5, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gaug4_8;
  c.make(s.triad(5, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gsaug4_8;
  c.make(s.triad(5, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Chord Afaug4_8;
  c.make(s.triad(5, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Chord Aaug4_8;
  c.make(s.triad(5, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Chord Asaug4_8;
  c.make(s.triad(5, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Bfaug4_8;
  c.make(s.triad(5, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Chord Baug4_8;

  c.make(s.triad(6, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Chord Caug5_8;
  c.make(s.triad(6, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Csaug5_8;
  c.make(s.triad(6, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Chord Daug5_8;
  c.make(s.triad(6, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Chord Dsaug5_8;
  c.make(s.triad(6, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Chord Efaug5_8;
  c.make(s.triad(6, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Chord Eaug5_8;
  c.make(s.triad(6, n.F, aug), DEFAULT_GAIN, k.ETH) @=> Chord _Faug5_8;
  c.make(s.triad(6, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Fsaug5_8;
  c.make(s.triad(6, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gfaug5_8;
  c.make(s.triad(6, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gaug5_8;
  c.make(s.triad(6, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gsaug5_8;
  c.make(s.triad(6, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Chord Afaug5_8;
  c.make(s.triad(6, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Chord Aaug5_8;
  c.make(s.triad(6, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Chord Asaug5_8;
  c.make(s.triad(6, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Bfaug5_8;
  c.make(s.triad(6, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Chord Baug5_8;

  c.make(s.triad(7, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Chord Caug6_8;
  c.make(s.triad(7, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Csaug6_8;
  c.make(s.triad(7, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Chord Daug6_8;
  c.make(s.triad(7, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Chord Dsaug6_8;
  c.make(s.triad(7, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Chord Efaug6_8;
  c.make(s.triad(7, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Chord Eaug6_8;
  c.make(s.triad(7, n.F, aug), DEFAULT_GAIN, k.ETH) @=> Chord _Faug6_8;
  c.make(s.triad(7, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Fsaug6_8;
  c.make(s.triad(7, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gfaug6_8;
  c.make(s.triad(7, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gaug6_8;
  c.make(s.triad(7, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gsaug6_8;
  c.make(s.triad(7, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Chord Afaug6_8;
  c.make(s.triad(7, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Chord Aaug6_8;
  c.make(s.triad(7, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Chord Asaug6_8;
  c.make(s.triad(7, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Bfaug6_8;
  c.make(s.triad(7, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Chord Baug6_8;

  c.make(s.triad(8, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Chord Caug7_8;
  c.make(s.triad(8, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Csaug7_8;
  c.make(s.triad(8, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Chord Daug7_8;
  c.make(s.triad(8, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Chord Dsaug7_8;
  c.make(s.triad(8, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Chord Efaug7_8;
  c.make(s.triad(8, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Chord Eaug7_8;
  c.make(s.triad(8, n.F, aug), DEFAULT_GAIN, k.ETH) @=> Chord _Faug7_8;
  c.make(s.triad(8, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Fsaug7_8;
  c.make(s.triad(8, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gfaug7_8;
  c.make(s.triad(8, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gaug7_8;
  c.make(s.triad(8, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gsaug7_8;
  c.make(s.triad(8, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Chord Afaug7_8;
  c.make(s.triad(8, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Chord Aaug7_8;
  c.make(s.triad(8, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Chord Asaug7_8;
  c.make(s.triad(8, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Bfaug7_8;
  c.make(s.triad(8, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Chord Baug7_8;

  c.make(s.triad(9, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Chord Caug8_8;
  c.make(s.triad(9, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Csaug8_8;
  c.make(s.triad(9, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Chord Daug8_8;
  c.make(s.triad(9, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Chord Dsaug8_8;
  c.make(s.triad(9, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Chord Efaug8_8;
  c.make(s.triad(9, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Chord Eaug8_8;
  c.make(s.triad(9, n.F, aug), DEFAULT_GAIN, k.ETH) @=> Chord _Faug8_8;
  c.make(s.triad(9, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Fsaug8_8;
  c.make(s.triad(9, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gfaug8_8;
  c.make(s.triad(9, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gaug8_8;
  c.make(s.triad(9, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Chord Gsaug8_8;
  c.make(s.triad(9, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Chord Afaug8_8;
  c.make(s.triad(9, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Chord Aaug8_8;
  c.make(s.triad(9, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Chord Asaug8_8;
  c.make(s.triad(9, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Chord Bfaug8_8;
  c.make(s.triad(9, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Chord Baug8_8;

  // Diminished  
  c.make(s.triad(0, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Chord Cdim_8;
  c.make(s.triad(0, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Csdim_8;
  c.make(s.triad(0, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Chord Ddim_8;
  c.make(s.triad(0, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Chord Dsdim_8;
  c.make(s.triad(0, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Chord Efdim_8;
  c.make(s.triad(0, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Chord Edim_8;
  c.make(s.triad(0, n.F, dim), DEFAULT_GAIN, k.ETH) @=> Chord _Fdim_8;
  c.make(s.triad(0, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Fsdim_8;
  c.make(s.triad(0, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gfdim_8;
  c.make(s.triad(0, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gdim_8;
  c.make(s.triad(0, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gsdim_8;
  c.make(s.triad(0, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Chord Afdim_8;
  c.make(s.triad(0, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Chord Adim_8;
  c.make(s.triad(0, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Chord Asdim_8;
  c.make(s.triad(0, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bfdim_8;
  c.make(s.triad(0, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bdim_8;

  c.make(s.triad(1, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Chord Cdim0_8;
  c.make(s.triad(1, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Csdim0_8;
  c.make(s.triad(1, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Chord Ddim0_8;
  c.make(s.triad(1, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Chord Dsdim0_8;
  c.make(s.triad(1, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Chord Efdim0_8;
  c.make(s.triad(1, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Chord Edim0_8;
  c.make(s.triad(1, n.F, dim), DEFAULT_GAIN, k.ETH) @=> Chord _Fdim0_8;
  c.make(s.triad(1, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Fsdim0_8;
  c.make(s.triad(1, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gfdim0_8;
  c.make(s.triad(1, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gdim0_8;
  c.make(s.triad(1, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gsdim0_8;
  c.make(s.triad(1, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Chord Afdim0_8;
  c.make(s.triad(1, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Chord Adim0_8;
  c.make(s.triad(1, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Chord Asdim0_8;
  c.make(s.triad(1, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bfdim0_8;
  c.make(s.triad(1, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bdim0_8;

  c.make(s.triad(2, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Chord Cdim1_8;
  c.make(s.triad(2, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Csdim1_8;
  c.make(s.triad(2, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Chord Ddim1_8;
  c.make(s.triad(2, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Chord Dsdim1_8;
  c.make(s.triad(2, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Chord Efdim1_8;
  c.make(s.triad(2, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Chord Edim1_8;
  c.make(s.triad(2, n.F, dim), DEFAULT_GAIN, k.ETH) @=> Chord _Fdim1_8;
  c.make(s.triad(2, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Fsdim1_8;
  c.make(s.triad(2, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gfdim1_8;
  c.make(s.triad(2, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gdim1_8;
  c.make(s.triad(2, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gsdim1_8;
  c.make(s.triad(2, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Chord Afdim1_8;
  c.make(s.triad(2, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Chord Adim1_8;
  c.make(s.triad(2, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Chord Asdim1_8;
  c.make(s.triad(2, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bfdim1_8;
  c.make(s.triad(2, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bdim1_8;

  c.make(s.triad(3, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Chord Cdim2_8;
  c.make(s.triad(3, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Csdim2_8;
  c.make(s.triad(3, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Chord Ddim2_8;
  c.make(s.triad(3, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Chord Dsdim2_8;
  c.make(s.triad(3, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Chord Efdim2_8;
  c.make(s.triad(3, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Chord Edim2_8;
  c.make(s.triad(3, n.F, dim), DEFAULT_GAIN, k.ETH) @=> Chord _Fdim2_8;
  c.make(s.triad(3, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Fsdim2_8;
  c.make(s.triad(3, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gfdim2_8;
  c.make(s.triad(3, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gdim2_8;
  c.make(s.triad(3, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gsdim2_8;
  c.make(s.triad(3, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Chord Afdim2_8;
  c.make(s.triad(3, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Chord Adim2_8;
  c.make(s.triad(3, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Chord Asdim2_8;
  c.make(s.triad(3, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bfdim2_8;
  c.make(s.triad(3, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bdim2_8;

  c.make(s.triad(4, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Chord Cdim3_8;
  c.make(s.triad(4, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Csdim3_8;
  c.make(s.triad(4, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Chord Ddim3_8;
  c.make(s.triad(4, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Chord Dsdim3_8;
  c.make(s.triad(4, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Chord Efdim3_8;
  c.make(s.triad(4, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Chord Edim3_8;
  c.make(s.triad(4, n.F, dim), DEFAULT_GAIN, k.ETH) @=> Chord _Fdim3_8;
  c.make(s.triad(4, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Fsdim3_8;
  c.make(s.triad(4, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gfdim3_8;
  c.make(s.triad(4, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gdim3_8;
  c.make(s.triad(4, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gsdim3_8;
  c.make(s.triad(4, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Chord Afdim3_8;
  c.make(s.triad(4, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Chord Adim3_8;
  c.make(s.triad(4, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Chord Asdim3_8;
  c.make(s.triad(4, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bfdim3_8;
  c.make(s.triad(4, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bdim3_8;

  c.make(s.triad(5, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Chord Cdim4_8;
  c.make(s.triad(5, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Csdim4_8;
  c.make(s.triad(5, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Chord Ddim4_8;
  c.make(s.triad(5, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Chord Dsdim4_8;
  c.make(s.triad(5, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Chord Efdim4_8;
  c.make(s.triad(5, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Chord Edim4_8;
  c.make(s.triad(5, n.F, dim), DEFAULT_GAIN, k.ETH) @=> Chord _Fdim4_8;
  c.make(s.triad(5, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Fsdim4_8;
  c.make(s.triad(5, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gfdim4_8;
  c.make(s.triad(5, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gdim4_8;
  c.make(s.triad(5, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gsdim4_8;
  c.make(s.triad(5, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Chord Afdim4_8;
  c.make(s.triad(5, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Chord Adim4_8;
  c.make(s.triad(5, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Chord Asdim4_8;
  c.make(s.triad(5, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bfdim4_8;
  c.make(s.triad(5, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bdim4_8;

  c.make(s.triad(6, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Chord Cdim5_8;
  c.make(s.triad(6, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Csdim5_8;
  c.make(s.triad(6, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Chord Ddim5_8;
  c.make(s.triad(6, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Chord Dsdim5_8;
  c.make(s.triad(6, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Chord Efdim5_8;
  c.make(s.triad(6, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Chord Edim5_8;
  c.make(s.triad(6, n.F, dim), DEFAULT_GAIN, k.ETH) @=> Chord _Fdim5_8;
  c.make(s.triad(6, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Fsdim5_8;
  c.make(s.triad(6, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gfdim5_8;
  c.make(s.triad(6, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gdim5_8;
  c.make(s.triad(6, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gsdim5_8;
  c.make(s.triad(6, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Chord Afdim5_8;
  c.make(s.triad(6, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Chord Adim5_8;
  c.make(s.triad(6, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Chord Asdim5_8;
  c.make(s.triad(6, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bfdim5_8;
  c.make(s.triad(6, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bdim5_8;

  c.make(s.triad(7, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Chord Cdim6_8;
  c.make(s.triad(7, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Csdim6_8;
  c.make(s.triad(7, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Chord Ddim6_8;
  c.make(s.triad(7, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Chord Dsdim6_8;
  c.make(s.triad(7, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Chord Efdim6_8;
  c.make(s.triad(7, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Chord Edim6_8;
  c.make(s.triad(7, n.F, dim), DEFAULT_GAIN, k.ETH) @=> Chord _Fdim6_8;
  c.make(s.triad(7, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Fsdim6_8;
  c.make(s.triad(7, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gfdim6_8;
  c.make(s.triad(7, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gdim6_8;
  c.make(s.triad(7, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gsdim6_8;
  c.make(s.triad(7, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Chord Afdim6_8;
  c.make(s.triad(7, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Chord Adim6_8;
  c.make(s.triad(7, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Chord Asdim6_8;
  c.make(s.triad(7, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bfdim6_8;
  c.make(s.triad(7, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bdim6_8;

  c.make(s.triad(8, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Chord Cdim7_8;
  c.make(s.triad(8, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Csdim7_8;
  c.make(s.triad(8, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Chord Ddim7_8;
  c.make(s.triad(8, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Chord Dsdim7_8;
  c.make(s.triad(8, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Chord Efdim7_8;
  c.make(s.triad(8, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Chord Edim7_8;
  c.make(s.triad(8, n.F, dim), DEFAULT_GAIN, k.ETH) @=> Chord _Fdim7_8;
  c.make(s.triad(8, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Fsdim7_8;
  c.make(s.triad(8, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gfdim7_8;
  c.make(s.triad(8, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gdim7_8;
  c.make(s.triad(8, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gsdim7_8;
  c.make(s.triad(8, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Chord Afdim7_8;
  c.make(s.triad(8, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Chord Adim7_8;
  c.make(s.triad(8, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Chord Asdim7_8;
  c.make(s.triad(8, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bfdim7_8;
  c.make(s.triad(8, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bdim7_8;

  c.make(s.triad(9, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Chord Cdim8_8;
  c.make(s.triad(9, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Csdim8_8;
  c.make(s.triad(9, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Chord Ddim8_8;
  c.make(s.triad(9, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Chord Dsdim8_8;
  c.make(s.triad(9, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Chord Efdim8_8;
  c.make(s.triad(9, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Chord Edim8_8;
  c.make(s.triad(9, n.F, dim), DEFAULT_GAIN, k.ETH) @=> Chord _Fdim8_8;
  c.make(s.triad(9, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Fsdim8_8;
  c.make(s.triad(9, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gfdim8_8;
  c.make(s.triad(9, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gdim8_8;
  c.make(s.triad(9, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Chord Gsdim8_8;
  c.make(s.triad(9, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Chord Afdim8_8;
  c.make(s.triad(9, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Chord Adim8_8;
  c.make(s.triad(9, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Chord Asdim8_8;
  c.make(s.triad(9, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bfdim8_8;
  c.make(s.triad(9, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Chord Bdim8_8;

  //
  // SXTNTH
  //

  // Major
  // 0-based offsets
  c.make(s.triad(0, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CM_16;
  c.make(s.triad(0, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CsM_16;
  c.make(s.triad(0, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DM_16;
  c.make(s.triad(0, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DsM_16;
  c.make(s.triad(0, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EfM_16;
  c.make(s.triad(0, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EM_16;
  c.make(s.triad(0, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FM_16;
  c.make(s.triad(0, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FsM_16;
  c.make(s.triad(0, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GfM_16;
  c.make(s.triad(0, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GM_16;
  c.make(s.triad(0, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GsM_16;
  c.make(s.triad(0, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AfM_16;
  c.make(s.triad(0, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AM_16;
  c.make(s.triad(0, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AsM_16;
  c.make(s.triad(0, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BfM_16;
  c.make(s.triad(0, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BM_16;

  // constants predefined per octave
  c.make(s.triad(1, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CM0_16;
  c.make(s.triad(1, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CsM0_16;
  c.make(s.triad(1, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DM0_16;
  c.make(s.triad(1, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DsM0_16;
  c.make(s.triad(1, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EfM0_16;
  c.make(s.triad(1, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EM0_16;
  c.make(s.triad(1, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FM0_16;
  c.make(s.triad(1, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FsM0_16;
  c.make(s.triad(1, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GfM0_16;
  c.make(s.triad(1, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GM0_16;
  c.make(s.triad(1, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GsM0_16;
  c.make(s.triad(1, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AfM0_16;
  c.make(s.triad(1, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AM0_16;
  c.make(s.triad(1, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AsM0_16;
  c.make(s.triad(1, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BfM0_16;
  c.make(s.triad(1, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BM0_16;

  c.make(s.triad(2, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CM1_16;
  c.make(s.triad(2, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CsM1_16;
  c.make(s.triad(2, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DM1_16;
  c.make(s.triad(2, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DsM1_16;
  c.make(s.triad(2, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EfM1_16;
  c.make(s.triad(2, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EM1_16;
  c.make(s.triad(2, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FM1_16;
  c.make(s.triad(2, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FsM1_16;
  c.make(s.triad(2, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GfM1_16;
  c.make(s.triad(2, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GM1_16;
  c.make(s.triad(2, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GsM1_16;
  c.make(s.triad(2, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AfM1_16;
  c.make(s.triad(2, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AM1_16;
  c.make(s.triad(2, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AsM1_16;
  c.make(s.triad(2, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BfM1_16;
  c.make(s.triad(2, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BM1_16;

  c.make(s.triad(3, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CM2_16;
  c.make(s.triad(3, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CsM2_16;
  c.make(s.triad(3, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DM2_16;
  c.make(s.triad(3, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DsM2_16;
  c.make(s.triad(3, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EfM2_16;
  c.make(s.triad(3, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EM2_16;
  c.make(s.triad(3, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FM2_16;
  c.make(s.triad(3, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FsM2_16;
  c.make(s.triad(3, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GfM2_16;
  c.make(s.triad(3, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GM2_16;
  c.make(s.triad(3, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GsM2_16;
  c.make(s.triad(3, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AfM2_16;
  c.make(s.triad(3, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AM2_16;
  c.make(s.triad(3, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AsM2_16;
  c.make(s.triad(3, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BfM2_16;
  c.make(s.triad(3, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BM2_16;

  c.make(s.triad(4, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CM3_16;
  c.make(s.triad(4, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CsM3_16;
  c.make(s.triad(4, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DM3_16;
  c.make(s.triad(4, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DsM3_16;
  c.make(s.triad(4, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EfM3_16;
  c.make(s.triad(4, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EM3_16;
  c.make(s.triad(4, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FM3_16;
  c.make(s.triad(4, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FsM3_16;
  c.make(s.triad(4, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GfM3_16;
  c.make(s.triad(4, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GM3_16;
  c.make(s.triad(4, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GsM3_16;
  c.make(s.triad(4, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AfM3_16;
  c.make(s.triad(4, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AM3_16;
  c.make(s.triad(4, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AsM3_16;
  c.make(s.triad(4, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BfM3_16;
  c.make(s.triad(4, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BM3_16;

  c.make(s.triad(5, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CM4_16;
  c.make(s.triad(5, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CsM4_16;
  c.make(s.triad(5, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DM4_16;
  c.make(s.triad(5, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DsM4_16;
  c.make(s.triad(5, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EfM4_16;
  c.make(s.triad(5, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EM4_16;
  c.make(s.triad(5, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FM4_16;
  c.make(s.triad(5, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FsM4_16;
  c.make(s.triad(5, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GfM4_16;
  c.make(s.triad(5, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GM4_16;
  c.make(s.triad(5, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GsM4_16;
  c.make(s.triad(5, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AfM4_16;
  c.make(s.triad(5, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AM4_16;
  c.make(s.triad(5, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AsM4_16;
  c.make(s.triad(5, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BfM4_16;
  c.make(s.triad(5, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BM4_16;

  c.make(s.triad(6, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CM5_16;
  c.make(s.triad(6, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CsM5_16;
  c.make(s.triad(6, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DM5_16;
  c.make(s.triad(6, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DsM5_16;
  c.make(s.triad(6, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EfM5_16;
  c.make(s.triad(6, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EM5_16;
  c.make(s.triad(6, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FM5_16;
  c.make(s.triad(6, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FsM5_16;
  c.make(s.triad(6, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GfM5_16;
  c.make(s.triad(6, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GM5_16;
  c.make(s.triad(6, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GsM5_16;
  c.make(s.triad(6, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AfM5_16;
  c.make(s.triad(6, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AM5_16;
  c.make(s.triad(6, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AsM5_16;
  c.make(s.triad(6, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BfM5_16;
  c.make(s.triad(6, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BM5_16;

  c.make(s.triad(7, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CM6_16;
  c.make(s.triad(7, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CsM6_16;
  c.make(s.triad(7, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DM6_16;
  c.make(s.triad(7, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DsM6_16;
  c.make(s.triad(7, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EfM6_16;
  c.make(s.triad(7, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EM6_16;
  c.make(s.triad(7, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FM6_16;
  c.make(s.triad(7, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FsM6_16;
  c.make(s.triad(7, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GfM6_16;
  c.make(s.triad(7, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GM6_16;
  c.make(s.triad(7, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GsM6_16;
  c.make(s.triad(7, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AfM6_16;
  c.make(s.triad(7, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AM6_16;
  c.make(s.triad(7, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AsM6_16;
  c.make(s.triad(7, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BfM6_16;
  c.make(s.triad(7, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BM6_16;

  c.make(s.triad(8, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CM7_16;
  c.make(s.triad(8, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CsM7_16;
  c.make(s.triad(8, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DM7_16;
  c.make(s.triad(8, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DsM7_16;
  c.make(s.triad(8, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EfM7_16;
  c.make(s.triad(8, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EM7_16;
  c.make(s.triad(8, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FM7_16;
  c.make(s.triad(8, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FsM7_16;
  c.make(s.triad(8, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GfM7_16;
  c.make(s.triad(8, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GM7_16;
  c.make(s.triad(8, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GsM7_16;
  c.make(s.triad(8, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AfM7_16;
  c.make(s.triad(8, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AM7_16;
  c.make(s.triad(8, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AsM7_16;
  c.make(s.triad(8, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BfM7_16;
  c.make(s.triad(8, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BM7_16;

  c.make(s.triad(9, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CM8_16;
  c.make(s.triad(9, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord CsM8_16;
  c.make(s.triad(9, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DM8_16;
  c.make(s.triad(9, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord DsM8_16;
  c.make(s.triad(9, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EfM8_16;
  c.make(s.triad(9, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord EM8_16;
  c.make(s.triad(9, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FM8_16;
  c.make(s.triad(9, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord FsM8_16;
  c.make(s.triad(9, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GfM8_16;
  c.make(s.triad(9, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GM8_16;
  c.make(s.triad(9, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord GsM8_16;
  c.make(s.triad(9, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AfM8_16;
  c.make(s.triad(9, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AM8_16;
  c.make(s.triad(9, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord AsM8_16;
  c.make(s.triad(9, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BfM8_16;
  c.make(s.triad(9, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> Chord BM8_16;

  // Minor
  c.make(s.triad(0, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cm_16;
  c.make(s.triad(0, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csm_16;
  c.make(s.triad(0, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dm_16;
  c.make(s.triad(0, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsm_16;
  c.make(s.triad(0, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efm_16;
  c.make(s.triad(0, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Em_16;
  c.make(s.triad(0, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fm_16;
  c.make(s.triad(0, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsm_16;
  c.make(s.triad(0, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfm_16;
  c.make(s.triad(0, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gm_16;
  c.make(s.triad(0, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsm_16;
  c.make(s.triad(0, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afm_16;
  c.make(s.triad(0, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Am_16;
  c.make(s.triad(0, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asm_16;
  c.make(s.triad(0, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfm_16;
  c.make(s.triad(0, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bm_16;

  c.make(s.triad(1, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cm0_16;
  c.make(s.triad(1, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csm0_16;
  c.make(s.triad(1, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dm0_16;
  c.make(s.triad(1, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsm0_16;
  c.make(s.triad(1, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efm0_16;
  c.make(s.triad(1, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Em0_16;
  c.make(s.triad(1, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fm0_16;
  c.make(s.triad(1, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsm0_16;
  c.make(s.triad(1, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfm0_16;
  c.make(s.triad(1, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gm0_16;
  c.make(s.triad(1, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsm0_16;
  c.make(s.triad(1, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afm0_16;
  c.make(s.triad(1, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Am0_16;
  c.make(s.triad(1, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asm0_16;
  c.make(s.triad(1, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfm0_16;
  c.make(s.triad(1, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bm0_16;

  c.make(s.triad(2, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cm1_16;
  c.make(s.triad(2, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csm1_16;
  c.make(s.triad(2, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dm1_16;
  c.make(s.triad(2, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsm1_16;
  c.make(s.triad(2, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efm1_16;
  c.make(s.triad(2, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Em1_16;
  c.make(s.triad(2, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fm1_16;
  c.make(s.triad(2, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsm1_16;
  c.make(s.triad(2, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfm1_16;
  c.make(s.triad(2, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gm1_16;
  c.make(s.triad(2, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsm1_16;
  c.make(s.triad(2, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afm1_16;
  c.make(s.triad(2, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Am1_16;
  c.make(s.triad(2, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asm1_16;
  c.make(s.triad(2, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfm1_16;
  c.make(s.triad(2, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bm1_16;

  c.make(s.triad(3, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cm2_16;
  c.make(s.triad(3, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csm2_16;
  c.make(s.triad(3, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dm2_16;
  c.make(s.triad(3, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsm2_16;
  c.make(s.triad(3, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efm2_16;
  c.make(s.triad(3, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Em2_16;
  c.make(s.triad(3, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fm2_16;
  c.make(s.triad(3, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsm2_16;
  c.make(s.triad(3, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfm2_16;
  c.make(s.triad(3, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gm2_16;
  c.make(s.triad(3, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsm2_16;
  c.make(s.triad(3, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afm2_16;
  c.make(s.triad(3, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Am2_16;
  c.make(s.triad(3, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asm2_16;
  c.make(s.triad(3, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfm2_16;
  c.make(s.triad(3, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bm2_16;

  c.make(s.triad(4, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cm3_16;
  c.make(s.triad(4, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csm3_16;
  c.make(s.triad(4, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dm3_16;
  c.make(s.triad(4, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsm3_16;
  c.make(s.triad(4, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efm3_16;
  c.make(s.triad(4, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Em3_16;
  c.make(s.triad(4, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fm3_16;
  c.make(s.triad(4, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsm3_16;
  c.make(s.triad(4, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfm3_16;
  c.make(s.triad(4, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gm3_16;
  c.make(s.triad(4, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsm3_16;
  c.make(s.triad(4, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afm3_16;
  c.make(s.triad(4, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Am3_16;
  c.make(s.triad(4, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asm3_16;
  c.make(s.triad(4, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfm3_16;
  c.make(s.triad(4, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bm3_16;

  c.make(s.triad(5, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cm4_16;
  c.make(s.triad(5, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csm4_16;
  c.make(s.triad(5, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dm4_16;
  c.make(s.triad(5, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsm4_16;
  c.make(s.triad(5, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efm4_16;
  c.make(s.triad(5, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Em4_16;
  c.make(s.triad(5, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fm4_16;
  c.make(s.triad(5, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsm4_16;
  c.make(s.triad(5, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfm4_16;
  c.make(s.triad(5, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gm4_16;
  c.make(s.triad(5, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsm4_16;
  c.make(s.triad(5, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afm4_16;
  c.make(s.triad(5, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Am4_16;
  c.make(s.triad(5, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asm4_16;
  c.make(s.triad(5, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfm4_16;
  c.make(s.triad(5, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bm4_16;

  c.make(s.triad(6, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cm5_16;
  c.make(s.triad(6, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csm5_16;
  c.make(s.triad(6, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dm5_16;
  c.make(s.triad(6, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsm5_16;
  c.make(s.triad(6, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efm5_16;
  c.make(s.triad(6, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Em5_16;
  c.make(s.triad(6, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fm5_16;
  c.make(s.triad(6, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsm5_16;
  c.make(s.triad(6, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfm5_16;
  c.make(s.triad(6, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gm5_16;
  c.make(s.triad(6, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsm5_16;
  c.make(s.triad(6, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afm5_16;
  c.make(s.triad(6, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Am5_16;
  c.make(s.triad(6, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asm5_16;
  c.make(s.triad(6, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfm5_16;
  c.make(s.triad(6, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bm5_16;

  c.make(s.triad(7, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cm6_16;
  c.make(s.triad(7, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csm6_16;
  c.make(s.triad(7, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dm6_16;
  c.make(s.triad(7, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsm6_16;
  c.make(s.triad(7, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efm6_16;
  c.make(s.triad(7, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Em6_16;
  c.make(s.triad(7, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fm6_16;
  c.make(s.triad(7, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsm6_16;
  c.make(s.triad(7, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfm6_16;
  c.make(s.triad(7, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gm6_16;
  c.make(s.triad(7, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsm6_16;
  c.make(s.triad(7, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afm6_16;
  c.make(s.triad(7, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Am6_16;
  c.make(s.triad(7, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asm6_16;
  c.make(s.triad(7, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfm6_16;
  c.make(s.triad(7, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bm6_16;

  c.make(s.triad(8, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cm7_16;
  c.make(s.triad(8, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csm7_16;
  c.make(s.triad(8, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dm7_16;
  c.make(s.triad(8, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsm7_16;
  c.make(s.triad(8, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efm7_16;
  c.make(s.triad(8, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Em7_16;
  c.make(s.triad(8, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fm7_16;
  c.make(s.triad(8, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsm7_16;
  c.make(s.triad(8, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfm7_16;
  c.make(s.triad(8, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gm7_16;
  c.make(s.triad(8, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsm7_16;
  c.make(s.triad(8, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afm7_16;
  c.make(s.triad(8, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Am7_16;
  c.make(s.triad(8, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asm7_16;
  c.make(s.triad(8, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfm7_16;
  c.make(s.triad(8, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bm7_16;

  c.make(s.triad(9, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cm8_16;
  c.make(s.triad(9, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csm8_16;
  c.make(s.triad(9, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dm8_16;
  c.make(s.triad(9, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsm8_16;
  c.make(s.triad(9, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efm8_16;
  c.make(s.triad(9, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Em8_16;
  c.make(s.triad(9, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fm8_16;
  c.make(s.triad(9, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsm8_16;
  c.make(s.triad(9, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfm8_16;
  c.make(s.triad(9, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gm8_16;
  c.make(s.triad(9, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsm8_16;
  c.make(s.triad(9, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afm8_16;
  c.make(s.triad(9, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Am8_16;
  c.make(s.triad(9, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asm8_16;
  c.make(s.triad(9, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfm8_16;
  c.make(s.triad(9, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bm8_16;

  // Augmented
  c.make(s.triad(0, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Caug_16;
  c.make(s.triad(0, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csaug_16;
  c.make(s.triad(0, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Daug_16;
  c.make(s.triad(0, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsaug_16;
  c.make(s.triad(0, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efaug_16;
  c.make(s.triad(0, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Eaug_16;
  c.make(s.triad(0, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Faug_16;
  c.make(s.triad(0, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsaug_16;
  c.make(s.triad(0, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfaug_16;
  c.make(s.triad(0, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gaug_16;
  c.make(s.triad(0, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsaug_16;
  c.make(s.triad(0, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afaug_16;
  c.make(s.triad(0, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Aaug_16;
  c.make(s.triad(0, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asaug_16;
  c.make(s.triad(0, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfaug_16;
  c.make(s.triad(0, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Baug_16;

  c.make(s.triad(1, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Caug0_16;
  c.make(s.triad(1, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csaug0_16;
  c.make(s.triad(1, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Daug0_16;
  c.make(s.triad(1, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsaug0_16;
  c.make(s.triad(1, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efaug0_16;
  c.make(s.triad(1, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Eaug0_16;
  c.make(s.triad(1, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Faug0_16;
  c.make(s.triad(1, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsaug0_16;
  c.make(s.triad(1, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfaug0_16;
  c.make(s.triad(1, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gaug0_16;
  c.make(s.triad(1, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsaug0_16;
  c.make(s.triad(1, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afaug0_16;
  c.make(s.triad(1, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Aaug0_16;
  c.make(s.triad(1, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asaug0_16;
  c.make(s.triad(1, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfaug0_16;
  c.make(s.triad(1, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Baug0_16;

  c.make(s.triad(2, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Caug1_16;
  c.make(s.triad(2, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csaug1_16;
  c.make(s.triad(2, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Daug1_16;
  c.make(s.triad(2, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsaug1_16;
  c.make(s.triad(2, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efaug1_16;
  c.make(s.triad(2, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Eaug1_16;
  c.make(s.triad(2, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Faug1_16;
  c.make(s.triad(2, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsaug1_16;
  c.make(s.triad(2, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfaug1_16;
  c.make(s.triad(2, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gaug1_16;
  c.make(s.triad(2, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsaug1_16;
  c.make(s.triad(2, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afaug1_16;
  c.make(s.triad(2, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Aaug1_16;
  c.make(s.triad(2, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asaug1_16;
  c.make(s.triad(2, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfaug1_16;
  c.make(s.triad(2, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Baug1_16;

  c.make(s.triad(3, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Caug2_16;
  c.make(s.triad(3, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csaug2_16;
  c.make(s.triad(3, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Daug2_16;
  c.make(s.triad(3, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsaug2_16;
  c.make(s.triad(3, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efaug2_16;
  c.make(s.triad(3, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Eaug2_16;
  c.make(s.triad(3, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Faug2_16;
  c.make(s.triad(3, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsaug2_16;
  c.make(s.triad(3, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfaug2_16;
  c.make(s.triad(3, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gaug2_16;
  c.make(s.triad(3, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsaug2_16;
  c.make(s.triad(3, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afaug2_16;
  c.make(s.triad(3, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Aaug2_16;
  c.make(s.triad(3, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asaug2_16;
  c.make(s.triad(3, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfaug2_16;
  c.make(s.triad(3, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Baug2_16;

  c.make(s.triad(4, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Caug3_16;
  c.make(s.triad(4, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csaug3_16;
  c.make(s.triad(4, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Daug3_16;
  c.make(s.triad(4, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsaug3_16;
  c.make(s.triad(4, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efaug3_16;
  c.make(s.triad(4, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Eaug3_16;
  c.make(s.triad(4, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Faug3_16;
  c.make(s.triad(4, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsaug3_16;
  c.make(s.triad(4, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfaug3_16;
  c.make(s.triad(4, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gaug3_16;
  c.make(s.triad(4, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsaug3_16;
  c.make(s.triad(4, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afaug3_16;
  c.make(s.triad(4, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Aaug3_16;
  c.make(s.triad(4, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asaug3_16;
  c.make(s.triad(4, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfaug3_16;
  c.make(s.triad(4, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Baug3_16;

  c.make(s.triad(5, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Caug4_16;
  c.make(s.triad(5, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csaug4_16;
  c.make(s.triad(5, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Daug4_16;
  c.make(s.triad(5, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsaug4_16;
  c.make(s.triad(5, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efaug4_16;
  c.make(s.triad(5, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Eaug4_16;
  c.make(s.triad(5, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Faug4_16;
  c.make(s.triad(5, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsaug4_16;
  c.make(s.triad(5, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfaug4_16;
  c.make(s.triad(5, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gaug4_16;
  c.make(s.triad(5, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsaug4_16;
  c.make(s.triad(5, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afaug4_16;
  c.make(s.triad(5, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Aaug4_16;
  c.make(s.triad(5, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asaug4_16;
  c.make(s.triad(5, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfaug4_16;
  c.make(s.triad(5, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Baug4_16;

  c.make(s.triad(6, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Caug5_16;
  c.make(s.triad(6, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csaug5_16;
  c.make(s.triad(6, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Daug5_16;
  c.make(s.triad(6, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsaug5_16;
  c.make(s.triad(6, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efaug5_16;
  c.make(s.triad(6, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Eaug5_16;
  c.make(s.triad(6, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Faug5_16;
  c.make(s.triad(6, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsaug5_16;
  c.make(s.triad(6, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfaug5_16;
  c.make(s.triad(6, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gaug5_16;
  c.make(s.triad(6, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsaug5_16;
  c.make(s.triad(6, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afaug5_16;
  c.make(s.triad(6, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Aaug5_16;
  c.make(s.triad(6, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asaug5_16;
  c.make(s.triad(6, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfaug5_16;
  c.make(s.triad(6, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Baug5_16;

  c.make(s.triad(7, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Caug6_16;
  c.make(s.triad(7, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csaug6_16;
  c.make(s.triad(7, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Daug6_16;
  c.make(s.triad(7, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsaug6_16;
  c.make(s.triad(7, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efaug6_16;
  c.make(s.triad(7, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Eaug6_16;
  c.make(s.triad(7, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Faug6_16;
  c.make(s.triad(7, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsaug6_16;
  c.make(s.triad(7, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfaug6_16;
  c.make(s.triad(7, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gaug6_16;
  c.make(s.triad(7, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsaug6_16;
  c.make(s.triad(7, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afaug6_16;
  c.make(s.triad(7, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Aaug6_16;
  c.make(s.triad(7, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asaug6_16;
  c.make(s.triad(7, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfaug6_16;
  c.make(s.triad(7, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Baug6_16;

  c.make(s.triad(8, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Caug7_16;
  c.make(s.triad(8, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csaug7_16;
  c.make(s.triad(8, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Daug7_16;
  c.make(s.triad(8, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsaug7_16;
  c.make(s.triad(8, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efaug7_16;
  c.make(s.triad(8, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Eaug7_16;
  c.make(s.triad(8, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Faug7_16;
  c.make(s.triad(8, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsaug7_16;
  c.make(s.triad(8, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfaug7_16;
  c.make(s.triad(8, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gaug7_16;
  c.make(s.triad(8, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsaug7_16;
  c.make(s.triad(8, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afaug7_16;
  c.make(s.triad(8, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Aaug7_16;
  c.make(s.triad(8, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asaug7_16;
  c.make(s.triad(8, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfaug7_16;
  c.make(s.triad(8, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Baug7_16;

  c.make(s.triad(9, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Caug8_16;
  c.make(s.triad(9, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csaug8_16;
  c.make(s.triad(9, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Daug8_16;
  c.make(s.triad(9, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsaug8_16;
  c.make(s.triad(9, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efaug8_16;
  c.make(s.triad(9, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Eaug8_16;
  c.make(s.triad(9, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Faug8_16;
  c.make(s.triad(9, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsaug8_16;
  c.make(s.triad(9, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfaug8_16;
  c.make(s.triad(9, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gaug8_16;
  c.make(s.triad(9, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsaug8_16;
  c.make(s.triad(9, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afaug8_16;
  c.make(s.triad(9, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Aaug8_16;
  c.make(s.triad(9, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asaug8_16;
  c.make(s.triad(9, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfaug8_16;
  c.make(s.triad(9, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Chord Baug8_16;

  // Diminished  
  c.make(s.triad(0, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cdim_16;
  c.make(s.triad(0, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csdim_16;
  c.make(s.triad(0, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Ddim_16;
  c.make(s.triad(0, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsdim_16;
  c.make(s.triad(0, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efdim_16;
  c.make(s.triad(0, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Edim_16;
  c.make(s.triad(0, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fdim_16;
  c.make(s.triad(0, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsdim_16;
  c.make(s.triad(0, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfdim_16;
  c.make(s.triad(0, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gdim_16;
  c.make(s.triad(0, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsdim_16;
  c.make(s.triad(0, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afdim_16;
  c.make(s.triad(0, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Adim_16;
  c.make(s.triad(0, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asdim_16;
  c.make(s.triad(0, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfdim_16;
  c.make(s.triad(0, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bdim_16;

  c.make(s.triad(1, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cdim0_16;
  c.make(s.triad(1, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csdim0_16;
  c.make(s.triad(1, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Ddim0_16;
  c.make(s.triad(1, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsdim0_16;
  c.make(s.triad(1, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efdim0_16;
  c.make(s.triad(1, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Edim0_16;
  c.make(s.triad(1, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fdim0_16;
  c.make(s.triad(1, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsdim0_16;
  c.make(s.triad(1, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfdim0_16;
  c.make(s.triad(1, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gdim0_16;
  c.make(s.triad(1, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsdim0_16;
  c.make(s.triad(1, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afdim0_16;
  c.make(s.triad(1, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Adim0_16;
  c.make(s.triad(1, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asdim0_16;
  c.make(s.triad(1, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfdim0_16;
  c.make(s.triad(1, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bdim0_16;

  c.make(s.triad(2, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cdim1_16;
  c.make(s.triad(2, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csdim1_16;
  c.make(s.triad(2, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Ddim1_16;
  c.make(s.triad(2, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsdim1_16;
  c.make(s.triad(2, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efdim1_16;
  c.make(s.triad(2, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Edim1_16;
  c.make(s.triad(2, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fdim1_16;
  c.make(s.triad(2, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsdim1_16;
  c.make(s.triad(2, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfdim1_16;
  c.make(s.triad(2, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gdim1_16;
  c.make(s.triad(2, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsdim1_16;
  c.make(s.triad(2, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afdim1_16;
  c.make(s.triad(2, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Adim1_16;
  c.make(s.triad(2, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asdim1_16;
  c.make(s.triad(2, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfdim1_16;
  c.make(s.triad(2, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bdim1_16;

  c.make(s.triad(3, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cdim2_16;
  c.make(s.triad(3, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csdim2_16;
  c.make(s.triad(3, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Ddim2_16;
  c.make(s.triad(3, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsdim2_16;
  c.make(s.triad(3, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efdim2_16;
  c.make(s.triad(3, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Edim2_16;
  c.make(s.triad(3, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fdim2_16;
  c.make(s.triad(3, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsdim2_16;
  c.make(s.triad(3, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfdim2_16;
  c.make(s.triad(3, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gdim2_16;
  c.make(s.triad(3, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsdim2_16;
  c.make(s.triad(3, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afdim2_16;
  c.make(s.triad(3, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Adim2_16;
  c.make(s.triad(3, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asdim2_16;
  c.make(s.triad(3, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfdim2_16;
  c.make(s.triad(3, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bdim2_16;

  c.make(s.triad(4, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cdim3_16;
  c.make(s.triad(4, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csdim3_16;
  c.make(s.triad(4, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Ddim3_16;
  c.make(s.triad(4, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsdim3_16;
  c.make(s.triad(4, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efdim3_16;
  c.make(s.triad(4, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Edim3_16;
  c.make(s.triad(4, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fdim3_16;
  c.make(s.triad(4, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsdim3_16;
  c.make(s.triad(4, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfdim3_16;
  c.make(s.triad(4, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gdim3_16;
  c.make(s.triad(4, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsdim3_16;
  c.make(s.triad(4, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afdim3_16;
  c.make(s.triad(4, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Adim3_16;
  c.make(s.triad(4, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asdim3_16;
  c.make(s.triad(4, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfdim3_16;
  c.make(s.triad(4, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bdim3_16;

  c.make(s.triad(5, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cdim4_16;
  c.make(s.triad(5, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csdim4_16;
  c.make(s.triad(5, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Ddim4_16;
  c.make(s.triad(5, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsdim4_16;
  c.make(s.triad(5, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efdim4_16;
  c.make(s.triad(5, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Edim4_16;
  c.make(s.triad(5, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fdim4_16;
  c.make(s.triad(5, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsdim4_16;
  c.make(s.triad(5, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfdim4_16;
  c.make(s.triad(5, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gdim4_16;
  c.make(s.triad(5, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsdim4_16;
  c.make(s.triad(5, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afdim4_16;
  c.make(s.triad(5, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Adim4_16;
  c.make(s.triad(5, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asdim4_16;
  c.make(s.triad(5, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfdim4_16;
  c.make(s.triad(5, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bdim4_16;

  c.make(s.triad(6, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cdim5_16;
  c.make(s.triad(6, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csdim5_16;
  c.make(s.triad(6, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Ddim5_16;
  c.make(s.triad(6, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsdim5_16;
  c.make(s.triad(6, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efdim5_16;
  c.make(s.triad(6, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Edim5_16;
  c.make(s.triad(6, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fdim5_16;
  c.make(s.triad(6, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsdim5_16;
  c.make(s.triad(6, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfdim5_16;
  c.make(s.triad(6, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gdim5_16;
  c.make(s.triad(6, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsdim5_16;
  c.make(s.triad(6, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afdim5_16;
  c.make(s.triad(6, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Adim5_16;
  c.make(s.triad(6, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asdim5_16;
  c.make(s.triad(6, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfdim5_16;
  c.make(s.triad(6, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bdim5_16;

  c.make(s.triad(7, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cdim6_16;
  c.make(s.triad(7, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csdim6_16;
  c.make(s.triad(7, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Ddim6_16;
  c.make(s.triad(7, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsdim6_16;
  c.make(s.triad(7, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efdim6_16;
  c.make(s.triad(7, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Edim6_16;
  c.make(s.triad(7, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fdim6_16;
  c.make(s.triad(7, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsdim6_16;
  c.make(s.triad(7, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfdim6_16;
  c.make(s.triad(7, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gdim6_16;
  c.make(s.triad(7, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsdim6_16;
  c.make(s.triad(7, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afdim6_16;
  c.make(s.triad(7, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Adim6_16;
  c.make(s.triad(7, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asdim6_16;
  c.make(s.triad(7, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfdim6_16;
  c.make(s.triad(7, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bdim6_16;

  c.make(s.triad(8, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cdim7_16;
  c.make(s.triad(8, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csdim7_16;
  c.make(s.triad(8, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Ddim7_16;
  c.make(s.triad(8, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsdim7_16;
  c.make(s.triad(8, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efdim7_16;
  c.make(s.triad(8, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Edim7_16;
  c.make(s.triad(8, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fdim7_16;
  c.make(s.triad(8, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsdim7_16;
  c.make(s.triad(8, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfdim7_16;
  c.make(s.triad(8, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gdim7_16;
  c.make(s.triad(8, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsdim7_16;
  c.make(s.triad(8, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afdim7_16;
  c.make(s.triad(8, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Adim7_16;
  c.make(s.triad(8, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asdim7_16;
  c.make(s.triad(8, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfdim7_16;
  c.make(s.triad(8, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bdim7_16;

  c.make(s.triad(9, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Cdim8_16;
  c.make(s.triad(9, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Csdim8_16;
  c.make(s.triad(9, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Ddim8_16;
  c.make(s.triad(9, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Dsdim8_16;
  c.make(s.triad(9, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Efdim8_16;
  c.make(s.triad(9, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Edim8_16;
  c.make(s.triad(9, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord _Fdim8_16;
  c.make(s.triad(9, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Fsdim8_16;
  c.make(s.triad(9, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gfdim8_16;
  c.make(s.triad(9, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gdim8_16;
  c.make(s.triad(9, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Gsdim8_16;
  c.make(s.triad(9, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Afdim8_16;
  c.make(s.triad(9, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Adim8_16;
  c.make(s.triad(9, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Asdim8_16;
  c.make(s.triad(9, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bfdim8_16;
  c.make(s.triad(9, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Chord Bdim8_16;

  //
  // THRTYSCND
  //

  // Major
  // 0-based offsets
  c.make(s.triad(0, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CM_32;
  c.make(s.triad(0, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CsM_32;
  c.make(s.triad(0, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DM_32;
  c.make(s.triad(0, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DsM_32;
  c.make(s.triad(0, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EfM_32;
  c.make(s.triad(0, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EM_32;
  c.make(s.triad(0, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FM_32;
  c.make(s.triad(0, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FsM_32;
  c.make(s.triad(0, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GfM_32;
  c.make(s.triad(0, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GM_32;
  c.make(s.triad(0, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GsM_32;
  c.make(s.triad(0, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AfM_32;
  c.make(s.triad(0, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AM_32;
  c.make(s.triad(0, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AsM_32;
  c.make(s.triad(0, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BfM_32;
  c.make(s.triad(0, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BM_32;

  // constants predefined per octave
  c.make(s.triad(1, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CM0_32;
  c.make(s.triad(1, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CsM0_32;
  c.make(s.triad(1, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DM0_32;
  c.make(s.triad(1, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DsM0_32;
  c.make(s.triad(1, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EfM0_32;
  c.make(s.triad(1, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EM0_32;
  c.make(s.triad(1, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FM0_32;
  c.make(s.triad(1, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FsM0_32;
  c.make(s.triad(1, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GfM0_32;
  c.make(s.triad(1, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GM0_32;
  c.make(s.triad(1, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GsM0_32;
  c.make(s.triad(1, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AfM0_32;
  c.make(s.triad(1, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AM0_32;
  c.make(s.triad(1, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AsM0_32;
  c.make(s.triad(1, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BfM0_32;
  c.make(s.triad(1, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BM0_32;

  c.make(s.triad(2, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CM1_32;
  c.make(s.triad(2, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CsM1_32;
  c.make(s.triad(2, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DM1_32;
  c.make(s.triad(2, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DsM1_32;
  c.make(s.triad(2, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EfM1_32;
  c.make(s.triad(2, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EM1_32;
  c.make(s.triad(2, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FM1_32;
  c.make(s.triad(2, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FsM1_32;
  c.make(s.triad(2, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GfM1_32;
  c.make(s.triad(2, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GM1_32;
  c.make(s.triad(2, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GsM1_32;
  c.make(s.triad(2, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AfM1_32;
  c.make(s.triad(2, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AM1_32;
  c.make(s.triad(2, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AsM1_32;
  c.make(s.triad(2, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BfM1_32;
  c.make(s.triad(2, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BM1_32;

  c.make(s.triad(3, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CM2_32;
  c.make(s.triad(3, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CsM2_32;
  c.make(s.triad(3, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DM2_32;
  c.make(s.triad(3, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DsM2_32;
  c.make(s.triad(3, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EfM2_32;
  c.make(s.triad(3, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EM2_32;
  c.make(s.triad(3, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FM2_32;
  c.make(s.triad(3, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FsM2_32;
  c.make(s.triad(3, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GfM2_32;
  c.make(s.triad(3, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GM2_32;
  c.make(s.triad(3, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GsM2_32;
  c.make(s.triad(3, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AfM2_32;
  c.make(s.triad(3, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AM2_32;
  c.make(s.triad(3, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AsM2_32;
  c.make(s.triad(3, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BfM2_32;
  c.make(s.triad(3, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BM2_32;

  c.make(s.triad(4, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CM3_32;
  c.make(s.triad(4, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CsM3_32;
  c.make(s.triad(4, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DM3_32;
  c.make(s.triad(4, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DsM3_32;
  c.make(s.triad(4, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EfM3_32;
  c.make(s.triad(4, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EM3_32;
  c.make(s.triad(4, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FM3_32;
  c.make(s.triad(4, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FsM3_32;
  c.make(s.triad(4, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GfM3_32;
  c.make(s.triad(4, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GM3_32;
  c.make(s.triad(4, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GsM3_32;
  c.make(s.triad(4, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AfM3_32;
  c.make(s.triad(4, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AM3_32;
  c.make(s.triad(4, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AsM3_32;
  c.make(s.triad(4, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BfM3_32;
  c.make(s.triad(4, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BM3_32;

  c.make(s.triad(5, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CM4_32;
  c.make(s.triad(5, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CsM4_32;
  c.make(s.triad(5, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DM4_32;
  c.make(s.triad(5, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DsM4_32;
  c.make(s.triad(5, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EfM4_32;
  c.make(s.triad(5, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EM4_32;
  c.make(s.triad(5, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FM4_32;
  c.make(s.triad(5, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FsM4_32;
  c.make(s.triad(5, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GfM4_32;
  c.make(s.triad(5, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GM4_32;
  c.make(s.triad(5, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GsM4_32;
  c.make(s.triad(5, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AfM4_32;
  c.make(s.triad(5, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AM4_32;
  c.make(s.triad(5, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AsM4_32;
  c.make(s.triad(5, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BfM4_32;
  c.make(s.triad(5, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BM4_32;

  c.make(s.triad(6, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CM5_32;
  c.make(s.triad(6, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CsM5_32;
  c.make(s.triad(6, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DM5_32;
  c.make(s.triad(6, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DsM5_32;
  c.make(s.triad(6, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EfM5_32;
  c.make(s.triad(6, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EM5_32;
  c.make(s.triad(6, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FM5_32;
  c.make(s.triad(6, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FsM5_32;
  c.make(s.triad(6, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GfM5_32;
  c.make(s.triad(6, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GM5_32;
  c.make(s.triad(6, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GsM5_32;
  c.make(s.triad(6, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AfM5_32;
  c.make(s.triad(6, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AM5_32;
  c.make(s.triad(6, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AsM5_32;
  c.make(s.triad(6, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BfM5_32;
  c.make(s.triad(6, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BM5_32;

  c.make(s.triad(7, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CM6_32;
  c.make(s.triad(7, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CsM6_32;
  c.make(s.triad(7, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DM6_32;
  c.make(s.triad(7, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DsM6_32;
  c.make(s.triad(7, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EfM6_32;
  c.make(s.triad(7, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EM6_32;
  c.make(s.triad(7, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FM6_32;
  c.make(s.triad(7, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FsM6_32;
  c.make(s.triad(7, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GfM6_32;
  c.make(s.triad(7, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GM6_32;
  c.make(s.triad(7, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GsM6_32;
  c.make(s.triad(7, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AfM6_32;
  c.make(s.triad(7, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AM6_32;
  c.make(s.triad(7, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AsM6_32;
  c.make(s.triad(7, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BfM6_32;
  c.make(s.triad(7, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BM6_32;

  c.make(s.triad(8, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CM7_32;
  c.make(s.triad(8, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CsM7_32;
  c.make(s.triad(8, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DM7_32;
  c.make(s.triad(8, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DsM7_32;
  c.make(s.triad(8, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EfM7_32;
  c.make(s.triad(8, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EM7_32;
  c.make(s.triad(8, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FM7_32;
  c.make(s.triad(8, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FsM7_32;
  c.make(s.triad(8, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GfM7_32;
  c.make(s.triad(8, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GM7_32;
  c.make(s.triad(8, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GsM7_32;
  c.make(s.triad(8, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AfM7_32;
  c.make(s.triad(8, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AM7_32;
  c.make(s.triad(8, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AsM7_32;
  c.make(s.triad(8, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BfM7_32;
  c.make(s.triad(8, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BM7_32;

  c.make(s.triad(9, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CM8_32;
  c.make(s.triad(9, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord CsM8_32;
  c.make(s.triad(9, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DM8_32;
  c.make(s.triad(9, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord DsM8_32;
  c.make(s.triad(9, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EfM8_32;
  c.make(s.triad(9, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord EM8_32;
  c.make(s.triad(9, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FM8_32;
  c.make(s.triad(9, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord FsM8_32;
  c.make(s.triad(9, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GfM8_32;
  c.make(s.triad(9, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GM8_32;
  c.make(s.triad(9, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord GsM8_32;
  c.make(s.triad(9, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AfM8_32;
  c.make(s.triad(9, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AM8_32;
  c.make(s.triad(9, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord AsM8_32;
  c.make(s.triad(9, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BfM8_32;
  c.make(s.triad(9, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> Chord BM8_32;

  // Minor
  c.make(s.triad(0, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cm_32;
  c.make(s.triad(0, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csm_32;
  c.make(s.triad(0, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dm_32;
  c.make(s.triad(0, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsm_32;
  c.make(s.triad(0, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efm_32;
  c.make(s.triad(0, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Em_32;
  c.make(s.triad(0, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fm_32;
  c.make(s.triad(0, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsm_32;
  c.make(s.triad(0, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfm_32;
  c.make(s.triad(0, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gm_32;
  c.make(s.triad(0, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsm_32;
  c.make(s.triad(0, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afm_32;
  c.make(s.triad(0, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Am_32;
  c.make(s.triad(0, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asm_32;
  c.make(s.triad(0, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfm_32;
  c.make(s.triad(0, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bm_32;

  c.make(s.triad(1, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cm0_32;
  c.make(s.triad(1, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csm0_32;
  c.make(s.triad(1, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dm0_32;
  c.make(s.triad(1, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsm0_32;
  c.make(s.triad(1, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efm0_32;
  c.make(s.triad(1, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Em0_32;
  c.make(s.triad(1, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fm0_32;
  c.make(s.triad(1, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsm0_32;
  c.make(s.triad(1, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfm0_32;
  c.make(s.triad(1, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gm0_32;
  c.make(s.triad(1, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsm0_32;
  c.make(s.triad(1, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afm0_32;
  c.make(s.triad(1, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Am0_32;
  c.make(s.triad(1, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asm0_32;
  c.make(s.triad(1, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfm0_32;
  c.make(s.triad(1, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bm0_32;

  c.make(s.triad(2, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cm1_32;
  c.make(s.triad(2, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csm1_32;
  c.make(s.triad(2, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dm1_32;
  c.make(s.triad(2, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsm1_32;
  c.make(s.triad(2, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efm1_32;
  c.make(s.triad(2, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Em1_32;
  c.make(s.triad(2, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fm1_32;
  c.make(s.triad(2, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsm1_32;
  c.make(s.triad(2, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfm1_32;
  c.make(s.triad(2, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gm1_32;
  c.make(s.triad(2, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsm1_32;
  c.make(s.triad(2, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afm1_32;
  c.make(s.triad(2, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Am1_32;
  c.make(s.triad(2, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asm1_32;
  c.make(s.triad(2, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfm1_32;
  c.make(s.triad(2, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bm1_32;

  c.make(s.triad(3, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cm2_32;
  c.make(s.triad(3, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csm2_32;
  c.make(s.triad(3, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dm2_32;
  c.make(s.triad(3, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsm2_32;
  c.make(s.triad(3, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efm2_32;
  c.make(s.triad(3, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Em2_32;
  c.make(s.triad(3, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fm2_32;
  c.make(s.triad(3, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsm2_32;
  c.make(s.triad(3, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfm2_32;
  c.make(s.triad(3, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gm2_32;
  c.make(s.triad(3, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsm2_32;
  c.make(s.triad(3, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afm2_32;
  c.make(s.triad(3, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Am2_32;
  c.make(s.triad(3, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asm2_32;
  c.make(s.triad(3, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfm2_32;
  c.make(s.triad(3, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bm2_32;

  c.make(s.triad(4, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cm3_32;
  c.make(s.triad(4, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csm3_32;
  c.make(s.triad(4, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dm3_32;
  c.make(s.triad(4, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsm3_32;
  c.make(s.triad(4, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efm3_32;
  c.make(s.triad(4, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Em3_32;
  c.make(s.triad(4, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fm3_32;
  c.make(s.triad(4, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsm3_32;
  c.make(s.triad(4, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfm3_32;
  c.make(s.triad(4, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gm3_32;
  c.make(s.triad(4, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsm3_32;
  c.make(s.triad(4, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afm3_32;
  c.make(s.triad(4, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Am3_32;
  c.make(s.triad(4, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asm3_32;
  c.make(s.triad(4, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfm3_32;
  c.make(s.triad(4, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bm3_32;

  c.make(s.triad(5, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cm4_32;
  c.make(s.triad(5, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csm4_32;
  c.make(s.triad(5, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dm4_32;
  c.make(s.triad(5, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsm4_32;
  c.make(s.triad(5, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efm4_32;
  c.make(s.triad(5, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Em4_32;
  c.make(s.triad(5, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fm4_32;
  c.make(s.triad(5, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsm4_32;
  c.make(s.triad(5, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfm4_32;
  c.make(s.triad(5, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gm4_32;
  c.make(s.triad(5, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsm4_32;
  c.make(s.triad(5, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afm4_32;
  c.make(s.triad(5, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Am4_32;
  c.make(s.triad(5, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asm4_32;
  c.make(s.triad(5, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfm4_32;
  c.make(s.triad(5, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bm4_32;

  c.make(s.triad(6, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cm5_32;
  c.make(s.triad(6, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csm5_32;
  c.make(s.triad(6, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dm5_32;
  c.make(s.triad(6, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsm5_32;
  c.make(s.triad(6, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efm5_32;
  c.make(s.triad(6, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Em5_32;
  c.make(s.triad(6, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fm5_32;
  c.make(s.triad(6, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsm5_32;
  c.make(s.triad(6, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfm5_32;
  c.make(s.triad(6, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gm5_32;
  c.make(s.triad(6, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsm5_32;
  c.make(s.triad(6, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afm5_32;
  c.make(s.triad(6, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Am5_32;
  c.make(s.triad(6, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asm5_32;
  c.make(s.triad(6, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfm5_32;
  c.make(s.triad(6, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bm5_32;

  c.make(s.triad(7, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cm6_32;
  c.make(s.triad(7, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csm6_32;
  c.make(s.triad(7, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dm6_32;
  c.make(s.triad(7, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsm6_32;
  c.make(s.triad(7, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efm6_32;
  c.make(s.triad(7, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Em6_32;
  c.make(s.triad(7, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fm6_32;
  c.make(s.triad(7, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsm6_32;
  c.make(s.triad(7, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfm6_32;
  c.make(s.triad(7, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gm6_32;
  c.make(s.triad(7, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsm6_32;
  c.make(s.triad(7, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afm6_32;
  c.make(s.triad(7, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Am6_32;
  c.make(s.triad(7, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asm6_32;
  c.make(s.triad(7, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfm6_32;
  c.make(s.triad(7, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bm6_32;

  c.make(s.triad(8, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cm7_32;
  c.make(s.triad(8, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csm7_32;
  c.make(s.triad(8, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dm7_32;
  c.make(s.triad(8, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsm7_32;
  c.make(s.triad(8, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efm7_32;
  c.make(s.triad(8, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Em7_32;
  c.make(s.triad(8, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fm7_32;
  c.make(s.triad(8, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsm7_32;
  c.make(s.triad(8, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfm7_32;
  c.make(s.triad(8, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gm7_32;
  c.make(s.triad(8, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsm7_32;
  c.make(s.triad(8, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afm7_32;
  c.make(s.triad(8, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Am7_32;
  c.make(s.triad(8, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asm7_32;
  c.make(s.triad(8, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfm7_32;
  c.make(s.triad(8, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bm7_32;

  c.make(s.triad(9, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cm8_32;
  c.make(s.triad(9, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csm8_32;
  c.make(s.triad(9, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dm8_32;
  c.make(s.triad(9, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsm8_32;
  c.make(s.triad(9, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efm8_32;
  c.make(s.triad(9, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Em8_32;
  c.make(s.triad(9, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fm8_32;
  c.make(s.triad(9, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsm8_32;
  c.make(s.triad(9, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfm8_32;
  c.make(s.triad(9, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gm8_32;
  c.make(s.triad(9, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsm8_32;
  c.make(s.triad(9, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afm8_32;
  c.make(s.triad(9, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Am8_32;
  c.make(s.triad(9, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asm8_32;
  c.make(s.triad(9, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfm8_32;
  c.make(s.triad(9, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bm8_32;

  // Augmented
  c.make(s.triad(0, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Caug_32;
  c.make(s.triad(0, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csaug_32;
  c.make(s.triad(0, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Daug_32;
  c.make(s.triad(0, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsaug_32;
  c.make(s.triad(0, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efaug_32;
  c.make(s.triad(0, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Eaug_32;
  c.make(s.triad(0, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Faug_32;
  c.make(s.triad(0, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsaug_32;
  c.make(s.triad(0, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfaug_32;
  c.make(s.triad(0, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gaug_32;
  c.make(s.triad(0, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsaug_32;
  c.make(s.triad(0, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afaug_32;
  c.make(s.triad(0, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Aaug_32;
  c.make(s.triad(0, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asaug_32;
  c.make(s.triad(0, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfaug_32;
  c.make(s.triad(0, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Baug_32;

  c.make(s.triad(1, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Caug0_32;
  c.make(s.triad(1, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csaug0_32;
  c.make(s.triad(1, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Daug0_32;
  c.make(s.triad(1, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsaug0_32;
  c.make(s.triad(1, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efaug0_32;
  c.make(s.triad(1, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Eaug0_32;
  c.make(s.triad(1, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Faug0_32;
  c.make(s.triad(1, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsaug0_32;
  c.make(s.triad(1, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfaug0_32;
  c.make(s.triad(1, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gaug0_32;
  c.make(s.triad(1, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsaug0_32;
  c.make(s.triad(1, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afaug0_32;
  c.make(s.triad(1, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Aaug0_32;
  c.make(s.triad(1, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asaug0_32;
  c.make(s.triad(1, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfaug0_32;
  c.make(s.triad(1, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Baug0_32;

  c.make(s.triad(2, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Caug1_32;
  c.make(s.triad(2, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csaug1_32;
  c.make(s.triad(2, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Daug1_32;
  c.make(s.triad(2, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsaug1_32;
  c.make(s.triad(2, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efaug1_32;
  c.make(s.triad(2, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Eaug1_32;
  c.make(s.triad(2, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Faug1_32;
  c.make(s.triad(2, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsaug1_32;
  c.make(s.triad(2, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfaug1_32;
  c.make(s.triad(2, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gaug1_32;
  c.make(s.triad(2, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsaug1_32;
  c.make(s.triad(2, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afaug1_32;
  c.make(s.triad(2, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Aaug1_32;
  c.make(s.triad(2, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asaug1_32;
  c.make(s.triad(2, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfaug1_32;
  c.make(s.triad(2, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Baug1_32;

  c.make(s.triad(3, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Caug2_32;
  c.make(s.triad(3, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csaug2_32;
  c.make(s.triad(3, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Daug2_32;
  c.make(s.triad(3, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsaug2_32;
  c.make(s.triad(3, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efaug2_32;
  c.make(s.triad(3, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Eaug2_32;
  c.make(s.triad(3, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Faug2_32;
  c.make(s.triad(3, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsaug2_32;
  c.make(s.triad(3, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfaug2_32;
  c.make(s.triad(3, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gaug2_32;
  c.make(s.triad(3, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsaug2_32;
  c.make(s.triad(3, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afaug2_32;
  c.make(s.triad(3, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Aaug2_32;
  c.make(s.triad(3, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asaug2_32;
  c.make(s.triad(3, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfaug2_32;
  c.make(s.triad(3, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Baug2_32;

  c.make(s.triad(4, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Caug3_32;
  c.make(s.triad(4, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csaug3_32;
  c.make(s.triad(4, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Daug3_32;
  c.make(s.triad(4, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsaug3_32;
  c.make(s.triad(4, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efaug3_32;
  c.make(s.triad(4, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Eaug3_32;
  c.make(s.triad(4, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Faug3_32;
  c.make(s.triad(4, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsaug3_32;
  c.make(s.triad(4, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfaug3_32;
  c.make(s.triad(4, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gaug3_32;
  c.make(s.triad(4, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsaug3_32;
  c.make(s.triad(4, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afaug3_32;
  c.make(s.triad(4, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Aaug3_32;
  c.make(s.triad(4, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asaug3_32;
  c.make(s.triad(4, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfaug3_32;
  c.make(s.triad(4, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Baug3_32;

  c.make(s.triad(5, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Caug4_32;
  c.make(s.triad(5, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csaug4_32;
  c.make(s.triad(5, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Daug4_32;
  c.make(s.triad(5, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsaug4_32;
  c.make(s.triad(5, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efaug4_32;
  c.make(s.triad(5, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Eaug4_32;
  c.make(s.triad(5, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Faug4_32;
  c.make(s.triad(5, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsaug4_32;
  c.make(s.triad(5, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfaug4_32;
  c.make(s.triad(5, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gaug4_32;
  c.make(s.triad(5, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsaug4_32;
  c.make(s.triad(5, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afaug4_32;
  c.make(s.triad(5, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Aaug4_32;
  c.make(s.triad(5, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asaug4_32;
  c.make(s.triad(5, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfaug4_32;
  c.make(s.triad(5, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Baug4_32;

  c.make(s.triad(6, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Caug5_32;
  c.make(s.triad(6, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csaug5_32;
  c.make(s.triad(6, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Daug5_32;
  c.make(s.triad(6, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsaug5_32;
  c.make(s.triad(6, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efaug5_32;
  c.make(s.triad(6, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Eaug5_32;
  c.make(s.triad(6, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Faug5_32;
  c.make(s.triad(6, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsaug5_32;
  c.make(s.triad(6, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfaug5_32;
  c.make(s.triad(6, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gaug5_32;
  c.make(s.triad(6, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsaug5_32;
  c.make(s.triad(6, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afaug5_32;
  c.make(s.triad(6, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Aaug5_32;
  c.make(s.triad(6, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asaug5_32;
  c.make(s.triad(6, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfaug5_32;
  c.make(s.triad(6, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Baug5_32;

  c.make(s.triad(7, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Caug6_32;
  c.make(s.triad(7, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csaug6_32;
  c.make(s.triad(7, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Daug6_32;
  c.make(s.triad(7, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsaug6_32;
  c.make(s.triad(7, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efaug6_32;
  c.make(s.triad(7, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Eaug6_32;
  c.make(s.triad(7, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Faug6_32;
  c.make(s.triad(7, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsaug6_32;
  c.make(s.triad(7, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfaug6_32;
  c.make(s.triad(7, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gaug6_32;
  c.make(s.triad(7, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsaug6_32;
  c.make(s.triad(7, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afaug6_32;
  c.make(s.triad(7, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Aaug6_32;
  c.make(s.triad(7, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asaug6_32;
  c.make(s.triad(7, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfaug6_32;
  c.make(s.triad(7, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Baug6_32;

  c.make(s.triad(8, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Caug7_32;
  c.make(s.triad(8, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csaug7_32;
  c.make(s.triad(8, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Daug7_32;
  c.make(s.triad(8, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsaug7_32;
  c.make(s.triad(8, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efaug7_32;
  c.make(s.triad(8, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Eaug7_32;
  c.make(s.triad(8, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Faug7_32;
  c.make(s.triad(8, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsaug7_32;
  c.make(s.triad(8, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfaug7_32;
  c.make(s.triad(8, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gaug7_32;
  c.make(s.triad(8, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsaug7_32;
  c.make(s.triad(8, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afaug7_32;
  c.make(s.triad(8, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Aaug7_32;
  c.make(s.triad(8, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asaug7_32;
  c.make(s.triad(8, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfaug7_32;
  c.make(s.triad(8, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Baug7_32;

  c.make(s.triad(9, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Caug8_32;
  c.make(s.triad(9, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csaug8_32;
  c.make(s.triad(9, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Daug8_32;
  c.make(s.triad(9, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsaug8_32;
  c.make(s.triad(9, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efaug8_32;
  c.make(s.triad(9, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Eaug8_32;
  c.make(s.triad(9, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Faug8_32;
  c.make(s.triad(9, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsaug8_32;
  c.make(s.triad(9, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfaug8_32;
  c.make(s.triad(9, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gaug8_32;
  c.make(s.triad(9, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsaug8_32;
  c.make(s.triad(9, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afaug8_32;
  c.make(s.triad(9, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Aaug8_32;
  c.make(s.triad(9, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asaug8_32;
  c.make(s.triad(9, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfaug8_32;
  c.make(s.triad(9, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Baug8_32;

  // Diminished  
  c.make(s.triad(0, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cdim_32;
  c.make(s.triad(0, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csdim_32;
  c.make(s.triad(0, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Ddim_32;
  c.make(s.triad(0, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsdim_32;
  c.make(s.triad(0, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efdim_32;
  c.make(s.triad(0, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Edim_32;
  c.make(s.triad(0, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fdim_32;
  c.make(s.triad(0, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsdim_32;
  c.make(s.triad(0, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfdim_32;
  c.make(s.triad(0, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gdim_32;
  c.make(s.triad(0, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsdim_32;
  c.make(s.triad(0, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afdim_32;
  c.make(s.triad(0, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Adim_32;
  c.make(s.triad(0, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asdim_32;
  c.make(s.triad(0, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfdim_32;
  c.make(s.triad(0, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bdim_32;

  c.make(s.triad(1, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cdim0_32;
  c.make(s.triad(1, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csdim0_32;
  c.make(s.triad(1, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Ddim0_32;
  c.make(s.triad(1, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsdim0_32;
  c.make(s.triad(1, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efdim0_32;
  c.make(s.triad(1, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Edim0_32;
  c.make(s.triad(1, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fdim0_32;
  c.make(s.triad(1, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsdim0_32;
  c.make(s.triad(1, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfdim0_32;
  c.make(s.triad(1, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gdim0_32;
  c.make(s.triad(1, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsdim0_32;
  c.make(s.triad(1, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afdim0_32;
  c.make(s.triad(1, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Adim0_32;
  c.make(s.triad(1, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asdim0_32;
  c.make(s.triad(1, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfdim0_32;
  c.make(s.triad(1, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bdim0_32;

  c.make(s.triad(2, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cdim1_32;
  c.make(s.triad(2, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csdim1_32;
  c.make(s.triad(2, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Ddim1_32;
  c.make(s.triad(2, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsdim1_32;
  c.make(s.triad(2, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efdim1_32;
  c.make(s.triad(2, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Edim1_32;
  c.make(s.triad(2, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fdim1_32;
  c.make(s.triad(2, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsdim1_32;
  c.make(s.triad(2, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfdim1_32;
  c.make(s.triad(2, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gdim1_32;
  c.make(s.triad(2, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsdim1_32;
  c.make(s.triad(2, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afdim1_32;
  c.make(s.triad(2, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Adim1_32;
  c.make(s.triad(2, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asdim1_32;
  c.make(s.triad(2, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfdim1_32;
  c.make(s.triad(2, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bdim1_32;

  c.make(s.triad(3, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cdim2_32;
  c.make(s.triad(3, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csdim2_32;
  c.make(s.triad(3, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Ddim2_32;
  c.make(s.triad(3, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsdim2_32;
  c.make(s.triad(3, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efdim2_32;
  c.make(s.triad(3, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Edim2_32;
  c.make(s.triad(3, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fdim2_32;
  c.make(s.triad(3, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsdim2_32;
  c.make(s.triad(3, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfdim2_32;
  c.make(s.triad(3, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gdim2_32;
  c.make(s.triad(3, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsdim2_32;
  c.make(s.triad(3, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afdim2_32;
  c.make(s.triad(3, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Adim2_32;
  c.make(s.triad(3, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asdim2_32;
  c.make(s.triad(3, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfdim2_32;
  c.make(s.triad(3, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bdim2_32;

  c.make(s.triad(4, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cdim3_32;
  c.make(s.triad(4, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csdim3_32;
  c.make(s.triad(4, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Ddim3_32;
  c.make(s.triad(4, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsdim3_32;
  c.make(s.triad(4, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efdim3_32;
  c.make(s.triad(4, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Edim3_32;
  c.make(s.triad(4, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fdim3_32;
  c.make(s.triad(4, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsdim3_32;
  c.make(s.triad(4, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfdim3_32;
  c.make(s.triad(4, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gdim3_32;
  c.make(s.triad(4, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsdim3_32;
  c.make(s.triad(4, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afdim3_32;
  c.make(s.triad(4, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Adim3_32;
  c.make(s.triad(4, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asdim3_32;
  c.make(s.triad(4, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfdim3_32;
  c.make(s.triad(4, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bdim3_32;

  c.make(s.triad(5, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cdim4_32;
  c.make(s.triad(5, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csdim4_32;
  c.make(s.triad(5, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Ddim4_32;
  c.make(s.triad(5, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsdim4_32;
  c.make(s.triad(5, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efdim4_32;
  c.make(s.triad(5, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Edim4_32;
  c.make(s.triad(5, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fdim4_32;
  c.make(s.triad(5, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsdim4_32;
  c.make(s.triad(5, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfdim4_32;
  c.make(s.triad(5, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gdim4_32;
  c.make(s.triad(5, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsdim4_32;
  c.make(s.triad(5, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afdim4_32;
  c.make(s.triad(5, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Adim4_32;
  c.make(s.triad(5, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asdim4_32;
  c.make(s.triad(5, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfdim4_32;
  c.make(s.triad(5, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bdim4_32;

  c.make(s.triad(6, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cdim5_32;
  c.make(s.triad(6, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csdim5_32;
  c.make(s.triad(6, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Ddim5_32;
  c.make(s.triad(6, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsdim5_32;
  c.make(s.triad(6, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efdim5_32;
  c.make(s.triad(6, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Edim5_32;
  c.make(s.triad(6, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fdim5_32;
  c.make(s.triad(6, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsdim5_32;
  c.make(s.triad(6, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfdim5_32;
  c.make(s.triad(6, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gdim5_32;
  c.make(s.triad(6, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsdim5_32;
  c.make(s.triad(6, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afdim5_32;
  c.make(s.triad(6, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Adim5_32;
  c.make(s.triad(6, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asdim5_32;
  c.make(s.triad(6, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfdim5_32;
  c.make(s.triad(6, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bdim5_32;

  c.make(s.triad(7, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cdim6_32;
  c.make(s.triad(7, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csdim6_32;
  c.make(s.triad(7, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Ddim6_32;
  c.make(s.triad(7, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsdim6_32;
  c.make(s.triad(7, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efdim6_32;
  c.make(s.triad(7, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Edim6_32;
  c.make(s.triad(7, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fdim6_32;
  c.make(s.triad(7, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsdim6_32;
  c.make(s.triad(7, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfdim6_32;
  c.make(s.triad(7, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gdim6_32;
  c.make(s.triad(7, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsdim6_32;
  c.make(s.triad(7, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afdim6_32;
  c.make(s.triad(7, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Adim6_32;
  c.make(s.triad(7, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asdim6_32;
  c.make(s.triad(7, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfdim6_32;
  c.make(s.triad(7, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bdim6_32;

  c.make(s.triad(8, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cdim7_32;
  c.make(s.triad(8, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csdim7_32;
  c.make(s.triad(8, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Ddim7_32;
  c.make(s.triad(8, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsdim7_32;
  c.make(s.triad(8, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efdim7_32;
  c.make(s.triad(8, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Edim7_32;
  c.make(s.triad(8, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fdim7_32;
  c.make(s.triad(8, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsdim7_32;
  c.make(s.triad(8, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfdim7_32;
  c.make(s.triad(8, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gdim7_32;
  c.make(s.triad(8, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsdim7_32;
  c.make(s.triad(8, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afdim7_32;
  c.make(s.triad(8, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Adim7_32;
  c.make(s.triad(8, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asdim7_32;
  c.make(s.triad(8, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfdim7_32;
  c.make(s.triad(8, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bdim7_32;

  c.make(s.triad(9, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Cdim8_32;
  c.make(s.triad(9, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Csdim8_32;
  c.make(s.triad(9, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Ddim8_32;
  c.make(s.triad(9, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Dsdim8_32;
  c.make(s.triad(9, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Efdim8_32;
  c.make(s.triad(9, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Edim8_32;
  c.make(s.triad(9, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord _Fdim8_32;
  c.make(s.triad(9, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Fsdim8_32;
  c.make(s.triad(9, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gfdim8_32;
  c.make(s.triad(9, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gdim8_32;
  c.make(s.triad(9, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Gsdim8_32;
  c.make(s.triad(9, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Afdim8_32;
  c.make(s.triad(9, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Adim8_32;
  c.make(s.triad(9, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Asdim8_32;
  c.make(s.triad(9, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bfdim8_32;
  c.make(s.triad(9, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Chord Bdim8_32;

  //
  // SXTYFRTH
  //

  // Major
  // 0-based offsets
  c.make(s.triad(0, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CM_64;
  c.make(s.triad(0, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CsM_64;
  c.make(s.triad(0, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DM_64;
  c.make(s.triad(0, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DsM_64;
  c.make(s.triad(0, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EfM_64;
  c.make(s.triad(0, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EM_64;
  c.make(s.triad(0, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FM_64;
  c.make(s.triad(0, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FsM_64;
  c.make(s.triad(0, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GfM_64;
  c.make(s.triad(0, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GM_64;
  c.make(s.triad(0, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GsM_64;
  c.make(s.triad(0, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AfM_64;
  c.make(s.triad(0, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AM_64;
  c.make(s.triad(0, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AsM_64;
  c.make(s.triad(0, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BfM_64;
  c.make(s.triad(0, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BM_64;

  // constants predefined per octave
  c.make(s.triad(1, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CM0_64;
  c.make(s.triad(1, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CsM0_64;
  c.make(s.triad(1, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DM0_64;
  c.make(s.triad(1, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DsM0_64;
  c.make(s.triad(1, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EfM0_64;
  c.make(s.triad(1, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EM0_64;
  c.make(s.triad(1, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FM0_64;
  c.make(s.triad(1, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FsM0_64;
  c.make(s.triad(1, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GfM0_64;
  c.make(s.triad(1, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GM0_64;
  c.make(s.triad(1, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GsM0_64;
  c.make(s.triad(1, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AfM0_64;
  c.make(s.triad(1, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AM0_64;
  c.make(s.triad(1, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AsM0_64;
  c.make(s.triad(1, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BfM0_64;
  c.make(s.triad(1, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BM0_64;

  c.make(s.triad(2, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CM1_64;
  c.make(s.triad(2, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CsM1_64;
  c.make(s.triad(2, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DM1_64;
  c.make(s.triad(2, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DsM1_64;
  c.make(s.triad(2, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EfM1_64;
  c.make(s.triad(2, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EM1_64;
  c.make(s.triad(2, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FM1_64;
  c.make(s.triad(2, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FsM1_64;
  c.make(s.triad(2, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GfM1_64;
  c.make(s.triad(2, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GM1_64;
  c.make(s.triad(2, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GsM1_64;
  c.make(s.triad(2, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AfM1_64;
  c.make(s.triad(2, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AM1_64;
  c.make(s.triad(2, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AsM1_64;
  c.make(s.triad(2, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BfM1_64;
  c.make(s.triad(2, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BM1_64;

  c.make(s.triad(3, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CM2_64;
  c.make(s.triad(3, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CsM2_64;
  c.make(s.triad(3, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DM2_64;
  c.make(s.triad(3, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DsM2_64;
  c.make(s.triad(3, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EfM2_64;
  c.make(s.triad(3, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EM2_64;
  c.make(s.triad(3, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FM2_64;
  c.make(s.triad(3, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FsM2_64;
  c.make(s.triad(3, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GfM2_64;
  c.make(s.triad(3, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GM2_64;
  c.make(s.triad(3, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GsM2_64;
  c.make(s.triad(3, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AfM2_64;
  c.make(s.triad(3, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AM2_64;
  c.make(s.triad(3, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AsM2_64;
  c.make(s.triad(3, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BfM2_64;
  c.make(s.triad(3, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BM2_64;

  c.make(s.triad(4, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CM3_64;
  c.make(s.triad(4, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CsM3_64;
  c.make(s.triad(4, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DM3_64;
  c.make(s.triad(4, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DsM3_64;
  c.make(s.triad(4, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EfM3_64;
  c.make(s.triad(4, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EM3_64;
  c.make(s.triad(4, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FM3_64;
  c.make(s.triad(4, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FsM3_64;
  c.make(s.triad(4, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GfM3_64;
  c.make(s.triad(4, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GM3_64;
  c.make(s.triad(4, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GsM3_64;
  c.make(s.triad(4, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AfM3_64;
  c.make(s.triad(4, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AM3_64;
  c.make(s.triad(4, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AsM3_64;
  c.make(s.triad(4, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BfM3_64;
  c.make(s.triad(4, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BM3_64;

  c.make(s.triad(5, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CM4_64;
  c.make(s.triad(5, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CsM4_64;
  c.make(s.triad(5, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DM4_64;
  c.make(s.triad(5, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DsM4_64;
  c.make(s.triad(5, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EfM4_64;
  c.make(s.triad(5, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EM4_64;
  c.make(s.triad(5, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FM4_64;
  c.make(s.triad(5, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FsM4_64;
  c.make(s.triad(5, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GfM4_64;
  c.make(s.triad(5, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GM4_64;
  c.make(s.triad(5, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GsM4_64;
  c.make(s.triad(5, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AfM4_64;
  c.make(s.triad(5, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AM4_64;
  c.make(s.triad(5, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AsM4_64;
  c.make(s.triad(5, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BfM4_64;
  c.make(s.triad(5, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BM4_64;

  c.make(s.triad(6, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CM5_64;
  c.make(s.triad(6, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CsM5_64;
  c.make(s.triad(6, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DM5_64;
  c.make(s.triad(6, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DsM5_64;
  c.make(s.triad(6, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EfM5_64;
  c.make(s.triad(6, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EM5_64;
  c.make(s.triad(6, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FM5_64;
  c.make(s.triad(6, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FsM5_64;
  c.make(s.triad(6, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GfM5_64;
  c.make(s.triad(6, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GM5_64;
  c.make(s.triad(6, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GsM5_64;
  c.make(s.triad(6, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AfM5_64;
  c.make(s.triad(6, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AM5_64;
  c.make(s.triad(6, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AsM5_64;
  c.make(s.triad(6, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BfM5_64;
  c.make(s.triad(6, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BM5_64;

  c.make(s.triad(7, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CM6_64;
  c.make(s.triad(7, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CsM6_64;
  c.make(s.triad(7, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DM6_64;
  c.make(s.triad(7, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DsM6_64;
  c.make(s.triad(7, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EfM6_64;
  c.make(s.triad(7, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EM6_64;
  c.make(s.triad(7, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FM6_64;
  c.make(s.triad(7, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FsM6_64;
  c.make(s.triad(7, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GfM6_64;
  c.make(s.triad(7, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GM6_64;
  c.make(s.triad(7, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GsM6_64;
  c.make(s.triad(7, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AfM6_64;
  c.make(s.triad(7, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AM6_64;
  c.make(s.triad(7, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AsM6_64;
  c.make(s.triad(7, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BfM6_64;
  c.make(s.triad(7, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BM6_64;

  c.make(s.triad(8, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CM7_64;
  c.make(s.triad(8, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CsM7_64;
  c.make(s.triad(8, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DM7_64;
  c.make(s.triad(8, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DsM7_64;
  c.make(s.triad(8, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EfM7_64;
  c.make(s.triad(8, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EM7_64;
  c.make(s.triad(8, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FM7_64;
  c.make(s.triad(8, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FsM7_64;
  c.make(s.triad(8, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GfM7_64;
  c.make(s.triad(8, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GM7_64;
  c.make(s.triad(8, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GsM7_64;
  c.make(s.triad(8, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AfM7_64;
  c.make(s.triad(8, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AM7_64;
  c.make(s.triad(8, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AsM7_64;
  c.make(s.triad(8, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BfM7_64;
  c.make(s.triad(8, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BM7_64;

  c.make(s.triad(9, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CM8_64;
  c.make(s.triad(9, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord CsM8_64;
  c.make(s.triad(9, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DM8_64;
  c.make(s.triad(9, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord DsM8_64;
  c.make(s.triad(9, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EfM8_64;
  c.make(s.triad(9, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord EM8_64;
  c.make(s.triad(9, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FM8_64;
  c.make(s.triad(9, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord FsM8_64;
  c.make(s.triad(9, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GfM8_64;
  c.make(s.triad(9, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GM8_64;
  c.make(s.triad(9, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord GsM8_64;
  c.make(s.triad(9, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AfM8_64;
  c.make(s.triad(9, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AM8_64;
  c.make(s.triad(9, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord AsM8_64;
  c.make(s.triad(9, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BfM8_64;
  c.make(s.triad(9, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord BM8_64;

  // Minor
  c.make(s.triad(0, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cm_64;
  c.make(s.triad(0, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csm_64;
  c.make(s.triad(0, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dm_64;
  c.make(s.triad(0, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsm_64;
  c.make(s.triad(0, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efm_64;
  c.make(s.triad(0, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Em_64;
  c.make(s.triad(0, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fm_64;
  c.make(s.triad(0, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsm_64;
  c.make(s.triad(0, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfm_64;
  c.make(s.triad(0, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gm_64;
  c.make(s.triad(0, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsm_64;
  c.make(s.triad(0, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afm_64;
  c.make(s.triad(0, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Am_64;
  c.make(s.triad(0, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asm_64;
  c.make(s.triad(0, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfm_64;
  c.make(s.triad(0, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bm_64;

  c.make(s.triad(1, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cm0_64;
  c.make(s.triad(1, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csm0_64;
  c.make(s.triad(1, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dm0_64;
  c.make(s.triad(1, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsm0_64;
  c.make(s.triad(1, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efm0_64;
  c.make(s.triad(1, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Em0_64;
  c.make(s.triad(1, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fm0_64;
  c.make(s.triad(1, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsm0_64;
  c.make(s.triad(1, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfm0_64;
  c.make(s.triad(1, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gm0_64;
  c.make(s.triad(1, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsm0_64;
  c.make(s.triad(1, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afm0_64;
  c.make(s.triad(1, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Am0_64;
  c.make(s.triad(1, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asm0_64;
  c.make(s.triad(1, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfm0_64;
  c.make(s.triad(1, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bm0_64;

  c.make(s.triad(2, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cm1_64;
  c.make(s.triad(2, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csm1_64;
  c.make(s.triad(2, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dm1_64;
  c.make(s.triad(2, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsm1_64;
  c.make(s.triad(2, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efm1_64;
  c.make(s.triad(2, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Em1_64;
  c.make(s.triad(2, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fm1_64;
  c.make(s.triad(2, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsm1_64;
  c.make(s.triad(2, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfm1_64;
  c.make(s.triad(2, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gm1_64;
  c.make(s.triad(2, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsm1_64;
  c.make(s.triad(2, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afm1_64;
  c.make(s.triad(2, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Am1_64;
  c.make(s.triad(2, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asm1_64;
  c.make(s.triad(2, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfm1_64;
  c.make(s.triad(2, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bm1_64;

  c.make(s.triad(3, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cm2_64;
  c.make(s.triad(3, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csm2_64;
  c.make(s.triad(3, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dm2_64;
  c.make(s.triad(3, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsm2_64;
  c.make(s.triad(3, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efm2_64;
  c.make(s.triad(3, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Em2_64;
  c.make(s.triad(3, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fm2_64;
  c.make(s.triad(3, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsm2_64;
  c.make(s.triad(3, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfm2_64;
  c.make(s.triad(3, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gm2_64;
  c.make(s.triad(3, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsm2_64;
  c.make(s.triad(3, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afm2_64;
  c.make(s.triad(3, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Am2_64;
  c.make(s.triad(3, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asm2_64;
  c.make(s.triad(3, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfm2_64;
  c.make(s.triad(3, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bm2_64;

  c.make(s.triad(4, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cm3_64;
  c.make(s.triad(4, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csm3_64;
  c.make(s.triad(4, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dm3_64;
  c.make(s.triad(4, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsm3_64;
  c.make(s.triad(4, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efm3_64;
  c.make(s.triad(4, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Em3_64;
  c.make(s.triad(4, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fm3_64;
  c.make(s.triad(4, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsm3_64;
  c.make(s.triad(4, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfm3_64;
  c.make(s.triad(4, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gm3_64;
  c.make(s.triad(4, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsm3_64;
  c.make(s.triad(4, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afm3_64;
  c.make(s.triad(4, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Am3_64;
  c.make(s.triad(4, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asm3_64;
  c.make(s.triad(4, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfm3_64;
  c.make(s.triad(4, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bm3_64;

  c.make(s.triad(5, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cm4_64;
  c.make(s.triad(5, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csm4_64;
  c.make(s.triad(5, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dm4_64;
  c.make(s.triad(5, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsm4_64;
  c.make(s.triad(5, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efm4_64;
  c.make(s.triad(5, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Em4_64;
  c.make(s.triad(5, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fm4_64;
  c.make(s.triad(5, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsm4_64;
  c.make(s.triad(5, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfm4_64;
  c.make(s.triad(5, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gm4_64;
  c.make(s.triad(5, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsm4_64;
  c.make(s.triad(5, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afm4_64;
  c.make(s.triad(5, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Am4_64;
  c.make(s.triad(5, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asm4_64;
  c.make(s.triad(5, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfm4_64;
  c.make(s.triad(5, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bm4_64;

  c.make(s.triad(6, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cm5_64;
  c.make(s.triad(6, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csm5_64;
  c.make(s.triad(6, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dm5_64;
  c.make(s.triad(6, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsm5_64;
  c.make(s.triad(6, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efm5_64;
  c.make(s.triad(6, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Em5_64;
  c.make(s.triad(6, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fm5_64;
  c.make(s.triad(6, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsm5_64;
  c.make(s.triad(6, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfm5_64;
  c.make(s.triad(6, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gm5_64;
  c.make(s.triad(6, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsm5_64;
  c.make(s.triad(6, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afm5_64;
  c.make(s.triad(6, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Am5_64;
  c.make(s.triad(6, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asm5_64;
  c.make(s.triad(6, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfm5_64;
  c.make(s.triad(6, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bm5_64;

  c.make(s.triad(7, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cm6_64;
  c.make(s.triad(7, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csm6_64;
  c.make(s.triad(7, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dm6_64;
  c.make(s.triad(7, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsm6_64;
  c.make(s.triad(7, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efm6_64;
  c.make(s.triad(7, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Em6_64;
  c.make(s.triad(7, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fm6_64;
  c.make(s.triad(7, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsm6_64;
  c.make(s.triad(7, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfm6_64;
  c.make(s.triad(7, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gm6_64;
  c.make(s.triad(7, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsm6_64;
  c.make(s.triad(7, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afm6_64;
  c.make(s.triad(7, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Am6_64;
  c.make(s.triad(7, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asm6_64;
  c.make(s.triad(7, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfm6_64;
  c.make(s.triad(7, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bm6_64;

  c.make(s.triad(8, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cm7_64;
  c.make(s.triad(8, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csm7_64;
  c.make(s.triad(8, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dm7_64;
  c.make(s.triad(8, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsm7_64;
  c.make(s.triad(8, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efm7_64;
  c.make(s.triad(8, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Em7_64;
  c.make(s.triad(8, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fm7_64;
  c.make(s.triad(8, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsm7_64;
  c.make(s.triad(8, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfm7_64;
  c.make(s.triad(8, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gm7_64;
  c.make(s.triad(8, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsm7_64;
  c.make(s.triad(8, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afm7_64;
  c.make(s.triad(8, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Am7_64;
  c.make(s.triad(8, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asm7_64;
  c.make(s.triad(8, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfm7_64;
  c.make(s.triad(8, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bm7_64;

  c.make(s.triad(9, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cm8_64;
  c.make(s.triad(9, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csm8_64;
  c.make(s.triad(9, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dm8_64;
  c.make(s.triad(9, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsm8_64;
  c.make(s.triad(9, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efm8_64;
  c.make(s.triad(9, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Em8_64;
  c.make(s.triad(9, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fm8_64;
  c.make(s.triad(9, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsm8_64;
  c.make(s.triad(9, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfm8_64;
  c.make(s.triad(9, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gm8_64;
  c.make(s.triad(9, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsm8_64;
  c.make(s.triad(9, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afm8_64;
  c.make(s.triad(9, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Am8_64;
  c.make(s.triad(9, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asm8_64;
  c.make(s.triad(9, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfm8_64;
  c.make(s.triad(9, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bm8_64;

  // Augmented
  c.make(s.triad(0, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Caug_64;
  c.make(s.triad(0, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csaug_64;
  c.make(s.triad(0, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Daug_64;
  c.make(s.triad(0, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsaug_64;
  c.make(s.triad(0, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efaug_64;
  c.make(s.triad(0, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Eaug_64;
  c.make(s.triad(0, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Faug_64;
  c.make(s.triad(0, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsaug_64;
  c.make(s.triad(0, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfaug_64;
  c.make(s.triad(0, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gaug_64;
  c.make(s.triad(0, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsaug_64;
  c.make(s.triad(0, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afaug_64;
  c.make(s.triad(0, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Aaug_64;
  c.make(s.triad(0, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asaug_64;
  c.make(s.triad(0, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfaug_64;
  c.make(s.triad(0, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Baug_64;

  c.make(s.triad(1, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Caug0_64;
  c.make(s.triad(1, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csaug0_64;
  c.make(s.triad(1, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Daug0_64;
  c.make(s.triad(1, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsaug0_64;
  c.make(s.triad(1, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efaug0_64;
  c.make(s.triad(1, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Eaug0_64;
  c.make(s.triad(1, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Faug0_64;
  c.make(s.triad(1, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsaug0_64;
  c.make(s.triad(1, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfaug0_64;
  c.make(s.triad(1, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gaug0_64;
  c.make(s.triad(1, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsaug0_64;
  c.make(s.triad(1, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afaug0_64;
  c.make(s.triad(1, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Aaug0_64;
  c.make(s.triad(1, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asaug0_64;
  c.make(s.triad(1, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfaug0_64;
  c.make(s.triad(1, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Baug0_64;

  c.make(s.triad(2, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Caug1_64;
  c.make(s.triad(2, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csaug1_64;
  c.make(s.triad(2, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Daug1_64;
  c.make(s.triad(2, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsaug1_64;
  c.make(s.triad(2, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efaug1_64;
  c.make(s.triad(2, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Eaug1_64;
  c.make(s.triad(2, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Faug1_64;
  c.make(s.triad(2, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsaug1_64;
  c.make(s.triad(2, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfaug1_64;
  c.make(s.triad(2, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gaug1_64;
  c.make(s.triad(2, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsaug1_64;
  c.make(s.triad(2, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afaug1_64;
  c.make(s.triad(2, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Aaug1_64;
  c.make(s.triad(2, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asaug1_64;
  c.make(s.triad(2, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfaug1_64;
  c.make(s.triad(2, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Baug1_64;

  c.make(s.triad(3, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Caug2_64;
  c.make(s.triad(3, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csaug2_64;
  c.make(s.triad(3, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Daug2_64;
  c.make(s.triad(3, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsaug2_64;
  c.make(s.triad(3, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efaug2_64;
  c.make(s.triad(3, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Eaug2_64;
  c.make(s.triad(3, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Faug2_64;
  c.make(s.triad(3, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsaug2_64;
  c.make(s.triad(3, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfaug2_64;
  c.make(s.triad(3, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gaug2_64;
  c.make(s.triad(3, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsaug2_64;
  c.make(s.triad(3, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afaug2_64;
  c.make(s.triad(3, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Aaug2_64;
  c.make(s.triad(3, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asaug2_64;
  c.make(s.triad(3, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfaug2_64;
  c.make(s.triad(3, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Baug2_64;

  c.make(s.triad(4, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Caug3_64;
  c.make(s.triad(4, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csaug3_64;
  c.make(s.triad(4, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Daug3_64;
  c.make(s.triad(4, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsaug3_64;
  c.make(s.triad(4, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efaug3_64;
  c.make(s.triad(4, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Eaug3_64;
  c.make(s.triad(4, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Faug3_64;
  c.make(s.triad(4, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsaug3_64;
  c.make(s.triad(4, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfaug3_64;
  c.make(s.triad(4, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gaug3_64;
  c.make(s.triad(4, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsaug3_64;
  c.make(s.triad(4, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afaug3_64;
  c.make(s.triad(4, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Aaug3_64;
  c.make(s.triad(4, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asaug3_64;
  c.make(s.triad(4, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfaug3_64;
  c.make(s.triad(4, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Baug3_64;

  c.make(s.triad(5, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Caug4_64;
  c.make(s.triad(5, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csaug4_64;
  c.make(s.triad(5, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Daug4_64;
  c.make(s.triad(5, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsaug4_64;
  c.make(s.triad(5, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efaug4_64;
  c.make(s.triad(5, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Eaug4_64;
  c.make(s.triad(5, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Faug4_64;
  c.make(s.triad(5, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsaug4_64;
  c.make(s.triad(5, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfaug4_64;
  c.make(s.triad(5, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gaug4_64;
  c.make(s.triad(5, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsaug4_64;
  c.make(s.triad(5, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afaug4_64;
  c.make(s.triad(5, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Aaug4_64;
  c.make(s.triad(5, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asaug4_64;
  c.make(s.triad(5, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfaug4_64;
  c.make(s.triad(5, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Baug4_64;

  c.make(s.triad(6, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Caug5_64;
  c.make(s.triad(6, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csaug5_64;
  c.make(s.triad(6, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Daug5_64;
  c.make(s.triad(6, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsaug5_64;
  c.make(s.triad(6, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efaug5_64;
  c.make(s.triad(6, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Eaug5_64;
  c.make(s.triad(6, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Faug5_64;
  c.make(s.triad(6, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsaug5_64;
  c.make(s.triad(6, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfaug5_64;
  c.make(s.triad(6, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gaug5_64;
  c.make(s.triad(6, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsaug5_64;
  c.make(s.triad(6, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afaug5_64;
  c.make(s.triad(6, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Aaug5_64;
  c.make(s.triad(6, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asaug5_64;
  c.make(s.triad(6, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfaug5_64;
  c.make(s.triad(6, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Baug5_64;

  c.make(s.triad(7, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Caug6_64;
  c.make(s.triad(7, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csaug6_64;
  c.make(s.triad(7, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Daug6_64;
  c.make(s.triad(7, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsaug6_64;
  c.make(s.triad(7, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efaug6_64;
  c.make(s.triad(7, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Eaug6_64;
  c.make(s.triad(7, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Faug6_64;
  c.make(s.triad(7, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsaug6_64;
  c.make(s.triad(7, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfaug6_64;
  c.make(s.triad(7, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gaug6_64;
  c.make(s.triad(7, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsaug6_64;
  c.make(s.triad(7, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afaug6_64;
  c.make(s.triad(7, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Aaug6_64;
  c.make(s.triad(7, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asaug6_64;
  c.make(s.triad(7, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfaug6_64;
  c.make(s.triad(7, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Baug6_64;

  c.make(s.triad(8, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Caug7_64;
  c.make(s.triad(8, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csaug7_64;
  c.make(s.triad(8, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Daug7_64;
  c.make(s.triad(8, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsaug7_64;
  c.make(s.triad(8, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efaug7_64;
  c.make(s.triad(8, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Eaug7_64;
  c.make(s.triad(8, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Faug7_64;
  c.make(s.triad(8, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsaug7_64;
  c.make(s.triad(8, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfaug7_64;
  c.make(s.triad(8, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gaug7_64;
  c.make(s.triad(8, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsaug7_64;
  c.make(s.triad(8, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afaug7_64;
  c.make(s.triad(8, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Aaug7_64;
  c.make(s.triad(8, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asaug7_64;
  c.make(s.triad(8, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfaug7_64;
  c.make(s.triad(8, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Baug7_64;

  c.make(s.triad(9, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Caug8_64;
  c.make(s.triad(9, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csaug8_64;
  c.make(s.triad(9, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Daug8_64;
  c.make(s.triad(9, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsaug8_64;
  c.make(s.triad(9, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efaug8_64;
  c.make(s.triad(9, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Eaug8_64;
  c.make(s.triad(9, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Faug8_64;
  c.make(s.triad(9, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsaug8_64;
  c.make(s.triad(9, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfaug8_64;
  c.make(s.triad(9, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gaug8_64;
  c.make(s.triad(9, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsaug8_64;
  c.make(s.triad(9, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afaug8_64;
  c.make(s.triad(9, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Aaug8_64;
  c.make(s.triad(9, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asaug8_64;
  c.make(s.triad(9, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfaug8_64;
  c.make(s.triad(9, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Baug8_64;

  // Diminished  
  c.make(s.triad(0, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cdim_64;
  c.make(s.triad(0, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csdim_64;
  c.make(s.triad(0, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Ddim_64;
  c.make(s.triad(0, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsdim_64;
  c.make(s.triad(0, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efdim_64;
  c.make(s.triad(0, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Edim_64;
  c.make(s.triad(0, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fdim_64;
  c.make(s.triad(0, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsdim_64;
  c.make(s.triad(0, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfdim_64;
  c.make(s.triad(0, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gdim_64;
  c.make(s.triad(0, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsdim_64;
  c.make(s.triad(0, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afdim_64;
  c.make(s.triad(0, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Adim_64;
  c.make(s.triad(0, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asdim_64;
  c.make(s.triad(0, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfdim_64;
  c.make(s.triad(0, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bdim_64;

  c.make(s.triad(1, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cdim0_64;
  c.make(s.triad(1, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csdim0_64;
  c.make(s.triad(1, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Ddim0_64;
  c.make(s.triad(1, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsdim0_64;
  c.make(s.triad(1, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efdim0_64;
  c.make(s.triad(1, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Edim0_64;
  c.make(s.triad(1, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fdim0_64;
  c.make(s.triad(1, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsdim0_64;
  c.make(s.triad(1, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfdim0_64;
  c.make(s.triad(1, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gdim0_64;
  c.make(s.triad(1, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsdim0_64;
  c.make(s.triad(1, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afdim0_64;
  c.make(s.triad(1, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Adim0_64;
  c.make(s.triad(1, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asdim0_64;
  c.make(s.triad(1, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfdim0_64;
  c.make(s.triad(1, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bdim0_64;

  c.make(s.triad(2, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cdim1_64;
  c.make(s.triad(2, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csdim1_64;
  c.make(s.triad(2, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Ddim1_64;
  c.make(s.triad(2, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsdim1_64;
  c.make(s.triad(2, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efdim1_64;
  c.make(s.triad(2, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Edim1_64;
  c.make(s.triad(2, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fdim1_64;
  c.make(s.triad(2, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsdim1_64;
  c.make(s.triad(2, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfdim1_64;
  c.make(s.triad(2, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gdim1_64;
  c.make(s.triad(2, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsdim1_64;
  c.make(s.triad(2, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afdim1_64;
  c.make(s.triad(2, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Adim1_64;
  c.make(s.triad(2, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asdim1_64;
  c.make(s.triad(2, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfdim1_64;
  c.make(s.triad(2, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bdim1_64;

  c.make(s.triad(3, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cdim2_64;
  c.make(s.triad(3, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csdim2_64;
  c.make(s.triad(3, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Ddim2_64;
  c.make(s.triad(3, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsdim2_64;
  c.make(s.triad(3, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efdim2_64;
  c.make(s.triad(3, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Edim2_64;
  c.make(s.triad(3, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fdim2_64;
  c.make(s.triad(3, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsdim2_64;
  c.make(s.triad(3, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfdim2_64;
  c.make(s.triad(3, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gdim2_64;
  c.make(s.triad(3, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsdim2_64;
  c.make(s.triad(3, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afdim2_64;
  c.make(s.triad(3, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Adim2_64;
  c.make(s.triad(3, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asdim2_64;
  c.make(s.triad(3, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfdim2_64;
  c.make(s.triad(3, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bdim2_64;

  c.make(s.triad(4, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cdim3_64;
  c.make(s.triad(4, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csdim3_64;
  c.make(s.triad(4, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Ddim3_64;
  c.make(s.triad(4, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsdim3_64;
  c.make(s.triad(4, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efdim3_64;
  c.make(s.triad(4, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Edim3_64;
  c.make(s.triad(4, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fdim3_64;
  c.make(s.triad(4, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsdim3_64;
  c.make(s.triad(4, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfdim3_64;
  c.make(s.triad(4, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gdim3_64;
  c.make(s.triad(4, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsdim3_64;
  c.make(s.triad(4, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afdim3_64;
  c.make(s.triad(4, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Adim3_64;
  c.make(s.triad(4, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asdim3_64;
  c.make(s.triad(4, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfdim3_64;
  c.make(s.triad(4, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bdim3_64;

  c.make(s.triad(5, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cdim4_64;
  c.make(s.triad(5, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csdim4_64;
  c.make(s.triad(5, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Ddim4_64;
  c.make(s.triad(5, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsdim4_64;
  c.make(s.triad(5, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efdim4_64;
  c.make(s.triad(5, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Edim4_64;
  c.make(s.triad(5, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fdim4_64;
  c.make(s.triad(5, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsdim4_64;
  c.make(s.triad(5, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfdim4_64;
  c.make(s.triad(5, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gdim4_64;
  c.make(s.triad(5, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsdim4_64;
  c.make(s.triad(5, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afdim4_64;
  c.make(s.triad(5, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Adim4_64;
  c.make(s.triad(5, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asdim4_64;
  c.make(s.triad(5, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfdim4_64;
  c.make(s.triad(5, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bdim4_64;

  c.make(s.triad(6, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cdim5_64;
  c.make(s.triad(6, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csdim5_64;
  c.make(s.triad(6, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Ddim5_64;
  c.make(s.triad(6, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsdim5_64;
  c.make(s.triad(6, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efdim5_64;
  c.make(s.triad(6, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Edim5_64;
  c.make(s.triad(6, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fdim5_64;
  c.make(s.triad(6, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsdim5_64;
  c.make(s.triad(6, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfdim5_64;
  c.make(s.triad(6, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gdim5_64;
  c.make(s.triad(6, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsdim5_64;
  c.make(s.triad(6, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afdim5_64;
  c.make(s.triad(6, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Adim5_64;
  c.make(s.triad(6, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asdim5_64;
  c.make(s.triad(6, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfdim5_64;
  c.make(s.triad(6, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bdim5_64;

  c.make(s.triad(7, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cdim6_64;
  c.make(s.triad(7, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csdim6_64;
  c.make(s.triad(7, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Ddim6_64;
  c.make(s.triad(7, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsdim6_64;
  c.make(s.triad(7, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efdim6_64;
  c.make(s.triad(7, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Edim6_64;
  c.make(s.triad(7, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fdim6_64;
  c.make(s.triad(7, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsdim6_64;
  c.make(s.triad(7, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfdim6_64;
  c.make(s.triad(7, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gdim6_64;
  c.make(s.triad(7, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsdim6_64;
  c.make(s.triad(7, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afdim6_64;
  c.make(s.triad(7, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Adim6_64;
  c.make(s.triad(7, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asdim6_64;
  c.make(s.triad(7, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfdim6_64;
  c.make(s.triad(7, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bdim6_64;

  c.make(s.triad(8, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cdim7_64;
  c.make(s.triad(8, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csdim7_64;
  c.make(s.triad(8, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Ddim7_64;
  c.make(s.triad(8, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsdim7_64;
  c.make(s.triad(8, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efdim7_64;
  c.make(s.triad(8, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Edim7_64;
  c.make(s.triad(8, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fdim7_64;
  c.make(s.triad(8, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsdim7_64;
  c.make(s.triad(8, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfdim7_64;
  c.make(s.triad(8, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gdim7_64;
  c.make(s.triad(8, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsdim7_64;
  c.make(s.triad(8, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afdim7_64;
  c.make(s.triad(8, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Adim7_64;
  c.make(s.triad(8, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asdim7_64;
  c.make(s.triad(8, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfdim7_64;
  c.make(s.triad(8, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bdim7_64;

  c.make(s.triad(9, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Cdim8_64;
  c.make(s.triad(9, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Csdim8_64;
  c.make(s.triad(9, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Ddim8_64;
  c.make(s.triad(9, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Dsdim8_64;
  c.make(s.triad(9, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Efdim8_64;
  c.make(s.triad(9, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Edim8_64;
  c.make(s.triad(9, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord _Fdim8_64;
  c.make(s.triad(9, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Fsdim8_64;
  c.make(s.triad(9, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gfdim8_64;
  c.make(s.triad(9, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gdim8_64;
  c.make(s.triad(9, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Gsdim8_64;
  c.make(s.triad(9, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Afdim8_64;
  c.make(s.triad(9, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Adim8_64;
  c.make(s.triad(9, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Asdim8_64;
  c.make(s.triad(9, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bfdim8_64;
  c.make(s.triad(9, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Chord Bdim8_64;
}
