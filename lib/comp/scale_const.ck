// Machine.add("lib/comp/note_const.ck")
// Machine.add("lib/comp/chord.ck")
// Machine.add("lib/comp/scale.ck")
// Machine.add("lib/comp/clock.ck")

public class ScaleConst {
  1.0 => float DEFAULT_GAIN;

  // Scale Intervals - Intervals also called Degrees
  // minor scales
  [0, 2, 3, 5, 7, 8, 10] @=> static int MINOR[]; // minor mode
  [0, 2, 3, 5, 7, 8, 11] @=> static int HARMONIC_MINOR[]; // harmonic minor
  [0, 2, 3, 5, 7, 9, 11] @=> static int ASC_MELODIC_MINOR[]; // ascending melodic minor
  [0, 1, 3, 5, 7, 8, 10] @=> static int NEAPOLITAN[]; // make 2nd degree neapolitain
  // other church modes
  [0, 2, 4, 5, 7, 9, 11] @=> static int MAJOR[]; // major scale
  [0, 2, 4, 5, 7, 8, 10] @=> static int MIXOLYDIAN[]; // church mixolydian
  [0, 2, 3, 5, 7, 9, 10] @=> static int DORIAN[]; // church dorian
  [0, 2, 4, 6, 7, 9, 11] @=> static int LYDIAN[]; // church lydian
  // other
  [0, 2, 4, 7, 9] @=> static int MAJOR_PENTATONIC[]; // major pentatonic
  [0, 2, 4, 6, 8, 10] @=> static int WHOLE_TONE[]; // the whole tone scale
  [0, 2, 3, 5, 6, 8, 9, 11] @=> static int DIMINISHED[]; // diminished scale 
 
  // Chords
  // common triads in Western music, as degrees from the chord root
  // Note these are 0-based, but in traditional music theory scales etc. are 1-based
  [0, 4, 7] @=> static int MAJOR_TRIAD[];  // So, 0th, 2nd and 4th offset are degrees 1, 4, 7 e.g. C-E-G for C MAJOR
  [0, 4, 7] @=> static int M[];  // common alias
  [0, 3, 7] @=> static int MINOR_TRIAD[];  
  [0, 3, 7] @=> static int m[];  
  [0, 3, 6] @=> static int DIMINISHED_TRIAD[];
  [0, 3, 6] @=> static int dim[];
  [0, 4, 8] @=> static int AUGMENTED_TRIAD[];
  [0, 4, 8] @=> static int aug[];


  // Init objects used to populate Rest and Chord Constants
  NoteConst n;
  Scale s;
  Chord c;
  Clock k;
  Event dummyStartEvent;
  Event dummyStepEvent; 

  fun void init(int bpm) {
    k.init(bpm, dummyStartEvent, dummyStepEvent);

    initConsts();
  }

  // Rest Constants
  0.0 => float NO_GAIN;

  Chord REST_64;
  Chord REST_32;
  Chord REST_16;
  Chord REST_8;
  Chord REST_4;
  Chord REST_2;
  Chord REST_1;

  //
  // Chord Constants
  // grouped by duration, chord type, octave

  //
  // WHL
  //

  // Major
  // 0-based offsets
  Chord CM_1;
  Chord CsM_1;
  Chord DM_1;
  Chord DsM_1;
  Chord EfM_1;
  Chord EM_1;
  Chord FM_1;
  Chord FsM_1;
  Chord GfM_1;
  Chord GM_1;
  Chord GsM_1;
  Chord AfM_1;
  Chord AM_1;
  Chord AsM_1;
  Chord BfM_1;
  Chord BM_1;

  // constants predefined per octave
  Chord CM0_1;
  Chord CsM0_1;
  Chord DM0_1;
  Chord DsM0_1;
  Chord EfM0_1;
  Chord EM0_1;
  Chord FM0_1;
  Chord FsM0_1;
  Chord GfM0_1;
  Chord GM0_1;
  Chord GsM0_1;
  Chord AfM0_1;
  Chord AM0_1;
  Chord AsM0_1;
  Chord BfM0_1;
  Chord BM0_1;

  Chord CM1_1;
  Chord CsM1_1;
  Chord DM1_1;
  Chord DsM1_1;
  Chord EfM1_1;
  Chord EM1_1;
  Chord FM1_1;
  Chord FsM1_1;
  Chord GfM1_1;
  Chord GM1_1;
  Chord GsM1_1;
  Chord AfM1_1;
  Chord AM1_1;
  Chord AsM1_1;
  Chord BfM1_1;
  Chord BM1_1;

  Chord CM2_1;
  Chord CsM2_1;
  Chord DM2_1;
  Chord DsM2_1;
  Chord EfM2_1;
  Chord EM2_1;
  Chord FM2_1;
  Chord FsM2_1;
  Chord GfM2_1;
  Chord GM2_1;
  Chord GsM2_1;
  Chord AfM2_1;
  Chord AM2_1;
  Chord AsM2_1;
  Chord BfM2_1;
  Chord BM2_1;

  Chord CM3_1;
  Chord CsM3_1;
  Chord DM3_1;
  Chord DsM3_1;
  Chord EfM3_1;
  Chord EM3_1;
  Chord FM3_1;
  Chord FsM3_1;
  Chord GfM3_1;
  Chord GM3_1;
  Chord GsM3_1;
  Chord AfM3_1;
  Chord AM3_1;
  Chord AsM3_1;
  Chord BfM3_1;
  Chord BM3_1;

  Chord CM4_1;
  Chord CsM4_1;
  Chord DM4_1;
  Chord DsM4_1;
  Chord EfM4_1;
  Chord EM4_1;
  Chord FM4_1;
  Chord FsM4_1;
  Chord GfM4_1;
  Chord GM4_1;
  Chord GsM4_1;
  Chord AfM4_1;
  Chord AM4_1;
  Chord AsM4_1;
  Chord BfM4_1;
  Chord BM4_1;

  Chord CM5_1;
  Chord CsM5_1;
  Chord DM5_1;
  Chord DsM5_1;
  Chord EfM5_1;
  Chord EM5_1;
  Chord FM5_1;
  Chord FsM5_1;
  Chord GfM5_1;
  Chord GM5_1;
  Chord GsM5_1;
  Chord AfM5_1;
  Chord AM5_1;
  Chord AsM5_1;
  Chord BfM5_1;
  Chord BM5_1;

  Chord CM6_1;
  Chord CsM6_1;
  Chord DM6_1;
  Chord DsM6_1;
  Chord EfM6_1;
  Chord EM6_1;
  Chord FM6_1;
  Chord FsM6_1;
  Chord GfM6_1;
  Chord GM6_1;
  Chord GsM6_1;
  Chord AfM6_1;
  Chord AM6_1;
  Chord AsM6_1;
  Chord BfM6_1;
  Chord BM6_1;

  Chord CM7_1;
  Chord CsM7_1;
  Chord DM7_1;
  Chord DsM7_1;
  Chord EfM7_1;
  Chord EM7_1;
  Chord FM7_1;
  Chord FsM7_1;
  Chord GfM7_1;
  Chord GM7_1;
  Chord GsM7_1;
  Chord AfM7_1;
  Chord AM7_1;
  Chord AsM7_1;
  Chord BfM7_1;
  Chord BM7_1;

  Chord CM8_1;
  Chord CsM8_1;
  Chord DM8_1;
  Chord DsM8_1;
  Chord EfM8_1;
  Chord EM8_1;
  Chord FM8_1;
  Chord FsM8_1;
  Chord GfM8_1;
  Chord GM8_1;
  Chord GsM8_1;
  Chord AfM8_1;
  Chord AM8_1;
  Chord AsM8_1;
  Chord BfM8_1;
  Chord BM8_1;

  // Minor
  Chord Cm_1;
  Chord Csm_1;
  Chord Dm_1;
  Chord Dsm_1;
  Chord Efm_1;
  Chord Em_1;
  Chord _Fm_1;
  Chord Fsm_1;
  Chord Gfm_1;
  Chord Gm_1;
  Chord Gsm_1;
  Chord Afm_1;
  Chord Am_1;
  Chord Asm_1;
  Chord Bfm_1;
  Chord Bm_1;

  Chord Cm0_1;
  Chord Csm0_1;
  Chord Dm0_1;
  Chord Dsm0_1;
  Chord Efm0_1;
  Chord Em0_1;
  Chord _Fm0_1;
  Chord Fsm0_1;
  Chord Gfm0_1;
  Chord Gm0_1;
  Chord Gsm0_1;
  Chord Afm0_1;
  Chord Am0_1;
  Chord Asm0_1;
  Chord Bfm0_1;
  Chord Bm0_1;

  Chord Cm1_1;
  Chord Csm1_1;
  Chord Dm1_1;
  Chord Dsm1_1;
  Chord Efm1_1;
  Chord Em1_1;
  Chord _Fm1_1;
  Chord Fsm1_1;
  Chord Gfm1_1;
  Chord Gm1_1;
  Chord Gsm1_1;
  Chord Afm1_1;
  Chord Am1_1;
  Chord Asm1_1;
  Chord Bfm1_1;
  Chord Bm1_1;

  Chord Cm2_1;
  Chord Csm2_1;
  Chord Dm2_1;
  Chord Dsm2_1;
  Chord Efm2_1;
  Chord Em2_1;
  Chord _Fm2_1;
  Chord Fsm2_1;
  Chord Gfm2_1;
  Chord Gm2_1;
  Chord Gsm2_1;
  Chord Afm2_1;
  Chord Am2_1;
  Chord Asm2_1;
  Chord Bfm2_1;
  Chord Bm2_1;

  Chord Cm3_1;
  Chord Csm3_1;
  Chord Dm3_1;
  Chord Dsm3_1;
  Chord Efm3_1;
  Chord Em3_1;
  Chord _Fm3_1;
  Chord Fsm3_1;
  Chord Gfm3_1;
  Chord Gm3_1;
  Chord Gsm3_1;
  Chord Afm3_1;
  Chord Am3_1;
  Chord Asm3_1;
  Chord Bfm3_1;
  Chord Bm3_1;

  Chord Cm4_1;
  Chord Csm4_1;
  Chord Dm4_1;
  Chord Dsm4_1;
  Chord Efm4_1;
  Chord Em4_1;
  Chord _Fm4_1;
  Chord Fsm4_1;
  Chord Gfm4_1;
  Chord Gm4_1;
  Chord Gsm4_1;
  Chord Afm4_1;
  Chord Am4_1;
  Chord Asm4_1;
  Chord Bfm4_1;
  Chord Bm4_1;

  Chord Cm5_1;
  Chord Csm5_1;
  Chord Dm5_1;
  Chord Dsm5_1;
  Chord Efm5_1;
  Chord Em5_1;
  Chord _Fm5_1;
  Chord Fsm5_1;
  Chord Gfm5_1;
  Chord Gm5_1;
  Chord Gsm5_1;
  Chord Afm5_1;
  Chord Am5_1;
  Chord Asm5_1;
  Chord Bfm5_1;
  Chord Bm5_1;

  Chord Cm6_1;
  Chord Csm6_1;
  Chord Dm6_1;
  Chord Dsm6_1;
  Chord Efm6_1;
  Chord Em6_1;
  Chord _Fm6_1;
  Chord Fsm6_1;
  Chord Gfm6_1;
  Chord Gm6_1;
  Chord Gsm6_1;
  Chord Afm6_1;
  Chord Am6_1;
  Chord Asm6_1;
  Chord Bfm6_1;
  Chord Bm6_1;

  Chord Cm7_1;
  Chord Csm7_1;
  Chord Dm7_1;
  Chord Dsm7_1;
  Chord Efm7_1;
  Chord Em7_1;
  Chord _Fm7_1;
  Chord Fsm7_1;
  Chord Gfm7_1;
  Chord Gm7_1;
  Chord Gsm7_1;
  Chord Afm7_1;
  Chord Am7_1;
  Chord Asm7_1;
  Chord Bfm7_1;
  Chord Bm7_1;

  Chord Cm8_1;
  Chord Csm8_1;
  Chord Dm8_1;
  Chord Dsm8_1;
  Chord Efm8_1;
  Chord Em8_1;
  Chord _Fm8_1;
  Chord Fsm8_1;
  Chord Gfm8_1;
  Chord Gm8_1;
  Chord Gsm8_1;
  Chord Afm8_1;
  Chord Am8_1;
  Chord Asm8_1;
  Chord Bfm8_1;
  Chord Bm8_1;

  // Augmented
  Chord Caug_1;
  Chord Csaug_1;
  Chord Daug_1;
  Chord Dsaug_1;
  Chord Efaug_1;
  Chord Eaug_1;
  Chord _Faug_1;
  Chord Fsaug_1;
  Chord Gfaug_1;
  Chord Gaug_1;
  Chord Gsaug_1;
  Chord Afaug_1;
  Chord Aaug_1;
  Chord Asaug_1;
  Chord Bfaug_1;
  Chord Baug_1;

  Chord Caug0_1;
  Chord Csaug0_1;
  Chord Daug0_1;
  Chord Dsaug0_1;
  Chord Efaug0_1;
  Chord Eaug0_1;
  Chord _Faug0_1;
  Chord Fsaug0_1;
  Chord Gfaug0_1;
  Chord Gaug0_1;
  Chord Gsaug0_1;
  Chord Afaug0_1;
  Chord Aaug0_1;
  Chord Asaug0_1;
  Chord Bfaug0_1;
  Chord Baug0_1;

  Chord Caug1_1;
  Chord Csaug1_1;
  Chord Daug1_1;
  Chord Dsaug1_1;
  Chord Efaug1_1;
  Chord Eaug1_1;
  Chord _Faug1_1;
  Chord Fsaug1_1;
  Chord Gfaug1_1;
  Chord Gaug1_1;
  Chord Gsaug1_1;
  Chord Afaug1_1;
  Chord Aaug1_1;
  Chord Asaug1_1;
  Chord Bfaug1_1;
  Chord Baug1_1;

  Chord Caug2_1;
  Chord Csaug2_1;
  Chord Daug2_1;
  Chord Dsaug2_1;
  Chord Efaug2_1;
  Chord Eaug2_1;
  Chord _Faug2_1;
  Chord Fsaug2_1;
  Chord Gfaug2_1;
  Chord Gaug2_1;
  Chord Gsaug2_1;
  Chord Afaug2_1;
  Chord Aaug2_1;
  Chord Asaug2_1;
  Chord Bfaug2_1;
  Chord Baug2_1;

  Chord Caug3_1;
  Chord Csaug3_1;
  Chord Daug3_1;
  Chord Dsaug3_1;
  Chord Efaug3_1;
  Chord Eaug3_1;
  Chord _Faug3_1;
  Chord Fsaug3_1;
  Chord Gfaug3_1;
  Chord Gaug3_1;
  Chord Gsaug3_1;
  Chord Afaug3_1;
  Chord Aaug3_1;
  Chord Asaug3_1;
  Chord Bfaug3_1;
  Chord Baug3_1;

  Chord Caug4_1;
  Chord Csaug4_1;
  Chord Daug4_1;
  Chord Dsaug4_1;
  Chord Efaug4_1;
  Chord Eaug4_1;
  Chord _Faug4_1;
  Chord Fsaug4_1;
  Chord Gfaug4_1;
  Chord Gaug4_1;
  Chord Gsaug4_1;
  Chord Afaug4_1;
  Chord Aaug4_1;
  Chord Asaug4_1;
  Chord Bfaug4_1;
  Chord Baug4_1;

  Chord Caug5_1;
  Chord Csaug5_1;
  Chord Daug5_1;
  Chord Dsaug5_1;
  Chord Efaug5_1;
  Chord Eaug5_1;
  Chord _Faug5_1;
  Chord Fsaug5_1;
  Chord Gfaug5_1;
  Chord Gaug5_1;
  Chord Gsaug5_1;
  Chord Afaug5_1;
  Chord Aaug5_1;
  Chord Asaug5_1;
  Chord Bfaug5_1;
  Chord Baug5_1;

  Chord Caug6_1;
  Chord Csaug6_1;
  Chord Daug6_1;
  Chord Dsaug6_1;
  Chord Efaug6_1;
  Chord Eaug6_1;
  Chord _Faug6_1;
  Chord Fsaug6_1;
  Chord Gfaug6_1;
  Chord Gaug6_1;
  Chord Gsaug6_1;
  Chord Afaug6_1;
  Chord Aaug6_1;
  Chord Asaug6_1;
  Chord Bfaug6_1;
  Chord Baug6_1;

  Chord Caug7_1;
  Chord Csaug7_1;
  Chord Daug7_1;
  Chord Dsaug7_1;
  Chord Efaug7_1;
  Chord Eaug7_1;
  Chord _Faug7_1;
  Chord Fsaug7_1;
  Chord Gfaug7_1;
  Chord Gaug7_1;
  Chord Gsaug7_1;
  Chord Afaug7_1;
  Chord Aaug7_1;
  Chord Asaug7_1;
  Chord Bfaug7_1;
  Chord Baug7_1;

  Chord Caug8_1;
  Chord Csaug8_1;
  Chord Daug8_1;
  Chord Dsaug8_1;
  Chord Efaug8_1;
  Chord Eaug8_1;
  Chord _Faug8_1;
  Chord Fsaug8_1;
  Chord Gfaug8_1;
  Chord Gaug8_1;
  Chord Gsaug8_1;
  Chord Afaug8_1;
  Chord Aaug8_1;
  Chord Asaug8_1;
  Chord Bfaug8_1;
  Chord Baug8_1;

  // Diminished
  Chord Cdim_1;
  Chord Csdim_1;
  Chord Ddim_1;
  Chord Dsdim_1;
  Chord Efdim_1;
  Chord Edim_1;
  Chord _Fdim_1;
  Chord Fsdim_1;
  Chord Gfdim_1;
  Chord Gdim_1;
  Chord Gsdim_1;
  Chord Afdim_1;
  Chord Adim_1;
  Chord Asdim_1;
  Chord Bfdim_1;
  Chord Bdim_1;

  Chord Cdim0_1;
  Chord Csdim0_1;
  Chord Ddim0_1;
  Chord Dsdim0_1;
  Chord Efdim0_1;
  Chord Edim0_1;
  Chord _Fdim0_1;
  Chord Fsdim0_1;
  Chord Gfdim0_1;
  Chord Gdim0_1;
  Chord Gsdim0_1;
  Chord Afdim0_1;
  Chord Adim0_1;
  Chord Asdim0_1;
  Chord Bfdim0_1;
  Chord Bdim0_1;

  Chord Cdim1_1;
  Chord Csdim1_1;
  Chord Ddim1_1;
  Chord Dsdim1_1;
  Chord Efdim1_1;
  Chord Edim1_1;
  Chord _Fdim1_1;
  Chord Fsdim1_1;
  Chord Gfdim1_1;
  Chord Gdim1_1;
  Chord Gsdim1_1;
  Chord Afdim1_1;
  Chord Adim1_1;
  Chord Asdim1_1;
  Chord Bfdim1_1;
  Chord Bdim1_1;

  Chord Cdim2_1;
  Chord Csdim2_1;
  Chord Ddim2_1;
  Chord Dsdim2_1;
  Chord Efdim2_1;
  Chord Edim2_1;
  Chord _Fdim2_1;
  Chord Fsdim2_1;
  Chord Gfdim2_1;
  Chord Gdim2_1;
  Chord Gsdim2_1;
  Chord Afdim2_1;
  Chord Adim2_1;
  Chord Asdim2_1;
  Chord Bfdim2_1;
  Chord Bdim2_1;

  Chord Cdim3_1;
  Chord Csdim3_1;
  Chord Ddim3_1;
  Chord Dsdim3_1;
  Chord Efdim3_1;
  Chord Edim3_1;
  Chord _Fdim3_1;
  Chord Fsdim3_1;
  Chord Gfdim3_1;
  Chord Gdim3_1;
  Chord Gsdim3_1;
  Chord Afdim3_1;
  Chord Adim3_1;
  Chord Asdim3_1;
  Chord Bfdim3_1;
  Chord Bdim3_1;

  Chord Cdim4_1;
  Chord Csdim4_1;
  Chord Ddim4_1;
  Chord Dsdim4_1;
  Chord Efdim4_1;
  Chord Edim4_1;
  Chord _Fdim4_1;
  Chord Fsdim4_1;
  Chord Gfdim4_1;
  Chord Gdim4_1;
  Chord Gsdim4_1;
  Chord Afdim4_1;
  Chord Adim4_1;
  Chord Asdim4_1;
  Chord Bfdim4_1;
  Chord Bdim4_1;

  Chord Cdim5_1;
  Chord Csdim5_1;
  Chord Ddim5_1;
  Chord Dsdim5_1;
  Chord Efdim5_1;
  Chord Edim5_1;
  Chord _Fdim5_1;
  Chord Fsdim5_1;
  Chord Gfdim5_1;
  Chord Gdim5_1;
  Chord Gsdim5_1;
  Chord Afdim5_1;
  Chord Adim5_1;
  Chord Asdim5_1;
  Chord Bfdim5_1;
  Chord Bdim5_1;

  Chord Cdim6_1;
  Chord Csdim6_1;
  Chord Ddim6_1;
  Chord Dsdim6_1;
  Chord Efdim6_1;
  Chord Edim6_1;
  Chord _Fdim6_1;
  Chord Fsdim6_1;
  Chord Gfdim6_1;
  Chord Gdim6_1;
  Chord Gsdim6_1;
  Chord Afdim6_1;
  Chord Adim6_1;
  Chord Asdim6_1;
  Chord Bfdim6_1;
  Chord Bdim6_1;

  Chord Cdim7_1;
  Chord Csdim7_1;
  Chord Ddim7_1;
  Chord Dsdim7_1;
  Chord Efdim7_1;
  Chord Edim7_1;
  Chord _Fdim7_1;
  Chord Fsdim7_1;
  Chord Gfdim7_1;
  Chord Gdim7_1;
  Chord Gsdim7_1;
  Chord Afdim7_1;
  Chord Adim7_1;
  Chord Asdim7_1;
  Chord Bfdim7_1;
  Chord Bdim7_1;

  Chord Cdim8_1;
  Chord Csdim8_1;
  Chord Ddim8_1;
  Chord Dsdim8_1;
  Chord Efdim8_1;
  Chord Edim8_1;
  Chord _Fdim8_1;
  Chord Fsdim8_1;
  Chord Gfdim8_1;
  Chord Gdim8_1;
  Chord Gsdim8_1;
  Chord Afdim8_1;
  Chord Adim8_1;
  Chord Asdim8_1;
  Chord Bfdim8_1;
  Chord Bdim8_1;


  //
  // HLF
  //

  // Major
  // 0-based offsets
  Chord CM_2;
  Chord CsM_2;
  Chord DM_2;
  Chord DsM_2;
  Chord EfM_2;
  Chord EM_2;
  Chord FM_2;
  Chord FsM_2;
  Chord GfM_2;
  Chord GM_2;
  Chord GsM_2;
  Chord AfM_2;
  Chord AM_2;
  Chord AsM_2;
  Chord BfM_2;
  Chord BM_2;

  // constants predefined per octave
  Chord CM0_2;
  Chord CsM0_2;
  Chord DM0_2;
  Chord DsM0_2;
  Chord EfM0_2;
  Chord EM0_2;
  Chord FM0_2;
  Chord FsM0_2;
  Chord GfM0_2;
  Chord GM0_2;
  Chord GsM0_2;
  Chord AfM0_2;
  Chord AM0_2;
  Chord AsM0_2;
  Chord BfM0_2;
  Chord BM0_2;

  Chord CM1_2;
  Chord CsM1_2;
  Chord DM1_2;
  Chord DsM1_2;
  Chord EfM1_2;
  Chord EM1_2;
  Chord FM1_2;
  Chord FsM1_2;
  Chord GfM1_2;
  Chord GM1_2;
  Chord GsM1_2;
  Chord AfM1_2;
  Chord AM1_2;
  Chord AsM1_2;
  Chord BfM1_2;
  Chord BM1_2;

  Chord CM2_2;
  Chord CsM2_2;
  Chord DM2_2;
  Chord DsM2_2;
  Chord EfM2_2;
  Chord EM2_2;
  Chord FM2_2;
  Chord FsM2_2;
  Chord GfM2_2;
  Chord GM2_2;
  Chord GsM2_2;
  Chord AfM2_2;
  Chord AM2_2;
  Chord AsM2_2;
  Chord BfM2_2;
  Chord BM2_2;

  Chord CM3_2;
  Chord CsM3_2;
  Chord DM3_2;
  Chord DsM3_2;
  Chord EfM3_2;
  Chord EM3_2;
  Chord FM3_2;
  Chord FsM3_2;
  Chord GfM3_2;
  Chord GM3_2;
  Chord GsM3_2;
  Chord AfM3_2;
  Chord AM3_2;
  Chord AsM3_2;
  Chord BfM3_2;
  Chord BM3_2;

  Chord CM4_2;
  Chord CsM4_2;
  Chord DM4_2;
  Chord DsM4_2;
  Chord EfM4_2;
  Chord EM4_2;
  Chord FM4_2;
  Chord FsM4_2;
  Chord GfM4_2;
  Chord GM4_2;
  Chord GsM4_2;
  Chord AfM4_2;
  Chord AM4_2;
  Chord AsM4_2;
  Chord BfM4_2;
  Chord BM4_2;

  Chord CM5_2;
  Chord CsM5_2;
  Chord DM5_2;
  Chord DsM5_2;
  Chord EfM5_2;
  Chord EM5_2;
  Chord FM5_2;
  Chord FsM5_2;
  Chord GfM5_2;
  Chord GM5_2;
  Chord GsM5_2;
  Chord AfM5_2;
  Chord AM5_2;
  Chord AsM5_2;
  Chord BfM5_2;
  Chord BM5_2;

  Chord CM6_2;
  Chord CsM6_2;
  Chord DM6_2;
  Chord DsM6_2;
  Chord EfM6_2;
  Chord EM6_2;
  Chord FM6_2;
  Chord FsM6_2;
  Chord GfM6_2;
  Chord GM6_2;
  Chord GsM6_2;
  Chord AfM6_2;
  Chord AM6_2;
  Chord AsM6_2;
  Chord BfM6_2;
  Chord BM6_2;

  Chord CM7_2;
  Chord CsM7_2;
  Chord DM7_2;
  Chord DsM7_2;
  Chord EfM7_2;
  Chord EM7_2;
  Chord FM7_2;
  Chord FsM7_2;
  Chord GfM7_2;
  Chord GM7_2;
  Chord GsM7_2;
  Chord AfM7_2;
  Chord AM7_2;
  Chord AsM7_2;
  Chord BfM7_2;
  Chord BM7_2;

  Chord CM8_2;
  Chord CsM8_2;
  Chord DM8_2;
  Chord DsM8_2;
  Chord EfM8_2;
  Chord EM8_2;
  Chord FM8_2;
  Chord FsM8_2;
  Chord GfM8_2;
  Chord GM8_2;
  Chord GsM8_2;
  Chord AfM8_2;
  Chord AM8_2;
  Chord AsM8_2;
  Chord BfM8_2;
  Chord BM8_2;

  // Minor
  Chord Cm_2;
  Chord Csm_2;
  Chord Dm_2;
  Chord Dsm_2;
  Chord Efm_2;
  Chord Em_2;
  Chord _Fm_2;
  Chord Fsm_2;
  Chord Gfm_2;
  Chord Gm_2;
  Chord Gsm_2;
  Chord Afm_2;
  Chord Am_2;
  Chord Asm_2;
  Chord Bfm_2;
  Chord Bm_2;

  Chord Cm0_2;
  Chord Csm0_2;
  Chord Dm0_2;
  Chord Dsm0_2;
  Chord Efm0_2;
  Chord Em0_2;
  Chord _Fm0_2;
  Chord Fsm0_2;
  Chord Gfm0_2;
  Chord Gm0_2;
  Chord Gsm0_2;
  Chord Afm0_2;
  Chord Am0_2;
  Chord Asm0_2;
  Chord Bfm0_2;
  Chord Bm0_2;

  Chord Cm1_2;
  Chord Csm1_2;
  Chord Dm1_2;
  Chord Dsm1_2;
  Chord Efm1_2;
  Chord Em1_2;
  Chord _Fm1_2;
  Chord Fsm1_2;
  Chord Gfm1_2;
  Chord Gm1_2;
  Chord Gsm1_2;
  Chord Afm1_2;
  Chord Am1_2;
  Chord Asm1_2;
  Chord Bfm1_2;
  Chord Bm1_2;

  Chord Cm2_2;
  Chord Csm2_2;
  Chord Dm2_2;
  Chord Dsm2_2;
  Chord Efm2_2;
  Chord Em2_2;
  Chord _Fm2_2;
  Chord Fsm2_2;
  Chord Gfm2_2;
  Chord Gm2_2;
  Chord Gsm2_2;
  Chord Afm2_2;
  Chord Am2_2;
  Chord Asm2_2;
  Chord Bfm2_2;
  Chord Bm2_2;

  Chord Cm3_2;
  Chord Csm3_2;
  Chord Dm3_2;
  Chord Dsm3_2;
  Chord Efm3_2;
  Chord Em3_2;
  Chord _Fm3_2;
  Chord Fsm3_2;
  Chord Gfm3_2;
  Chord Gm3_2;
  Chord Gsm3_2;
  Chord Afm3_2;
  Chord Am3_2;
  Chord Asm3_2;
  Chord Bfm3_2;
  Chord Bm3_2;

  Chord Cm4_2;
  Chord Csm4_2;
  Chord Dm4_2;
  Chord Dsm4_2;
  Chord Efm4_2;
  Chord Em4_2;
  Chord _Fm4_2;
  Chord Fsm4_2;
  Chord Gfm4_2;
  Chord Gm4_2;
  Chord Gsm4_2;
  Chord Afm4_2;
  Chord Am4_2;
  Chord Asm4_2;
  Chord Bfm4_2;
  Chord Bm4_2;

  Chord Cm5_2;
  Chord Csm5_2;
  Chord Dm5_2;
  Chord Dsm5_2;
  Chord Efm5_2;
  Chord Em5_2;
  Chord _Fm5_2;
  Chord Fsm5_2;
  Chord Gfm5_2;
  Chord Gm5_2;
  Chord Gsm5_2;
  Chord Afm5_2;
  Chord Am5_2;
  Chord Asm5_2;
  Chord Bfm5_2;
  Chord Bm5_2;

  Chord Cm6_2;
  Chord Csm6_2;
  Chord Dm6_2;
  Chord Dsm6_2;
  Chord Efm6_2;
  Chord Em6_2;
  Chord _Fm6_2;
  Chord Fsm6_2;
  Chord Gfm6_2;
  Chord Gm6_2;
  Chord Gsm6_2;
  Chord Afm6_2;
  Chord Am6_2;
  Chord Asm6_2;
  Chord Bfm6_2;
  Chord Bm6_2;

  Chord Cm7_2;
  Chord Csm7_2;
  Chord Dm7_2;
  Chord Dsm7_2;
  Chord Efm7_2;
  Chord Em7_2;
  Chord _Fm7_2;
  Chord Fsm7_2;
  Chord Gfm7_2;
  Chord Gm7_2;
  Chord Gsm7_2;
  Chord Afm7_2;
  Chord Am7_2;
  Chord Asm7_2;
  Chord Bfm7_2;
  Chord Bm7_2;

  Chord Cm8_2;
  Chord Csm8_2;
  Chord Dm8_2;
  Chord Dsm8_2;
  Chord Efm8_2;
  Chord Em8_2;
  Chord _Fm8_2;
  Chord Fsm8_2;
  Chord Gfm8_2;
  Chord Gm8_2;
  Chord Gsm8_2;
  Chord Afm8_2;
  Chord Am8_2;
  Chord Asm8_2;
  Chord Bfm8_2;
  Chord Bm8_2;

  // Augmented
  Chord Caug_2;
  Chord Csaug_2;
  Chord Daug_2;
  Chord Dsaug_2;
  Chord Efaug_2;
  Chord Eaug_2;
  Chord _Faug_2;
  Chord Fsaug_2;
  Chord Gfaug_2;
  Chord Gaug_2;
  Chord Gsaug_2;
  Chord Afaug_2;
  Chord Aaug_2;
  Chord Asaug_2;
  Chord Bfaug_2;
  Chord Baug_2;

  Chord Caug0_2;
  Chord Csaug0_2;
  Chord Daug0_2;
  Chord Dsaug0_2;
  Chord Efaug0_2;
  Chord Eaug0_2;
  Chord _Faug0_2;
  Chord Fsaug0_2;
  Chord Gfaug0_2;
  Chord Gaug0_2;
  Chord Gsaug0_2;
  Chord Afaug0_2;
  Chord Aaug0_2;
  Chord Asaug0_2;
  Chord Bfaug0_2;
  Chord Baug0_2;

  Chord Caug1_2;
  Chord Csaug1_2;
  Chord Daug1_2;
  Chord Dsaug1_2;
  Chord Efaug1_2;
  Chord Eaug1_2;
  Chord _Faug1_2;
  Chord Fsaug1_2;
  Chord Gfaug1_2;
  Chord Gaug1_2;
  Chord Gsaug1_2;
  Chord Afaug1_2;
  Chord Aaug1_2;
  Chord Asaug1_2;
  Chord Bfaug1_2;
  Chord Baug1_2;

  Chord Caug2_2;
  Chord Csaug2_2;
  Chord Daug2_2;
  Chord Dsaug2_2;
  Chord Efaug2_2;
  Chord Eaug2_2;
  Chord _Faug2_2;
  Chord Fsaug2_2;
  Chord Gfaug2_2;
  Chord Gaug2_2;
  Chord Gsaug2_2;
  Chord Afaug2_2;
  Chord Aaug2_2;
  Chord Asaug2_2;
  Chord Bfaug2_2;
  Chord Baug2_2;

  Chord Caug3_2;
  Chord Csaug3_2;
  Chord Daug3_2;
  Chord Dsaug3_2;
  Chord Efaug3_2;
  Chord Eaug3_2;
  Chord _Faug3_2;
  Chord Fsaug3_2;
  Chord Gfaug3_2;
  Chord Gaug3_2;
  Chord Gsaug3_2;
  Chord Afaug3_2;
  Chord Aaug3_2;
  Chord Asaug3_2;
  Chord Bfaug3_2;
  Chord Baug3_2;

  Chord Caug4_2;
  Chord Csaug4_2;
  Chord Daug4_2;
  Chord Dsaug4_2;
  Chord Efaug4_2;
  Chord Eaug4_2;
  Chord _Faug4_2;
  Chord Fsaug4_2;
  Chord Gfaug4_2;
  Chord Gaug4_2;
  Chord Gsaug4_2;
  Chord Afaug4_2;
  Chord Aaug4_2;
  Chord Asaug4_2;
  Chord Bfaug4_2;
  Chord Baug4_2;

  Chord Caug5_2;
  Chord Csaug5_2;
  Chord Daug5_2;
  Chord Dsaug5_2;
  Chord Efaug5_2;
  Chord Eaug5_2;
  Chord _Faug5_2;
  Chord Fsaug5_2;
  Chord Gfaug5_2;
  Chord Gaug5_2;
  Chord Gsaug5_2;
  Chord Afaug5_2;
  Chord Aaug5_2;
  Chord Asaug5_2;
  Chord Bfaug5_2;
  Chord Baug5_2;

  Chord Caug6_2;
  Chord Csaug6_2;
  Chord Daug6_2;
  Chord Dsaug6_2;
  Chord Efaug6_2;
  Chord Eaug6_2;
  Chord _Faug6_2;
  Chord Fsaug6_2;
  Chord Gfaug6_2;
  Chord Gaug6_2;
  Chord Gsaug6_2;
  Chord Afaug6_2;
  Chord Aaug6_2;
  Chord Asaug6_2;
  Chord Bfaug6_2;
  Chord Baug6_2;

  Chord Caug7_2;
  Chord Csaug7_2;
  Chord Daug7_2;
  Chord Dsaug7_2;
  Chord Efaug7_2;
  Chord Eaug7_2;
  Chord _Faug7_2;
  Chord Fsaug7_2;
  Chord Gfaug7_2;
  Chord Gaug7_2;
  Chord Gsaug7_2;
  Chord Afaug7_2;
  Chord Aaug7_2;
  Chord Asaug7_2;
  Chord Bfaug7_2;
  Chord Baug7_2;

  Chord Caug8_2;
  Chord Csaug8_2;
  Chord Daug8_2;
  Chord Dsaug8_2;
  Chord Efaug8_2;
  Chord Eaug8_2;
  Chord _Faug8_2;
  Chord Fsaug8_2;
  Chord Gfaug8_2;
  Chord Gaug8_2;
  Chord Gsaug8_2;
  Chord Afaug8_2;
  Chord Aaug8_2;
  Chord Asaug8_2;
  Chord Bfaug8_2;
  Chord Baug8_2;

  // Diminished
  Chord Cdim_2;
  Chord Csdim_2;
  Chord Ddim_2;
  Chord Dsdim_2;
  Chord Efdim_2;
  Chord Edim_2;
  Chord _Fdim_2;
  Chord Fsdim_2;
  Chord Gfdim_2;
  Chord Gdim_2;
  Chord Gsdim_2;
  Chord Afdim_2;
  Chord Adim_2;
  Chord Asdim_2;
  Chord Bfdim_2;
  Chord Bdim_2;

  Chord Cdim0_2;
  Chord Csdim0_2;
  Chord Ddim0_2;
  Chord Dsdim0_2;
  Chord Efdim0_2;
  Chord Edim0_2;
  Chord _Fdim0_2;
  Chord Fsdim0_2;
  Chord Gfdim0_2;
  Chord Gdim0_2;
  Chord Gsdim0_2;
  Chord Afdim0_2;
  Chord Adim0_2;
  Chord Asdim0_2;
  Chord Bfdim0_2;
  Chord Bdim0_2;

  Chord Cdim1_2;
  Chord Csdim1_2;
  Chord Ddim1_2;
  Chord Dsdim1_2;
  Chord Efdim1_2;
  Chord Edim1_2;
  Chord _Fdim1_2;
  Chord Fsdim1_2;
  Chord Gfdim1_2;
  Chord Gdim1_2;
  Chord Gsdim1_2;
  Chord Afdim1_2;
  Chord Adim1_2;
  Chord Asdim1_2;
  Chord Bfdim1_2;
  Chord Bdim1_2;

  Chord Cdim2_2;
  Chord Csdim2_2;
  Chord Ddim2_2;
  Chord Dsdim2_2;
  Chord Efdim2_2;
  Chord Edim2_2;
  Chord _Fdim2_2;
  Chord Fsdim2_2;
  Chord Gfdim2_2;
  Chord Gdim2_2;
  Chord Gsdim2_2;
  Chord Afdim2_2;
  Chord Adim2_2;
  Chord Asdim2_2;
  Chord Bfdim2_2;
  Chord Bdim2_2;

  Chord Cdim3_2;
  Chord Csdim3_2;
  Chord Ddim3_2;
  Chord Dsdim3_2;
  Chord Efdim3_2;
  Chord Edim3_2;
  Chord _Fdim3_2;
  Chord Fsdim3_2;
  Chord Gfdim3_2;
  Chord Gdim3_2;
  Chord Gsdim3_2;
  Chord Afdim3_2;
  Chord Adim3_2;
  Chord Asdim3_2;
  Chord Bfdim3_2;
  Chord Bdim3_2;

  Chord Cdim4_2;
  Chord Csdim4_2;
  Chord Ddim4_2;
  Chord Dsdim4_2;
  Chord Efdim4_2;
  Chord Edim4_2;
  Chord _Fdim4_2;
  Chord Fsdim4_2;
  Chord Gfdim4_2;
  Chord Gdim4_2;
  Chord Gsdim4_2;
  Chord Afdim4_2;
  Chord Adim4_2;
  Chord Asdim4_2;
  Chord Bfdim4_2;
  Chord Bdim4_2;

  Chord Cdim5_2;
  Chord Csdim5_2;
  Chord Ddim5_2;
  Chord Dsdim5_2;
  Chord Efdim5_2;
  Chord Edim5_2;
  Chord _Fdim5_2;
  Chord Fsdim5_2;
  Chord Gfdim5_2;
  Chord Gdim5_2;
  Chord Gsdim5_2;
  Chord Afdim5_2;
  Chord Adim5_2;
  Chord Asdim5_2;
  Chord Bfdim5_2;
  Chord Bdim5_2;

  Chord Cdim6_2;
  Chord Csdim6_2;
  Chord Ddim6_2;
  Chord Dsdim6_2;
  Chord Efdim6_2;
  Chord Edim6_2;
  Chord _Fdim6_2;
  Chord Fsdim6_2;
  Chord Gfdim6_2;
  Chord Gdim6_2;
  Chord Gsdim6_2;
  Chord Afdim6_2;
  Chord Adim6_2;
  Chord Asdim6_2;
  Chord Bfdim6_2;
  Chord Bdim6_2;

  Chord Cdim7_2;
  Chord Csdim7_2;
  Chord Ddim7_2;
  Chord Dsdim7_2;
  Chord Efdim7_2;
  Chord Edim7_2;
  Chord _Fdim7_2;
  Chord Fsdim7_2;
  Chord Gfdim7_2;
  Chord Gdim7_2;
  Chord Gsdim7_2;
  Chord Afdim7_2;
  Chord Adim7_2;
  Chord Asdim7_2;
  Chord Bfdim7_2;
  Chord Bdim7_2;

  Chord Cdim8_2;
  Chord Csdim8_2;
  Chord Ddim8_2;
  Chord Dsdim8_2;
  Chord Efdim8_2;
  Chord Edim8_2;
  Chord _Fdim8_2;
  Chord Fsdim8_2;
  Chord Gfdim8_2;
  Chord Gdim8_2;
  Chord Gsdim8_2;
  Chord Afdim8_2;
  Chord Adim8_2;
  Chord Asdim8_2;
  Chord Bfdim8_2;
  Chord Bdim8_2;

  //
  // QRTR
  //

  // Major
  // 0-based offsets
  Chord CM_4;
  Chord CsM_4;
  Chord DM_4;
  Chord DsM_4;
  Chord EfM_4;
  Chord EM_4;
  Chord FM_4;
  Chord FsM_4;
  Chord GfM_4;
  Chord GM_4;
  Chord GsM_4;
  Chord AfM_4;
  Chord AM_4;
  Chord AsM_4;
  Chord BfM_4;
  Chord BM_4;

  // constants predefined per octave
  Chord CM0_4;
  Chord CsM0_4;
  Chord DM0_4;
  Chord DsM0_4;
  Chord EfM0_4;
  Chord EM0_4;
  Chord FM0_4;
  Chord FsM0_4;
  Chord GfM0_4;
  Chord GM0_4;
  Chord GsM0_4;
  Chord AfM0_4;
  Chord AM0_4;
  Chord AsM0_4;
  Chord BfM0_4;
  Chord BM0_4;

  Chord CM1_4;
  Chord CsM1_4;
  Chord DM1_4;
  Chord DsM1_4;
  Chord EfM1_4;
  Chord EM1_4;
  Chord FM1_4;
  Chord FsM1_4;
  Chord GfM1_4;
  Chord GM1_4;
  Chord GsM1_4;
  Chord AfM1_4;
  Chord AM1_4;
  Chord AsM1_4;
  Chord BfM1_4;
  Chord BM1_4;

  Chord CM2_4;
  Chord CsM2_4;
  Chord DM2_4;
  Chord DsM2_4;
  Chord EfM2_4;
  Chord EM2_4;
  Chord FM2_4;
  Chord FsM2_4;
  Chord GfM2_4;
  Chord GM2_4;
  Chord GsM2_4;
  Chord AfM2_4;
  Chord AM2_4;
  Chord AsM2_4;
  Chord BfM2_4;
  Chord BM2_4;

  Chord CM3_4;
  Chord CsM3_4;
  Chord DM3_4;
  Chord DsM3_4;
  Chord EfM3_4;
  Chord EM3_4;
  Chord FM3_4;
  Chord FsM3_4;
  Chord GfM3_4;
  Chord GM3_4;
  Chord GsM3_4;
  Chord AfM3_4;
  Chord AM3_4;
  Chord AsM3_4;
  Chord BfM3_4;
  Chord BM3_4;

  Chord CM4_4;
  Chord CsM4_4;
  Chord DM4_4;
  Chord DsM4_4;
  Chord EfM4_4;
  Chord EM4_4;
  Chord FM4_4;
  Chord FsM4_4;
  Chord GfM4_4;
  Chord GM4_4;
  Chord GsM4_4;
  Chord AfM4_4;
  Chord AM4_4;
  Chord AsM4_4;
  Chord BfM4_4;
  Chord BM4_4;

  Chord CM5_4;
  Chord CsM5_4;
  Chord DM5_4;
  Chord DsM5_4;
  Chord EfM5_4;
  Chord EM5_4;
  Chord FM5_4;
  Chord FsM5_4;
  Chord GfM5_4;
  Chord GM5_4;
  Chord GsM5_4;
  Chord AfM5_4;
  Chord AM5_4;
  Chord AsM5_4;
  Chord BfM5_4;
  Chord BM5_4;

  Chord CM6_4;
  Chord CsM6_4;
  Chord DM6_4;
  Chord DsM6_4;
  Chord EfM6_4;
  Chord EM6_4;
  Chord FM6_4;
  Chord FsM6_4;
  Chord GfM6_4;
  Chord GM6_4;
  Chord GsM6_4;
  Chord AfM6_4;
  Chord AM6_4;
  Chord AsM6_4;
  Chord BfM6_4;
  Chord BM6_4;

  Chord CM7_4;
  Chord CsM7_4;
  Chord DM7_4;
  Chord DsM7_4;
  Chord EfM7_4;
  Chord EM7_4;
  Chord FM7_4;
  Chord FsM7_4;
  Chord GfM7_4;
  Chord GM7_4;
  Chord GsM7_4;
  Chord AfM7_4;
  Chord AM7_4;
  Chord AsM7_4;
  Chord BfM7_4;
  Chord BM7_4;

  Chord CM8_4;
  Chord CsM8_4;
  Chord DM8_4;
  Chord DsM8_4;
  Chord EfM8_4;
  Chord EM8_4;
  Chord FM8_4;
  Chord FsM8_4;
  Chord GfM8_4;
  Chord GM8_4;
  Chord GsM8_4;
  Chord AfM8_4;
  Chord AM8_4;
  Chord AsM8_4;
  Chord BfM8_4;
  Chord BM8_4;

  // Minor
  Chord Cm_4;
  Chord Csm_4;
  Chord Dm_4;
  Chord Dsm_4;
  Chord Efm_4;
  Chord Em_4;
  Chord _Fm_4;
  Chord Fsm_4;
  Chord Gfm_4;
  Chord Gm_4;
  Chord Gsm_4;
  Chord Afm_4;
  Chord Am_4;
  Chord Asm_4;
  Chord Bfm_4;
  Chord Bm_4;

  Chord Cm0_4;
  Chord Csm0_4;
  Chord Dm0_4;
  Chord Dsm0_4;
  Chord Efm0_4;
  Chord Em0_4;
  Chord _Fm0_4;
  Chord Fsm0_4;
  Chord Gfm0_4;
  Chord Gm0_4;
  Chord Gsm0_4;
  Chord Afm0_4;
  Chord Am0_4;
  Chord Asm0_4;
  Chord Bfm0_4;
  Chord Bm0_4;

  Chord Cm1_4;
  Chord Csm1_4;
  Chord Dm1_4;
  Chord Dsm1_4;
  Chord Efm1_4;
  Chord Em1_4;
  Chord _Fm1_4;
  Chord Fsm1_4;
  Chord Gfm1_4;
  Chord Gm1_4;
  Chord Gsm1_4;
  Chord Afm1_4;
  Chord Am1_4;
  Chord Asm1_4;
  Chord Bfm1_4;
  Chord Bm1_4;

  Chord Cm2_4;
  Chord Csm2_4;
  Chord Dm2_4;
  Chord Dsm2_4;
  Chord Efm2_4;
  Chord Em2_4;
  Chord _Fm2_4;
  Chord Fsm2_4;
  Chord Gfm2_4;
  Chord Gm2_4;
  Chord Gsm2_4;
  Chord Afm2_4;
  Chord Am2_4;
  Chord Asm2_4;
  Chord Bfm2_4;
  Chord Bm2_4;

  Chord Cm3_4;
  Chord Csm3_4;
  Chord Dm3_4;
  Chord Dsm3_4;
  Chord Efm3_4;
  Chord Em3_4;
  Chord _Fm3_4;
  Chord Fsm3_4;
  Chord Gfm3_4;
  Chord Gm3_4;
  Chord Gsm3_4;
  Chord Afm3_4;
  Chord Am3_4;
  Chord Asm3_4;
  Chord Bfm3_4;
  Chord Bm3_4;

  Chord Cm4_4;
  Chord Csm4_4;
  Chord Dm4_4;
  Chord Dsm4_4;
  Chord Efm4_4;
  Chord Em4_4;
  Chord _Fm4_4;
  Chord Fsm4_4;
  Chord Gfm4_4;
  Chord Gm4_4;
  Chord Gsm4_4;
  Chord Afm4_4;
  Chord Am4_4;
  Chord Asm4_4;
  Chord Bfm4_4;
  Chord Bm4_4;

  Chord Cm5_4;
  Chord Csm5_4;
  Chord Dm5_4;
  Chord Dsm5_4;
  Chord Efm5_4;
  Chord Em5_4;
  Chord _Fm5_4;
  Chord Fsm5_4;
  Chord Gfm5_4;
  Chord Gm5_4;
  Chord Gsm5_4;
  Chord Afm5_4;
  Chord Am5_4;
  Chord Asm5_4;
  Chord Bfm5_4;
  Chord Bm5_4;

  Chord Cm6_4;
  Chord Csm6_4;
  Chord Dm6_4;
  Chord Dsm6_4;
  Chord Efm6_4;
  Chord Em6_4;
  Chord _Fm6_4;
  Chord Fsm6_4;
  Chord Gfm6_4;
  Chord Gm6_4;
  Chord Gsm6_4;
  Chord Afm6_4;
  Chord Am6_4;
  Chord Asm6_4;
  Chord Bfm6_4;
  Chord Bm6_4;

  Chord Cm7_4;
  Chord Csm7_4;
  Chord Dm7_4;
  Chord Dsm7_4;
  Chord Efm7_4;
  Chord Em7_4;
  Chord _Fm7_4;
  Chord Fsm7_4;
  Chord Gfm7_4;
  Chord Gm7_4;
  Chord Gsm7_4;
  Chord Afm7_4;
  Chord Am7_4;
  Chord Asm7_4;
  Chord Bfm7_4;
  Chord Bm7_4;

  Chord Cm8_4;
  Chord Csm8_4;
  Chord Dm8_4;
  Chord Dsm8_4;
  Chord Efm8_4;
  Chord Em8_4;
  Chord _Fm8_4;
  Chord Fsm8_4;
  Chord Gfm8_4;
  Chord Gm8_4;
  Chord Gsm8_4;
  Chord Afm8_4;
  Chord Am8_4;
  Chord Asm8_4;
  Chord Bfm8_4;
  Chord Bm8_4;

  // Augmented
  Chord Caug_4;
  Chord Csaug_4;
  Chord Daug_4;
  Chord Dsaug_4;
  Chord Efaug_4;
  Chord Eaug_4;
  Chord _Faug_4;
  Chord Fsaug_4;
  Chord Gfaug_4;
  Chord Gaug_4;
  Chord Gsaug_4;
  Chord Afaug_4;
  Chord Aaug_4;
  Chord Asaug_4;
  Chord Bfaug_4;
  Chord Baug_4;

  Chord Caug0_4;
  Chord Csaug0_4;
  Chord Daug0_4;
  Chord Dsaug0_4;
  Chord Efaug0_4;
  Chord Eaug0_4;
  Chord _Faug0_4;
  Chord Fsaug0_4;
  Chord Gfaug0_4;
  Chord Gaug0_4;
  Chord Gsaug0_4;
  Chord Afaug0_4;
  Chord Aaug0_4;
  Chord Asaug0_4;
  Chord Bfaug0_4;
  Chord Baug0_4;

  Chord Caug1_4;
  Chord Csaug1_4;
  Chord Daug1_4;
  Chord Dsaug1_4;
  Chord Efaug1_4;
  Chord Eaug1_4;
  Chord _Faug1_4;
  Chord Fsaug1_4;
  Chord Gfaug1_4;
  Chord Gaug1_4;
  Chord Gsaug1_4;
  Chord Afaug1_4;
  Chord Aaug1_4;
  Chord Asaug1_4;
  Chord Bfaug1_4;
  Chord Baug1_4;

  Chord Caug2_4;
  Chord Csaug2_4;
  Chord Daug2_4;
  Chord Dsaug2_4;
  Chord Efaug2_4;
  Chord Eaug2_4;
  Chord _Faug2_4;
  Chord Fsaug2_4;
  Chord Gfaug2_4;
  Chord Gaug2_4;
  Chord Gsaug2_4;
  Chord Afaug2_4;
  Chord Aaug2_4;
  Chord Asaug2_4;
  Chord Bfaug2_4;
  Chord Baug2_4;

  Chord Caug3_4;
  Chord Csaug3_4;
  Chord Daug3_4;
  Chord Dsaug3_4;
  Chord Efaug3_4;
  Chord Eaug3_4;
  Chord _Faug3_4;
  Chord Fsaug3_4;
  Chord Gfaug3_4;
  Chord Gaug3_4;
  Chord Gsaug3_4;
  Chord Afaug3_4;
  Chord Aaug3_4;
  Chord Asaug3_4;
  Chord Bfaug3_4;
  Chord Baug3_4;

  Chord Caug4_4;
  Chord Csaug4_4;
  Chord Daug4_4;
  Chord Dsaug4_4;
  Chord Efaug4_4;
  Chord Eaug4_4;
  Chord _Faug4_4;
  Chord Fsaug4_4;
  Chord Gfaug4_4;
  Chord Gaug4_4;
  Chord Gsaug4_4;
  Chord Afaug4_4;
  Chord Aaug4_4;
  Chord Asaug4_4;
  Chord Bfaug4_4;
  Chord Baug4_4;

  Chord Caug5_4;
  Chord Csaug5_4;
  Chord Daug5_4;
  Chord Dsaug5_4;
  Chord Efaug5_4;
  Chord Eaug5_4;
  Chord _Faug5_4;
  Chord Fsaug5_4;
  Chord Gfaug5_4;
  Chord Gaug5_4;
  Chord Gsaug5_4;
  Chord Afaug5_4;
  Chord Aaug5_4;
  Chord Asaug5_4;
  Chord Bfaug5_4;
  Chord Baug5_4;

  Chord Caug6_4;
  Chord Csaug6_4;
  Chord Daug6_4;
  Chord Dsaug6_4;
  Chord Efaug6_4;
  Chord Eaug6_4;
  Chord _Faug6_4;
  Chord Fsaug6_4;
  Chord Gfaug6_4;
  Chord Gaug6_4;
  Chord Gsaug6_4;
  Chord Afaug6_4;
  Chord Aaug6_4;
  Chord Asaug6_4;
  Chord Bfaug6_4;
  Chord Baug6_4;

  Chord Caug7_4;
  Chord Csaug7_4;
  Chord Daug7_4;
  Chord Dsaug7_4;
  Chord Efaug7_4;
  Chord Eaug7_4;
  Chord _Faug7_4;
  Chord Fsaug7_4;
  Chord Gfaug7_4;
  Chord Gaug7_4;
  Chord Gsaug7_4;
  Chord Afaug7_4;
  Chord Aaug7_4;
  Chord Asaug7_4;
  Chord Bfaug7_4;
  Chord Baug7_4;

  Chord Caug8_4;
  Chord Csaug8_4;
  Chord Daug8_4;
  Chord Dsaug8_4;
  Chord Efaug8_4;
  Chord Eaug8_4;
  Chord _Faug8_4;
  Chord Fsaug8_4;
  Chord Gfaug8_4;
  Chord Gaug8_4;
  Chord Gsaug8_4;
  Chord Afaug8_4;
  Chord Aaug8_4;
  Chord Asaug8_4;
  Chord Bfaug8_4;
  Chord Baug8_4;

  // Diminished
  Chord Cdim_4;
  Chord Csdim_4;
  Chord Ddim_4;
  Chord Dsdim_4;
  Chord Efdim_4;
  Chord Edim_4;
  Chord _Fdim_4;
  Chord Fsdim_4;
  Chord Gfdim_4;
  Chord Gdim_4;
  Chord Gsdim_4;
  Chord Afdim_4;
  Chord Adim_4;
  Chord Asdim_4;
  Chord Bfdim_4;
  Chord Bdim_4;

  Chord Cdim0_4;
  Chord Csdim0_4;
  Chord Ddim0_4;
  Chord Dsdim0_4;
  Chord Efdim0_4;
  Chord Edim0_4;
  Chord _Fdim0_4;
  Chord Fsdim0_4;
  Chord Gfdim0_4;
  Chord Gdim0_4;
  Chord Gsdim0_4;
  Chord Afdim0_4;
  Chord Adim0_4;
  Chord Asdim0_4;
  Chord Bfdim0_4;
  Chord Bdim0_4;

  Chord Cdim1_4;
  Chord Csdim1_4;
  Chord Ddim1_4;
  Chord Dsdim1_4;
  Chord Efdim1_4;
  Chord Edim1_4;
  Chord _Fdim1_4;
  Chord Fsdim1_4;
  Chord Gfdim1_4;
  Chord Gdim1_4;
  Chord Gsdim1_4;
  Chord Afdim1_4;
  Chord Adim1_4;
  Chord Asdim1_4;
  Chord Bfdim1_4;
  Chord Bdim1_4;

  Chord Cdim2_4;
  Chord Csdim2_4;
  Chord Ddim2_4;
  Chord Dsdim2_4;
  Chord Efdim2_4;
  Chord Edim2_4;
  Chord _Fdim2_4;
  Chord Fsdim2_4;
  Chord Gfdim2_4;
  Chord Gdim2_4;
  Chord Gsdim2_4;
  Chord Afdim2_4;
  Chord Adim2_4;
  Chord Asdim2_4;
  Chord Bfdim2_4;
  Chord Bdim2_4;

  Chord Cdim3_4;
  Chord Csdim3_4;
  Chord Ddim3_4;
  Chord Dsdim3_4;
  Chord Efdim3_4;
  Chord Edim3_4;
  Chord _Fdim3_4;
  Chord Fsdim3_4;
  Chord Gfdim3_4;
  Chord Gdim3_4;
  Chord Gsdim3_4;
  Chord Afdim3_4;
  Chord Adim3_4;
  Chord Asdim3_4;
  Chord Bfdim3_4;
  Chord Bdim3_4;

  Chord Cdim4_4;
  Chord Csdim4_4;
  Chord Ddim4_4;
  Chord Dsdim4_4;
  Chord Efdim4_4;
  Chord Edim4_4;
  Chord _Fdim4_4;
  Chord Fsdim4_4;
  Chord Gfdim4_4;
  Chord Gdim4_4;
  Chord Gsdim4_4;
  Chord Afdim4_4;
  Chord Adim4_4;
  Chord Asdim4_4;
  Chord Bfdim4_4;
  Chord Bdim4_4;

  Chord Cdim5_4;
  Chord Csdim5_4;
  Chord Ddim5_4;
  Chord Dsdim5_4;
  Chord Efdim5_4;
  Chord Edim5_4;
  Chord _Fdim5_4;
  Chord Fsdim5_4;
  Chord Gfdim5_4;
  Chord Gdim5_4;
  Chord Gsdim5_4;
  Chord Afdim5_4;
  Chord Adim5_4;
  Chord Asdim5_4;
  Chord Bfdim5_4;
  Chord Bdim5_4;

  Chord Cdim6_4;
  Chord Csdim6_4;
  Chord Ddim6_4;
  Chord Dsdim6_4;
  Chord Efdim6_4;
  Chord Edim6_4;
  Chord _Fdim6_4;
  Chord Fsdim6_4;
  Chord Gfdim6_4;
  Chord Gdim6_4;
  Chord Gsdim6_4;
  Chord Afdim6_4;
  Chord Adim6_4;
  Chord Asdim6_4;
  Chord Bfdim6_4;
  Chord Bdim6_4;

  Chord Cdim7_4;
  Chord Csdim7_4;
  Chord Ddim7_4;
  Chord Dsdim7_4;
  Chord Efdim7_4;
  Chord Edim7_4;
  Chord _Fdim7_4;
  Chord Fsdim7_4;
  Chord Gfdim7_4;
  Chord Gdim7_4;
  Chord Gsdim7_4;
  Chord Afdim7_4;
  Chord Adim7_4;
  Chord Asdim7_4;
  Chord Bfdim7_4;
  Chord Bdim7_4;

  Chord Cdim8_4;
  Chord Csdim8_4;
  Chord Ddim8_4;
  Chord Dsdim8_4;
  Chord Efdim8_4;
  Chord Edim8_4;
  Chord _Fdim8_4;
  Chord Fsdim8_4;
  Chord Gfdim8_4;
  Chord Gdim8_4;
  Chord Gsdim8_4;
  Chord Afdim8_4;
  Chord Adim8_4;
  Chord Asdim8_4;
  Chord Bfdim8_4;
  Chord Bdim8_4;

  //
  // ETH
  //

  // Major
  // 0-based offsets
  Chord CM_8;
  Chord CsM_8;
  Chord DM_8;
  Chord DsM_8;
  Chord EfM_8;
  Chord EM_8;
  Chord FM_8;
  Chord FsM_8;
  Chord GfM_8;
  Chord GM_8;
  Chord GsM_8;
  Chord AfM_8;
  Chord AM_8;
  Chord AsM_8;
  Chord BfM_8;
  Chord BM_8;

  // constants predefined per octave
  Chord CM0_8;
  Chord CsM0_8;
  Chord DM0_8;
  Chord DsM0_8;
  Chord EfM0_8;
  Chord EM0_8;
  Chord FM0_8;
  Chord FsM0_8;
  Chord GfM0_8;
  Chord GM0_8;
  Chord GsM0_8;
  Chord AfM0_8;
  Chord AM0_8;
  Chord AsM0_8;
  Chord BfM0_8;
  Chord BM0_8;

  Chord CM1_8;
  Chord CsM1_8;
  Chord DM1_8;
  Chord DsM1_8;
  Chord EfM1_8;
  Chord EM1_8;
  Chord FM1_8;
  Chord FsM1_8;
  Chord GfM1_8;
  Chord GM1_8;
  Chord GsM1_8;
  Chord AfM1_8;
  Chord AM1_8;
  Chord AsM1_8;
  Chord BfM1_8;
  Chord BM1_8;

  Chord CM2_8;
  Chord CsM2_8;
  Chord DM2_8;
  Chord DsM2_8;
  Chord EfM2_8;
  Chord EM2_8;
  Chord FM2_8;
  Chord FsM2_8;
  Chord GfM2_8;
  Chord GM2_8;
  Chord GsM2_8;
  Chord AfM2_8;
  Chord AM2_8;
  Chord AsM2_8;
  Chord BfM2_8;
  Chord BM2_8;

  Chord CM3_8;
  Chord CsM3_8;
  Chord DM3_8;
  Chord DsM3_8;
  Chord EfM3_8;
  Chord EM3_8;
  Chord FM3_8;
  Chord FsM3_8;
  Chord GfM3_8;
  Chord GM3_8;
  Chord GsM3_8;
  Chord AfM3_8;
  Chord AM3_8;
  Chord AsM3_8;
  Chord BfM3_8;
  Chord BM3_8;

  Chord CM4_8;
  Chord CsM4_8;
  Chord DM4_8;
  Chord DsM4_8;
  Chord EfM4_8;
  Chord EM4_8;
  Chord FM4_8;
  Chord FsM4_8;
  Chord GfM4_8;
  Chord GM4_8;
  Chord GsM4_8;
  Chord AfM4_8;
  Chord AM4_8;
  Chord AsM4_8;
  Chord BfM4_8;
  Chord BM4_8;

  Chord CM5_8;
  Chord CsM5_8;
  Chord DM5_8;
  Chord DsM5_8;
  Chord EfM5_8;
  Chord EM5_8;
  Chord FM5_8;
  Chord FsM5_8;
  Chord GfM5_8;
  Chord GM5_8;
  Chord GsM5_8;
  Chord AfM5_8;
  Chord AM5_8;
  Chord AsM5_8;
  Chord BfM5_8;
  Chord BM5_8;

  Chord CM6_8;
  Chord CsM6_8;
  Chord DM6_8;
  Chord DsM6_8;
  Chord EfM6_8;
  Chord EM6_8;
  Chord FM6_8;
  Chord FsM6_8;
  Chord GfM6_8;
  Chord GM6_8;
  Chord GsM6_8;
  Chord AfM6_8;
  Chord AM6_8;
  Chord AsM6_8;
  Chord BfM6_8;
  Chord BM6_8;

  Chord CM7_8;
  Chord CsM7_8;
  Chord DM7_8;
  Chord DsM7_8;
  Chord EfM7_8;
  Chord EM7_8;
  Chord FM7_8;
  Chord FsM7_8;
  Chord GfM7_8;
  Chord GM7_8;
  Chord GsM7_8;
  Chord AfM7_8;
  Chord AM7_8;
  Chord AsM7_8;
  Chord BfM7_8;
  Chord BM7_8;

  Chord CM8_8;
  Chord CsM8_8;
  Chord DM8_8;
  Chord DsM8_8;
  Chord EfM8_8;
  Chord EM8_8;
  Chord FM8_8;
  Chord FsM8_8;
  Chord GfM8_8;
  Chord GM8_8;
  Chord GsM8_8;
  Chord AfM8_8;
  Chord AM8_8;
  Chord AsM8_8;
  Chord BfM8_8;
  Chord BM8_8;

  // Minor
  Chord Cm_8;
  Chord Csm_8;
  Chord Dm_8;
  Chord Dsm_8;
  Chord Efm_8;
  Chord Em_8;
  Chord _Fm_8;
  Chord Fsm_8;
  Chord Gfm_8;
  Chord Gm_8;
  Chord Gsm_8;
  Chord Afm_8;
  Chord Am_8;
  Chord Asm_8;
  Chord Bfm_8;
  Chord Bm_8;

  Chord Cm0_8;
  Chord Csm0_8;
  Chord Dm0_8;
  Chord Dsm0_8;
  Chord Efm0_8;
  Chord Em0_8;
  Chord _Fm0_8;
  Chord Fsm0_8;
  Chord Gfm0_8;
  Chord Gm0_8;
  Chord Gsm0_8;
  Chord Afm0_8;
  Chord Am0_8;
  Chord Asm0_8;
  Chord Bfm0_8;
  Chord Bm0_8;

  Chord Cm1_8;
  Chord Csm1_8;
  Chord Dm1_8;
  Chord Dsm1_8;
  Chord Efm1_8;
  Chord Em1_8;
  Chord _Fm1_8;
  Chord Fsm1_8;
  Chord Gfm1_8;
  Chord Gm1_8;
  Chord Gsm1_8;
  Chord Afm1_8;
  Chord Am1_8;
  Chord Asm1_8;
  Chord Bfm1_8;
  Chord Bm1_8;

  Chord Cm2_8;
  Chord Csm2_8;
  Chord Dm2_8;
  Chord Dsm2_8;
  Chord Efm2_8;
  Chord Em2_8;
  Chord _Fm2_8;
  Chord Fsm2_8;
  Chord Gfm2_8;
  Chord Gm2_8;
  Chord Gsm2_8;
  Chord Afm2_8;
  Chord Am2_8;
  Chord Asm2_8;
  Chord Bfm2_8;
  Chord Bm2_8;

  Chord Cm3_8;
  Chord Csm3_8;
  Chord Dm3_8;
  Chord Dsm3_8;
  Chord Efm3_8;
  Chord Em3_8;
  Chord _Fm3_8;
  Chord Fsm3_8;
  Chord Gfm3_8;
  Chord Gm3_8;
  Chord Gsm3_8;
  Chord Afm3_8;
  Chord Am3_8;
  Chord Asm3_8;
  Chord Bfm3_8;
  Chord Bm3_8;

  Chord Cm4_8;
  Chord Csm4_8;
  Chord Dm4_8;
  Chord Dsm4_8;
  Chord Efm4_8;
  Chord Em4_8;
  Chord _Fm4_8;
  Chord Fsm4_8;
  Chord Gfm4_8;
  Chord Gm4_8;
  Chord Gsm4_8;
  Chord Afm4_8;
  Chord Am4_8;
  Chord Asm4_8;
  Chord Bfm4_8;
  Chord Bm4_8;

  Chord Cm5_8;
  Chord Csm5_8;
  Chord Dm5_8;
  Chord Dsm5_8;
  Chord Efm5_8;
  Chord Em5_8;
  Chord _Fm5_8;
  Chord Fsm5_8;
  Chord Gfm5_8;
  Chord Gm5_8;
  Chord Gsm5_8;
  Chord Afm5_8;
  Chord Am5_8;
  Chord Asm5_8;
  Chord Bfm5_8;
  Chord Bm5_8;

  Chord Cm6_8;
  Chord Csm6_8;
  Chord Dm6_8;
  Chord Dsm6_8;
  Chord Efm6_8;
  Chord Em6_8;
  Chord _Fm6_8;
  Chord Fsm6_8;
  Chord Gfm6_8;
  Chord Gm6_8;
  Chord Gsm6_8;
  Chord Afm6_8;
  Chord Am6_8;
  Chord Asm6_8;
  Chord Bfm6_8;
  Chord Bm6_8;

  Chord Cm7_8;
  Chord Csm7_8;
  Chord Dm7_8;
  Chord Dsm7_8;
  Chord Efm7_8;
  Chord Em7_8;
  Chord _Fm7_8;
  Chord Fsm7_8;
  Chord Gfm7_8;
  Chord Gm7_8;
  Chord Gsm7_8;
  Chord Afm7_8;
  Chord Am7_8;
  Chord Asm7_8;
  Chord Bfm7_8;
  Chord Bm7_8;

  Chord Cm8_8;
  Chord Csm8_8;
  Chord Dm8_8;
  Chord Dsm8_8;
  Chord Efm8_8;
  Chord Em8_8;
  Chord _Fm8_8;
  Chord Fsm8_8;
  Chord Gfm8_8;
  Chord Gm8_8;
  Chord Gsm8_8;
  Chord Afm8_8;
  Chord Am8_8;
  Chord Asm8_8;
  Chord Bfm8_8;
  Chord Bm8_8;

  // Augmented
  Chord Caug_8;
  Chord Csaug_8;
  Chord Daug_8;
  Chord Dsaug_8;
  Chord Efaug_8;
  Chord Eaug_8;
  Chord _Faug_8;
  Chord Fsaug_8;
  Chord Gfaug_8;
  Chord Gaug_8;
  Chord Gsaug_8;
  Chord Afaug_8;
  Chord Aaug_8;
  Chord Asaug_8;
  Chord Bfaug_8;
  Chord Baug_8;

  Chord Caug0_8;
  Chord Csaug0_8;
  Chord Daug0_8;
  Chord Dsaug0_8;
  Chord Efaug0_8;
  Chord Eaug0_8;
  Chord _Faug0_8;
  Chord Fsaug0_8;
  Chord Gfaug0_8;
  Chord Gaug0_8;
  Chord Gsaug0_8;
  Chord Afaug0_8;
  Chord Aaug0_8;
  Chord Asaug0_8;
  Chord Bfaug0_8;
  Chord Baug0_8;

  Chord Caug1_8;
  Chord Csaug1_8;
  Chord Daug1_8;
  Chord Dsaug1_8;
  Chord Efaug1_8;
  Chord Eaug1_8;
  Chord _Faug1_8;
  Chord Fsaug1_8;
  Chord Gfaug1_8;
  Chord Gaug1_8;
  Chord Gsaug1_8;
  Chord Afaug1_8;
  Chord Aaug1_8;
  Chord Asaug1_8;
  Chord Bfaug1_8;
  Chord Baug1_8;

  Chord Caug2_8;
  Chord Csaug2_8;
  Chord Daug2_8;
  Chord Dsaug2_8;
  Chord Efaug2_8;
  Chord Eaug2_8;
  Chord _Faug2_8;
  Chord Fsaug2_8;
  Chord Gfaug2_8;
  Chord Gaug2_8;
  Chord Gsaug2_8;
  Chord Afaug2_8;
  Chord Aaug2_8;
  Chord Asaug2_8;
  Chord Bfaug2_8;
  Chord Baug2_8;

  Chord Caug3_8;
  Chord Csaug3_8;
  Chord Daug3_8;
  Chord Dsaug3_8;
  Chord Efaug3_8;
  Chord Eaug3_8;
  Chord _Faug3_8;
  Chord Fsaug3_8;
  Chord Gfaug3_8;
  Chord Gaug3_8;
  Chord Gsaug3_8;
  Chord Afaug3_8;
  Chord Aaug3_8;
  Chord Asaug3_8;
  Chord Bfaug3_8;
  Chord Baug3_8;

  Chord Caug4_8;
  Chord Csaug4_8;
  Chord Daug4_8;
  Chord Dsaug4_8;
  Chord Efaug4_8;
  Chord Eaug4_8;
  Chord _Faug4_8;
  Chord Fsaug4_8;
  Chord Gfaug4_8;
  Chord Gaug4_8;
  Chord Gsaug4_8;
  Chord Afaug4_8;
  Chord Aaug4_8;
  Chord Asaug4_8;
  Chord Bfaug4_8;
  Chord Baug4_8;

  Chord Caug5_8;
  Chord Csaug5_8;
  Chord Daug5_8;
  Chord Dsaug5_8;
  Chord Efaug5_8;
  Chord Eaug5_8;
  Chord _Faug5_8;
  Chord Fsaug5_8;
  Chord Gfaug5_8;
  Chord Gaug5_8;
  Chord Gsaug5_8;
  Chord Afaug5_8;
  Chord Aaug5_8;
  Chord Asaug5_8;
  Chord Bfaug5_8;
  Chord Baug5_8;

  Chord Caug6_8;
  Chord Csaug6_8;
  Chord Daug6_8;
  Chord Dsaug6_8;
  Chord Efaug6_8;
  Chord Eaug6_8;
  Chord _Faug6_8;
  Chord Fsaug6_8;
  Chord Gfaug6_8;
  Chord Gaug6_8;
  Chord Gsaug6_8;
  Chord Afaug6_8;
  Chord Aaug6_8;
  Chord Asaug6_8;
  Chord Bfaug6_8;
  Chord Baug6_8;

  Chord Caug7_8;
  Chord Csaug7_8;
  Chord Daug7_8;
  Chord Dsaug7_8;
  Chord Efaug7_8;
  Chord Eaug7_8;
  Chord _Faug7_8;
  Chord Fsaug7_8;
  Chord Gfaug7_8;
  Chord Gaug7_8;
  Chord Gsaug7_8;
  Chord Afaug7_8;
  Chord Aaug7_8;
  Chord Asaug7_8;
  Chord Bfaug7_8;
  Chord Baug7_8;

  Chord Caug8_8;
  Chord Csaug8_8;
  Chord Daug8_8;
  Chord Dsaug8_8;
  Chord Efaug8_8;
  Chord Eaug8_8;
  Chord _Faug8_8;
  Chord Fsaug8_8;
  Chord Gfaug8_8;
  Chord Gaug8_8;
  Chord Gsaug8_8;
  Chord Afaug8_8;
  Chord Aaug8_8;
  Chord Asaug8_8;
  Chord Bfaug8_8;
  Chord Baug8_8;

  // Diminished
  Chord Cdim_8;
  Chord Csdim_8;
  Chord Ddim_8;
  Chord Dsdim_8;
  Chord Efdim_8;
  Chord Edim_8;
  Chord _Fdim_8;
  Chord Fsdim_8;
  Chord Gfdim_8;
  Chord Gdim_8;
  Chord Gsdim_8;
  Chord Afdim_8;
  Chord Adim_8;
  Chord Asdim_8;
  Chord Bfdim_8;
  Chord Bdim_8;

  Chord Cdim0_8;
  Chord Csdim0_8;
  Chord Ddim0_8;
  Chord Dsdim0_8;
  Chord Efdim0_8;
  Chord Edim0_8;
  Chord _Fdim0_8;
  Chord Fsdim0_8;
  Chord Gfdim0_8;
  Chord Gdim0_8;
  Chord Gsdim0_8;
  Chord Afdim0_8;
  Chord Adim0_8;
  Chord Asdim0_8;
  Chord Bfdim0_8;
  Chord Bdim0_8;

  Chord Cdim1_8;
  Chord Csdim1_8;
  Chord Ddim1_8;
  Chord Dsdim1_8;
  Chord Efdim1_8;
  Chord Edim1_8;
  Chord _Fdim1_8;
  Chord Fsdim1_8;
  Chord Gfdim1_8;
  Chord Gdim1_8;
  Chord Gsdim1_8;
  Chord Afdim1_8;
  Chord Adim1_8;
  Chord Asdim1_8;
  Chord Bfdim1_8;
  Chord Bdim1_8;

  Chord Cdim2_8;
  Chord Csdim2_8;
  Chord Ddim2_8;
  Chord Dsdim2_8;
  Chord Efdim2_8;
  Chord Edim2_8;
  Chord _Fdim2_8;
  Chord Fsdim2_8;
  Chord Gfdim2_8;
  Chord Gdim2_8;
  Chord Gsdim2_8;
  Chord Afdim2_8;
  Chord Adim2_8;
  Chord Asdim2_8;
  Chord Bfdim2_8;
  Chord Bdim2_8;

  Chord Cdim3_8;
  Chord Csdim3_8;
  Chord Ddim3_8;
  Chord Dsdim3_8;
  Chord Efdim3_8;
  Chord Edim3_8;
  Chord _Fdim3_8;
  Chord Fsdim3_8;
  Chord Gfdim3_8;
  Chord Gdim3_8;
  Chord Gsdim3_8;
  Chord Afdim3_8;
  Chord Adim3_8;
  Chord Asdim3_8;
  Chord Bfdim3_8;
  Chord Bdim3_8;

  Chord Cdim4_8;
  Chord Csdim4_8;
  Chord Ddim4_8;
  Chord Dsdim4_8;
  Chord Efdim4_8;
  Chord Edim4_8;
  Chord _Fdim4_8;
  Chord Fsdim4_8;
  Chord Gfdim4_8;
  Chord Gdim4_8;
  Chord Gsdim4_8;
  Chord Afdim4_8;
  Chord Adim4_8;
  Chord Asdim4_8;
  Chord Bfdim4_8;
  Chord Bdim4_8;

  Chord Cdim5_8;
  Chord Csdim5_8;
  Chord Ddim5_8;
  Chord Dsdim5_8;
  Chord Efdim5_8;
  Chord Edim5_8;
  Chord _Fdim5_8;
  Chord Fsdim5_8;
  Chord Gfdim5_8;
  Chord Gdim5_8;
  Chord Gsdim5_8;
  Chord Afdim5_8;
  Chord Adim5_8;
  Chord Asdim5_8;
  Chord Bfdim5_8;
  Chord Bdim5_8;

  Chord Cdim6_8;
  Chord Csdim6_8;
  Chord Ddim6_8;
  Chord Dsdim6_8;
  Chord Efdim6_8;
  Chord Edim6_8;
  Chord _Fdim6_8;
  Chord Fsdim6_8;
  Chord Gfdim6_8;
  Chord Gdim6_8;
  Chord Gsdim6_8;
  Chord Afdim6_8;
  Chord Adim6_8;
  Chord Asdim6_8;
  Chord Bfdim6_8;
  Chord Bdim6_8;

  Chord Cdim7_8;
  Chord Csdim7_8;
  Chord Ddim7_8;
  Chord Dsdim7_8;
  Chord Efdim7_8;
  Chord Edim7_8;
  Chord _Fdim7_8;
  Chord Fsdim7_8;
  Chord Gfdim7_8;
  Chord Gdim7_8;
  Chord Gsdim7_8;
  Chord Afdim7_8;
  Chord Adim7_8;
  Chord Asdim7_8;
  Chord Bfdim7_8;
  Chord Bdim7_8;

  Chord Cdim8_8;
  Chord Csdim8_8;
  Chord Ddim8_8;
  Chord Dsdim8_8;
  Chord Efdim8_8;
  Chord Edim8_8;
  Chord _Fdim8_8;
  Chord Fsdim8_8;
  Chord Gfdim8_8;
  Chord Gdim8_8;
  Chord Gsdim8_8;
  Chord Afdim8_8;
  Chord Adim8_8;
  Chord Asdim8_8;
  Chord Bfdim8_8;
  Chord Bdim8_8;

  //
  // SXTNTH
  //

  // Major
  // 0-based offsets
  Chord CM_16;
  Chord CsM_16;
  Chord DM_16;
  Chord DsM_16;
  Chord EfM_16;
  Chord EM_16;
  Chord FM_16;
  Chord FsM_16;
  Chord GfM_16;
  Chord GM_16;
  Chord GsM_16;
  Chord AfM_16;
  Chord AM_16;
  Chord AsM_16;
  Chord BfM_16;
  Chord BM_16;

  // constants predefined per octave
  Chord CM0_16;
  Chord CsM0_16;
  Chord DM0_16;
  Chord DsM0_16;
  Chord EfM0_16;
  Chord EM0_16;
  Chord FM0_16;
  Chord FsM0_16;
  Chord GfM0_16;
  Chord GM0_16;
  Chord GsM0_16;
  Chord AfM0_16;
  Chord AM0_16;
  Chord AsM0_16;
  Chord BfM0_16;
  Chord BM0_16;

  Chord CM1_16;
  Chord CsM1_16;
  Chord DM1_16;
  Chord DsM1_16;
  Chord EfM1_16;
  Chord EM1_16;
  Chord FM1_16;
  Chord FsM1_16;
  Chord GfM1_16;
  Chord GM1_16;
  Chord GsM1_16;
  Chord AfM1_16;
  Chord AM1_16;
  Chord AsM1_16;
  Chord BfM1_16;
  Chord BM1_16;

  Chord CM2_16;
  Chord CsM2_16;
  Chord DM2_16;
  Chord DsM2_16;
  Chord EfM2_16;
  Chord EM2_16;
  Chord FM2_16;
  Chord FsM2_16;
  Chord GfM2_16;
  Chord GM2_16;
  Chord GsM2_16;
  Chord AfM2_16;
  Chord AM2_16;
  Chord AsM2_16;
  Chord BfM2_16;
  Chord BM2_16;

  Chord CM3_16;
  Chord CsM3_16;
  Chord DM3_16;
  Chord DsM3_16;
  Chord EfM3_16;
  Chord EM3_16;
  Chord FM3_16;
  Chord FsM3_16;
  Chord GfM3_16;
  Chord GM3_16;
  Chord GsM3_16;
  Chord AfM3_16;
  Chord AM3_16;
  Chord AsM3_16;
  Chord BfM3_16;
  Chord BM3_16;

  Chord CM4_16;
  Chord CsM4_16;
  Chord DM4_16;
  Chord DsM4_16;
  Chord EfM4_16;
  Chord EM4_16;
  Chord FM4_16;
  Chord FsM4_16;
  Chord GfM4_16;
  Chord GM4_16;
  Chord GsM4_16;
  Chord AfM4_16;
  Chord AM4_16;
  Chord AsM4_16;
  Chord BfM4_16;
  Chord BM4_16;

  Chord CM5_16;
  Chord CsM5_16;
  Chord DM5_16;
  Chord DsM5_16;
  Chord EfM5_16;
  Chord EM5_16;
  Chord FM5_16;
  Chord FsM5_16;
  Chord GfM5_16;
  Chord GM5_16;
  Chord GsM5_16;
  Chord AfM5_16;
  Chord AM5_16;
  Chord AsM5_16;
  Chord BfM5_16;
  Chord BM5_16;

  Chord CM6_16;
  Chord CsM6_16;
  Chord DM6_16;
  Chord DsM6_16;
  Chord EfM6_16;
  Chord EM6_16;
  Chord FM6_16;
  Chord FsM6_16;
  Chord GfM6_16;
  Chord GM6_16;
  Chord GsM6_16;
  Chord AfM6_16;
  Chord AM6_16;
  Chord AsM6_16;
  Chord BfM6_16;
  Chord BM6_16;

  Chord CM7_16;
  Chord CsM7_16;
  Chord DM7_16;
  Chord DsM7_16;
  Chord EfM7_16;
  Chord EM7_16;
  Chord FM7_16;
  Chord FsM7_16;
  Chord GfM7_16;
  Chord GM7_16;
  Chord GsM7_16;
  Chord AfM7_16;
  Chord AM7_16;
  Chord AsM7_16;
  Chord BfM7_16;
  Chord BM7_16;

  Chord CM8_16;
  Chord CsM8_16;
  Chord DM8_16;
  Chord DsM8_16;
  Chord EfM8_16;
  Chord EM8_16;
  Chord FM8_16;
  Chord FsM8_16;
  Chord GfM8_16;
  Chord GM8_16;
  Chord GsM8_16;
  Chord AfM8_16;
  Chord AM8_16;
  Chord AsM8_16;
  Chord BfM8_16;
  Chord BM8_16;

  // Minor
  Chord Cm_16;
  Chord Csm_16;
  Chord Dm_16;
  Chord Dsm_16;
  Chord Efm_16;
  Chord Em_16;
  Chord _Fm_16;
  Chord Fsm_16;
  Chord Gfm_16;
  Chord Gm_16;
  Chord Gsm_16;
  Chord Afm_16;
  Chord Am_16;
  Chord Asm_16;
  Chord Bfm_16;
  Chord Bm_16;

  Chord Cm0_16;
  Chord Csm0_16;
  Chord Dm0_16;
  Chord Dsm0_16;
  Chord Efm0_16;
  Chord Em0_16;
  Chord _Fm0_16;
  Chord Fsm0_16;
  Chord Gfm0_16;
  Chord Gm0_16;
  Chord Gsm0_16;
  Chord Afm0_16;
  Chord Am0_16;
  Chord Asm0_16;
  Chord Bfm0_16;
  Chord Bm0_16;

  Chord Cm1_16;
  Chord Csm1_16;
  Chord Dm1_16;
  Chord Dsm1_16;
  Chord Efm1_16;
  Chord Em1_16;
  Chord _Fm1_16;
  Chord Fsm1_16;
  Chord Gfm1_16;
  Chord Gm1_16;
  Chord Gsm1_16;
  Chord Afm1_16;
  Chord Am1_16;
  Chord Asm1_16;
  Chord Bfm1_16;
  Chord Bm1_16;

  Chord Cm2_16;
  Chord Csm2_16;
  Chord Dm2_16;
  Chord Dsm2_16;
  Chord Efm2_16;
  Chord Em2_16;
  Chord _Fm2_16;
  Chord Fsm2_16;
  Chord Gfm2_16;
  Chord Gm2_16;
  Chord Gsm2_16;
  Chord Afm2_16;
  Chord Am2_16;
  Chord Asm2_16;
  Chord Bfm2_16;
  Chord Bm2_16;

  Chord Cm3_16;
  Chord Csm3_16;
  Chord Dm3_16;
  Chord Dsm3_16;
  Chord Efm3_16;
  Chord Em3_16;
  Chord _Fm3_16;
  Chord Fsm3_16;
  Chord Gfm3_16;
  Chord Gm3_16;
  Chord Gsm3_16;
  Chord Afm3_16;
  Chord Am3_16;
  Chord Asm3_16;
  Chord Bfm3_16;
  Chord Bm3_16;

  Chord Cm4_16;
  Chord Csm4_16;
  Chord Dm4_16;
  Chord Dsm4_16;
  Chord Efm4_16;
  Chord Em4_16;
  Chord _Fm4_16;
  Chord Fsm4_16;
  Chord Gfm4_16;
  Chord Gm4_16;
  Chord Gsm4_16;
  Chord Afm4_16;
  Chord Am4_16;
  Chord Asm4_16;
  Chord Bfm4_16;
  Chord Bm4_16;

  Chord Cm5_16;
  Chord Csm5_16;
  Chord Dm5_16;
  Chord Dsm5_16;
  Chord Efm5_16;
  Chord Em5_16;
  Chord _Fm5_16;
  Chord Fsm5_16;
  Chord Gfm5_16;
  Chord Gm5_16;
  Chord Gsm5_16;
  Chord Afm5_16;
  Chord Am5_16;
  Chord Asm5_16;
  Chord Bfm5_16;
  Chord Bm5_16;

  Chord Cm6_16;
  Chord Csm6_16;
  Chord Dm6_16;
  Chord Dsm6_16;
  Chord Efm6_16;
  Chord Em6_16;
  Chord _Fm6_16;
  Chord Fsm6_16;
  Chord Gfm6_16;
  Chord Gm6_16;
  Chord Gsm6_16;
  Chord Afm6_16;
  Chord Am6_16;
  Chord Asm6_16;
  Chord Bfm6_16;
  Chord Bm6_16;

  Chord Cm7_16;
  Chord Csm7_16;
  Chord Dm7_16;
  Chord Dsm7_16;
  Chord Efm7_16;
  Chord Em7_16;
  Chord _Fm7_16;
  Chord Fsm7_16;
  Chord Gfm7_16;
  Chord Gm7_16;
  Chord Gsm7_16;
  Chord Afm7_16;
  Chord Am7_16;
  Chord Asm7_16;
  Chord Bfm7_16;
  Chord Bm7_16;

  Chord Cm8_16;
  Chord Csm8_16;
  Chord Dm8_16;
  Chord Dsm8_16;
  Chord Efm8_16;
  Chord Em8_16;
  Chord _Fm8_16;
  Chord Fsm8_16;
  Chord Gfm8_16;
  Chord Gm8_16;
  Chord Gsm8_16;
  Chord Afm8_16;
  Chord Am8_16;
  Chord Asm8_16;
  Chord Bfm8_16;
  Chord Bm8_16;

  // Augmented
  Chord Caug_16;
  Chord Csaug_16;
  Chord Daug_16;
  Chord Dsaug_16;
  Chord Efaug_16;
  Chord Eaug_16;
  Chord _Faug_16;
  Chord Fsaug_16;
  Chord Gfaug_16;
  Chord Gaug_16;
  Chord Gsaug_16;
  Chord Afaug_16;
  Chord Aaug_16;
  Chord Asaug_16;
  Chord Bfaug_16;
  Chord Baug_16;

  Chord Caug0_16;
  Chord Csaug0_16;
  Chord Daug0_16;
  Chord Dsaug0_16;
  Chord Efaug0_16;
  Chord Eaug0_16;
  Chord _Faug0_16;
  Chord Fsaug0_16;
  Chord Gfaug0_16;
  Chord Gaug0_16;
  Chord Gsaug0_16;
  Chord Afaug0_16;
  Chord Aaug0_16;
  Chord Asaug0_16;
  Chord Bfaug0_16;
  Chord Baug0_16;

  Chord Caug1_16;
  Chord Csaug1_16;
  Chord Daug1_16;
  Chord Dsaug1_16;
  Chord Efaug1_16;
  Chord Eaug1_16;
  Chord _Faug1_16;
  Chord Fsaug1_16;
  Chord Gfaug1_16;
  Chord Gaug1_16;
  Chord Gsaug1_16;
  Chord Afaug1_16;
  Chord Aaug1_16;
  Chord Asaug1_16;
  Chord Bfaug1_16;
  Chord Baug1_16;

  Chord Caug2_16;
  Chord Csaug2_16;
  Chord Daug2_16;
  Chord Dsaug2_16;
  Chord Efaug2_16;
  Chord Eaug2_16;
  Chord _Faug2_16;
  Chord Fsaug2_16;
  Chord Gfaug2_16;
  Chord Gaug2_16;
  Chord Gsaug2_16;
  Chord Afaug2_16;
  Chord Aaug2_16;
  Chord Asaug2_16;
  Chord Bfaug2_16;
  Chord Baug2_16;

  Chord Caug3_16;
  Chord Csaug3_16;
  Chord Daug3_16;
  Chord Dsaug3_16;
  Chord Efaug3_16;
  Chord Eaug3_16;
  Chord _Faug3_16;
  Chord Fsaug3_16;
  Chord Gfaug3_16;
  Chord Gaug3_16;
  Chord Gsaug3_16;
  Chord Afaug3_16;
  Chord Aaug3_16;
  Chord Asaug3_16;
  Chord Bfaug3_16;
  Chord Baug3_16;

  Chord Caug4_16;
  Chord Csaug4_16;
  Chord Daug4_16;
  Chord Dsaug4_16;
  Chord Efaug4_16;
  Chord Eaug4_16;
  Chord _Faug4_16;
  Chord Fsaug4_16;
  Chord Gfaug4_16;
  Chord Gaug4_16;
  Chord Gsaug4_16;
  Chord Afaug4_16;
  Chord Aaug4_16;
  Chord Asaug4_16;
  Chord Bfaug4_16;
  Chord Baug4_16;

  Chord Caug5_16;
  Chord Csaug5_16;
  Chord Daug5_16;
  Chord Dsaug5_16;
  Chord Efaug5_16;
  Chord Eaug5_16;
  Chord _Faug5_16;
  Chord Fsaug5_16;
  Chord Gfaug5_16;
  Chord Gaug5_16;
  Chord Gsaug5_16;
  Chord Afaug5_16;
  Chord Aaug5_16;
  Chord Asaug5_16;
  Chord Bfaug5_16;
  Chord Baug5_16;

  Chord Caug6_16;
  Chord Csaug6_16;
  Chord Daug6_16;
  Chord Dsaug6_16;
  Chord Efaug6_16;
  Chord Eaug6_16;
  Chord _Faug6_16;
  Chord Fsaug6_16;
  Chord Gfaug6_16;
  Chord Gaug6_16;
  Chord Gsaug6_16;
  Chord Afaug6_16;
  Chord Aaug6_16;
  Chord Asaug6_16;
  Chord Bfaug6_16;
  Chord Baug6_16;

  Chord Caug7_16;
  Chord Csaug7_16;
  Chord Daug7_16;
  Chord Dsaug7_16;
  Chord Efaug7_16;
  Chord Eaug7_16;
  Chord _Faug7_16;
  Chord Fsaug7_16;
  Chord Gfaug7_16;
  Chord Gaug7_16;
  Chord Gsaug7_16;
  Chord Afaug7_16;
  Chord Aaug7_16;
  Chord Asaug7_16;
  Chord Bfaug7_16;
  Chord Baug7_16;

  Chord Caug8_16;
  Chord Csaug8_16;
  Chord Daug8_16;
  Chord Dsaug8_16;
  Chord Efaug8_16;
  Chord Eaug8_16;
  Chord _Faug8_16;
  Chord Fsaug8_16;
  Chord Gfaug8_16;
  Chord Gaug8_16;
  Chord Gsaug8_16;
  Chord Afaug8_16;
  Chord Aaug8_16;
  Chord Asaug8_16;
  Chord Bfaug8_16;
  Chord Baug8_16;

  // Diminished
  Chord Cdim_16;
  Chord Csdim_16;
  Chord Ddim_16;
  Chord Dsdim_16;
  Chord Efdim_16;
  Chord Edim_16;
  Chord _Fdim_16;
  Chord Fsdim_16;
  Chord Gfdim_16;
  Chord Gdim_16;
  Chord Gsdim_16;
  Chord Afdim_16;
  Chord Adim_16;
  Chord Asdim_16;
  Chord Bfdim_16;
  Chord Bdim_16;

  Chord Cdim0_16;
  Chord Csdim0_16;
  Chord Ddim0_16;
  Chord Dsdim0_16;
  Chord Efdim0_16;
  Chord Edim0_16;
  Chord _Fdim0_16;
  Chord Fsdim0_16;
  Chord Gfdim0_16;
  Chord Gdim0_16;
  Chord Gsdim0_16;
  Chord Afdim0_16;
  Chord Adim0_16;
  Chord Asdim0_16;
  Chord Bfdim0_16;
  Chord Bdim0_16;

  Chord Cdim1_16;
  Chord Csdim1_16;
  Chord Ddim1_16;
  Chord Dsdim1_16;
  Chord Efdim1_16;
  Chord Edim1_16;
  Chord _Fdim1_16;
  Chord Fsdim1_16;
  Chord Gfdim1_16;
  Chord Gdim1_16;
  Chord Gsdim1_16;
  Chord Afdim1_16;
  Chord Adim1_16;
  Chord Asdim1_16;
  Chord Bfdim1_16;
  Chord Bdim1_16;

  Chord Cdim2_16;
  Chord Csdim2_16;
  Chord Ddim2_16;
  Chord Dsdim2_16;
  Chord Efdim2_16;
  Chord Edim2_16;
  Chord _Fdim2_16;
  Chord Fsdim2_16;
  Chord Gfdim2_16;
  Chord Gdim2_16;
  Chord Gsdim2_16;
  Chord Afdim2_16;
  Chord Adim2_16;
  Chord Asdim2_16;
  Chord Bfdim2_16;
  Chord Bdim2_16;

  Chord Cdim3_16;
  Chord Csdim3_16;
  Chord Ddim3_16;
  Chord Dsdim3_16;
  Chord Efdim3_16;
  Chord Edim3_16;
  Chord _Fdim3_16;
  Chord Fsdim3_16;
  Chord Gfdim3_16;
  Chord Gdim3_16;
  Chord Gsdim3_16;
  Chord Afdim3_16;
  Chord Adim3_16;
  Chord Asdim3_16;
  Chord Bfdim3_16;
  Chord Bdim3_16;

  Chord Cdim4_16;
  Chord Csdim4_16;
  Chord Ddim4_16;
  Chord Dsdim4_16;
  Chord Efdim4_16;
  Chord Edim4_16;
  Chord _Fdim4_16;
  Chord Fsdim4_16;
  Chord Gfdim4_16;
  Chord Gdim4_16;
  Chord Gsdim4_16;
  Chord Afdim4_16;
  Chord Adim4_16;
  Chord Asdim4_16;
  Chord Bfdim4_16;
  Chord Bdim4_16;

  Chord Cdim5_16;
  Chord Csdim5_16;
  Chord Ddim5_16;
  Chord Dsdim5_16;
  Chord Efdim5_16;
  Chord Edim5_16;
  Chord _Fdim5_16;
  Chord Fsdim5_16;
  Chord Gfdim5_16;
  Chord Gdim5_16;
  Chord Gsdim5_16;
  Chord Afdim5_16;
  Chord Adim5_16;
  Chord Asdim5_16;
  Chord Bfdim5_16;
  Chord Bdim5_16;

  Chord Cdim6_16;
  Chord Csdim6_16;
  Chord Ddim6_16;
  Chord Dsdim6_16;
  Chord Efdim6_16;
  Chord Edim6_16;
  Chord _Fdim6_16;
  Chord Fsdim6_16;
  Chord Gfdim6_16;
  Chord Gdim6_16;
  Chord Gsdim6_16;
  Chord Afdim6_16;
  Chord Adim6_16;
  Chord Asdim6_16;
  Chord Bfdim6_16;
  Chord Bdim6_16;

  Chord Cdim7_16;
  Chord Csdim7_16;
  Chord Ddim7_16;
  Chord Dsdim7_16;
  Chord Efdim7_16;
  Chord Edim7_16;
  Chord _Fdim7_16;
  Chord Fsdim7_16;
  Chord Gfdim7_16;
  Chord Gdim7_16;
  Chord Gsdim7_16;
  Chord Afdim7_16;
  Chord Adim7_16;
  Chord Asdim7_16;
  Chord Bfdim7_16;
  Chord Bdim7_16;

  Chord Cdim8_16;
  Chord Csdim8_16;
  Chord Ddim8_16;
  Chord Dsdim8_16;
  Chord Efdim8_16;
  Chord Edim8_16;
  Chord _Fdim8_16;
  Chord Fsdim8_16;
  Chord Gfdim8_16;
  Chord Gdim8_16;
  Chord Gsdim8_16;
  Chord Afdim8_16;
  Chord Adim8_16;
  Chord Asdim8_16;
  Chord Bfdim8_16;
  Chord Bdim8_16;

  //
  // THRTYSCND
  //

  // Major
  // 0-based offsets
  Chord CM_32;
  Chord CsM_32;
  Chord DM_32;
  Chord DsM_32;
  Chord EfM_32;
  Chord EM_32;
  Chord FM_32;
  Chord FsM_32;
  Chord GfM_32;
  Chord GM_32;
  Chord GsM_32;
  Chord AfM_32;
  Chord AM_32;
  Chord AsM_32;
  Chord BfM_32;
  Chord BM_32;

  // constants predefined per octave
  Chord CM0_32;
  Chord CsM0_32;
  Chord DM0_32;
  Chord DsM0_32;
  Chord EfM0_32;
  Chord EM0_32;
  Chord FM0_32;
  Chord FsM0_32;
  Chord GfM0_32;
  Chord GM0_32;
  Chord GsM0_32;
  Chord AfM0_32;
  Chord AM0_32;
  Chord AsM0_32;
  Chord BfM0_32;
  Chord BM0_32;

  Chord CM1_32;
  Chord CsM1_32;
  Chord DM1_32;
  Chord DsM1_32;
  Chord EfM1_32;
  Chord EM1_32;
  Chord FM1_32;
  Chord FsM1_32;
  Chord GfM1_32;
  Chord GM1_32;
  Chord GsM1_32;
  Chord AfM1_32;
  Chord AM1_32;
  Chord AsM1_32;
  Chord BfM1_32;
  Chord BM1_32;

  Chord CM2_32;
  Chord CsM2_32;
  Chord DM2_32;
  Chord DsM2_32;
  Chord EfM2_32;
  Chord EM2_32;
  Chord FM2_32;
  Chord FsM2_32;
  Chord GfM2_32;
  Chord GM2_32;
  Chord GsM2_32;
  Chord AfM2_32;
  Chord AM2_32;
  Chord AsM2_32;
  Chord BfM2_32;
  Chord BM2_32;

  Chord CM3_32;
  Chord CsM3_32;
  Chord DM3_32;
  Chord DsM3_32;
  Chord EfM3_32;
  Chord EM3_32;
  Chord FM3_32;
  Chord FsM3_32;
  Chord GfM3_32;
  Chord GM3_32;
  Chord GsM3_32;
  Chord AfM3_32;
  Chord AM3_32;
  Chord AsM3_32;
  Chord BfM3_32;
  Chord BM3_32;

  Chord CM4_32;
  Chord CsM4_32;
  Chord DM4_32;
  Chord DsM4_32;
  Chord EfM4_32;
  Chord EM4_32;
  Chord FM4_32;
  Chord FsM4_32;
  Chord GfM4_32;
  Chord GM4_32;
  Chord GsM4_32;
  Chord AfM4_32;
  Chord AM4_32;
  Chord AsM4_32;
  Chord BfM4_32;
  Chord BM4_32;

  Chord CM5_32;
  Chord CsM5_32;
  Chord DM5_32;
  Chord DsM5_32;
  Chord EfM5_32;
  Chord EM5_32;
  Chord FM5_32;
  Chord FsM5_32;
  Chord GfM5_32;
  Chord GM5_32;
  Chord GsM5_32;
  Chord AfM5_32;
  Chord AM5_32;
  Chord AsM5_32;
  Chord BfM5_32;
  Chord BM5_32;

  Chord CM6_32;
  Chord CsM6_32;
  Chord DM6_32;
  Chord DsM6_32;
  Chord EfM6_32;
  Chord EM6_32;
  Chord FM6_32;
  Chord FsM6_32;
  Chord GfM6_32;
  Chord GM6_32;
  Chord GsM6_32;
  Chord AfM6_32;
  Chord AM6_32;
  Chord AsM6_32;
  Chord BfM6_32;
  Chord BM6_32;

  Chord CM7_32;
  Chord CsM7_32;
  Chord DM7_32;
  Chord DsM7_32;
  Chord EfM7_32;
  Chord EM7_32;
  Chord FM7_32;
  Chord FsM7_32;
  Chord GfM7_32;
  Chord GM7_32;
  Chord GsM7_32;
  Chord AfM7_32;
  Chord AM7_32;
  Chord AsM7_32;
  Chord BfM7_32;
  Chord BM7_32;

  Chord CM8_32;
  Chord CsM8_32;
  Chord DM8_32;
  Chord DsM8_32;
  Chord EfM8_32;
  Chord EM8_32;
  Chord FM8_32;
  Chord FsM8_32;
  Chord GfM8_32;
  Chord GM8_32;
  Chord GsM8_32;
  Chord AfM8_32;
  Chord AM8_32;
  Chord AsM8_32;
  Chord BfM8_32;
  Chord BM8_32;

  // Minor
  Chord Cm_32;
  Chord Csm_32;
  Chord Dm_32;
  Chord Dsm_32;
  Chord Efm_32;
  Chord Em_32;
  Chord _Fm_32;
  Chord Fsm_32;
  Chord Gfm_32;
  Chord Gm_32;
  Chord Gsm_32;
  Chord Afm_32;
  Chord Am_32;
  Chord Asm_32;
  Chord Bfm_32;
  Chord Bm_32;

  Chord Cm0_32;
  Chord Csm0_32;
  Chord Dm0_32;
  Chord Dsm0_32;
  Chord Efm0_32;
  Chord Em0_32;
  Chord _Fm0_32;
  Chord Fsm0_32;
  Chord Gfm0_32;
  Chord Gm0_32;
  Chord Gsm0_32;
  Chord Afm0_32;
  Chord Am0_32;
  Chord Asm0_32;
  Chord Bfm0_32;
  Chord Bm0_32;

  Chord Cm1_32;
  Chord Csm1_32;
  Chord Dm1_32;
  Chord Dsm1_32;
  Chord Efm1_32;
  Chord Em1_32;
  Chord _Fm1_32;
  Chord Fsm1_32;
  Chord Gfm1_32;
  Chord Gm1_32;
  Chord Gsm1_32;
  Chord Afm1_32;
  Chord Am1_32;
  Chord Asm1_32;
  Chord Bfm1_32;
  Chord Bm1_32;

  Chord Cm2_32;
  Chord Csm2_32;
  Chord Dm2_32;
  Chord Dsm2_32;
  Chord Efm2_32;
  Chord Em2_32;
  Chord _Fm2_32;
  Chord Fsm2_32;
  Chord Gfm2_32;
  Chord Gm2_32;
  Chord Gsm2_32;
  Chord Afm2_32;
  Chord Am2_32;
  Chord Asm2_32;
  Chord Bfm2_32;
  Chord Bm2_32;

  Chord Cm3_32;
  Chord Csm3_32;
  Chord Dm3_32;
  Chord Dsm3_32;
  Chord Efm3_32;
  Chord Em3_32;
  Chord _Fm3_32;
  Chord Fsm3_32;
  Chord Gfm3_32;
  Chord Gm3_32;
  Chord Gsm3_32;
  Chord Afm3_32;
  Chord Am3_32;
  Chord Asm3_32;
  Chord Bfm3_32;
  Chord Bm3_32;

  Chord Cm4_32;
  Chord Csm4_32;
  Chord Dm4_32;
  Chord Dsm4_32;
  Chord Efm4_32;
  Chord Em4_32;
  Chord _Fm4_32;
  Chord Fsm4_32;
  Chord Gfm4_32;
  Chord Gm4_32;
  Chord Gsm4_32;
  Chord Afm4_32;
  Chord Am4_32;
  Chord Asm4_32;
  Chord Bfm4_32;
  Chord Bm4_32;

  Chord Cm5_32;
  Chord Csm5_32;
  Chord Dm5_32;
  Chord Dsm5_32;
  Chord Efm5_32;
  Chord Em5_32;
  Chord _Fm5_32;
  Chord Fsm5_32;
  Chord Gfm5_32;
  Chord Gm5_32;
  Chord Gsm5_32;
  Chord Afm5_32;
  Chord Am5_32;
  Chord Asm5_32;
  Chord Bfm5_32;
  Chord Bm5_32;

  Chord Cm6_32;
  Chord Csm6_32;
  Chord Dm6_32;
  Chord Dsm6_32;
  Chord Efm6_32;
  Chord Em6_32;
  Chord _Fm6_32;
  Chord Fsm6_32;
  Chord Gfm6_32;
  Chord Gm6_32;
  Chord Gsm6_32;
  Chord Afm6_32;
  Chord Am6_32;
  Chord Asm6_32;
  Chord Bfm6_32;
  Chord Bm6_32;

  Chord Cm7_32;
  Chord Csm7_32;
  Chord Dm7_32;
  Chord Dsm7_32;
  Chord Efm7_32;
  Chord Em7_32;
  Chord _Fm7_32;
  Chord Fsm7_32;
  Chord Gfm7_32;
  Chord Gm7_32;
  Chord Gsm7_32;
  Chord Afm7_32;
  Chord Am7_32;
  Chord Asm7_32;
  Chord Bfm7_32;
  Chord Bm7_32;

  Chord Cm8_32;
  Chord Csm8_32;
  Chord Dm8_32;
  Chord Dsm8_32;
  Chord Efm8_32;
  Chord Em8_32;
  Chord _Fm8_32;
  Chord Fsm8_32;
  Chord Gfm8_32;
  Chord Gm8_32;
  Chord Gsm8_32;
  Chord Afm8_32;
  Chord Am8_32;
  Chord Asm8_32;
  Chord Bfm8_32;
  Chord Bm8_32;

  // Augmented
  Chord Caug_32;
  Chord Csaug_32;
  Chord Daug_32;
  Chord Dsaug_32;
  Chord Efaug_32;
  Chord Eaug_32;
  Chord _Faug_32;
  Chord Fsaug_32;
  Chord Gfaug_32;
  Chord Gaug_32;
  Chord Gsaug_32;
  Chord Afaug_32;
  Chord Aaug_32;
  Chord Asaug_32;
  Chord Bfaug_32;
  Chord Baug_32;

  Chord Caug0_32;
  Chord Csaug0_32;
  Chord Daug0_32;
  Chord Dsaug0_32;
  Chord Efaug0_32;
  Chord Eaug0_32;
  Chord _Faug0_32;
  Chord Fsaug0_32;
  Chord Gfaug0_32;
  Chord Gaug0_32;
  Chord Gsaug0_32;
  Chord Afaug0_32;
  Chord Aaug0_32;
  Chord Asaug0_32;
  Chord Bfaug0_32;
  Chord Baug0_32;

  Chord Caug1_32;
  Chord Csaug1_32;
  Chord Daug1_32;
  Chord Dsaug1_32;
  Chord Efaug1_32;
  Chord Eaug1_32;
  Chord _Faug1_32;
  Chord Fsaug1_32;
  Chord Gfaug1_32;
  Chord Gaug1_32;
  Chord Gsaug1_32;
  Chord Afaug1_32;
  Chord Aaug1_32;
  Chord Asaug1_32;
  Chord Bfaug1_32;
  Chord Baug1_32;

  Chord Caug2_32;
  Chord Csaug2_32;
  Chord Daug2_32;
  Chord Dsaug2_32;
  Chord Efaug2_32;
  Chord Eaug2_32;
  Chord _Faug2_32;
  Chord Fsaug2_32;
  Chord Gfaug2_32;
  Chord Gaug2_32;
  Chord Gsaug2_32;
  Chord Afaug2_32;
  Chord Aaug2_32;
  Chord Asaug2_32;
  Chord Bfaug2_32;
  Chord Baug2_32;

  Chord Caug3_32;
  Chord Csaug3_32;
  Chord Daug3_32;
  Chord Dsaug3_32;
  Chord Efaug3_32;
  Chord Eaug3_32;
  Chord _Faug3_32;
  Chord Fsaug3_32;
  Chord Gfaug3_32;
  Chord Gaug3_32;
  Chord Gsaug3_32;
  Chord Afaug3_32;
  Chord Aaug3_32;
  Chord Asaug3_32;
  Chord Bfaug3_32;
  Chord Baug3_32;

  Chord Caug4_32;
  Chord Csaug4_32;
  Chord Daug4_32;
  Chord Dsaug4_32;
  Chord Efaug4_32;
  Chord Eaug4_32;
  Chord _Faug4_32;
  Chord Fsaug4_32;
  Chord Gfaug4_32;
  Chord Gaug4_32;
  Chord Gsaug4_32;
  Chord Afaug4_32;
  Chord Aaug4_32;
  Chord Asaug4_32;
  Chord Bfaug4_32;
  Chord Baug4_32;

  Chord Caug5_32;
  Chord Csaug5_32;
  Chord Daug5_32;
  Chord Dsaug5_32;
  Chord Efaug5_32;
  Chord Eaug5_32;
  Chord _Faug5_32;
  Chord Fsaug5_32;
  Chord Gfaug5_32;
  Chord Gaug5_32;
  Chord Gsaug5_32;
  Chord Afaug5_32;
  Chord Aaug5_32;
  Chord Asaug5_32;
  Chord Bfaug5_32;
  Chord Baug5_32;

  Chord Caug6_32;
  Chord Csaug6_32;
  Chord Daug6_32;
  Chord Dsaug6_32;
  Chord Efaug6_32;
  Chord Eaug6_32;
  Chord _Faug6_32;
  Chord Fsaug6_32;
  Chord Gfaug6_32;
  Chord Gaug6_32;
  Chord Gsaug6_32;
  Chord Afaug6_32;
  Chord Aaug6_32;
  Chord Asaug6_32;
  Chord Bfaug6_32;
  Chord Baug6_32;

  Chord Caug7_32;
  Chord Csaug7_32;
  Chord Daug7_32;
  Chord Dsaug7_32;
  Chord Efaug7_32;
  Chord Eaug7_32;
  Chord _Faug7_32;
  Chord Fsaug7_32;
  Chord Gfaug7_32;
  Chord Gaug7_32;
  Chord Gsaug7_32;
  Chord Afaug7_32;
  Chord Aaug7_32;
  Chord Asaug7_32;
  Chord Bfaug7_32;
  Chord Baug7_32;

  Chord Caug8_32;
  Chord Csaug8_32;
  Chord Daug8_32;
  Chord Dsaug8_32;
  Chord Efaug8_32;
  Chord Eaug8_32;
  Chord _Faug8_32;
  Chord Fsaug8_32;
  Chord Gfaug8_32;
  Chord Gaug8_32;
  Chord Gsaug8_32;
  Chord Afaug8_32;
  Chord Aaug8_32;
  Chord Asaug8_32;
  Chord Bfaug8_32;
  Chord Baug8_32;

  // Diminished
  Chord Cdim_32;
  Chord Csdim_32;
  Chord Ddim_32;
  Chord Dsdim_32;
  Chord Efdim_32;
  Chord Edim_32;
  Chord _Fdim_32;
  Chord Fsdim_32;
  Chord Gfdim_32;
  Chord Gdim_32;
  Chord Gsdim_32;
  Chord Afdim_32;
  Chord Adim_32;
  Chord Asdim_32;
  Chord Bfdim_32;
  Chord Bdim_32;

  Chord Cdim0_32;
  Chord Csdim0_32;
  Chord Ddim0_32;
  Chord Dsdim0_32;
  Chord Efdim0_32;
  Chord Edim0_32;
  Chord _Fdim0_32;
  Chord Fsdim0_32;
  Chord Gfdim0_32;
  Chord Gdim0_32;
  Chord Gsdim0_32;
  Chord Afdim0_32;
  Chord Adim0_32;
  Chord Asdim0_32;
  Chord Bfdim0_32;
  Chord Bdim0_32;

  Chord Cdim1_32;
  Chord Csdim1_32;
  Chord Ddim1_32;
  Chord Dsdim1_32;
  Chord Efdim1_32;
  Chord Edim1_32;
  Chord _Fdim1_32;
  Chord Fsdim1_32;
  Chord Gfdim1_32;
  Chord Gdim1_32;
  Chord Gsdim1_32;
  Chord Afdim1_32;
  Chord Adim1_32;
  Chord Asdim1_32;
  Chord Bfdim1_32;
  Chord Bdim1_32;

  Chord Cdim2_32;
  Chord Csdim2_32;
  Chord Ddim2_32;
  Chord Dsdim2_32;
  Chord Efdim2_32;
  Chord Edim2_32;
  Chord _Fdim2_32;
  Chord Fsdim2_32;
  Chord Gfdim2_32;
  Chord Gdim2_32;
  Chord Gsdim2_32;
  Chord Afdim2_32;
  Chord Adim2_32;
  Chord Asdim2_32;
  Chord Bfdim2_32;
  Chord Bdim2_32;

  Chord Cdim3_32;
  Chord Csdim3_32;
  Chord Ddim3_32;
  Chord Dsdim3_32;
  Chord Efdim3_32;
  Chord Edim3_32;
  Chord _Fdim3_32;
  Chord Fsdim3_32;
  Chord Gfdim3_32;
  Chord Gdim3_32;
  Chord Gsdim3_32;
  Chord Afdim3_32;
  Chord Adim3_32;
  Chord Asdim3_32;
  Chord Bfdim3_32;
  Chord Bdim3_32;

  Chord Cdim4_32;
  Chord Csdim4_32;
  Chord Ddim4_32;
  Chord Dsdim4_32;
  Chord Efdim4_32;
  Chord Edim4_32;
  Chord _Fdim4_32;
  Chord Fsdim4_32;
  Chord Gfdim4_32;
  Chord Gdim4_32;
  Chord Gsdim4_32;
  Chord Afdim4_32;
  Chord Adim4_32;
  Chord Asdim4_32;
  Chord Bfdim4_32;
  Chord Bdim4_32;

  Chord Cdim5_32;
  Chord Csdim5_32;
  Chord Ddim5_32;
  Chord Dsdim5_32;
  Chord Efdim5_32;
  Chord Edim5_32;
  Chord _Fdim5_32;
  Chord Fsdim5_32;
  Chord Gfdim5_32;
  Chord Gdim5_32;
  Chord Gsdim5_32;
  Chord Afdim5_32;
  Chord Adim5_32;
  Chord Asdim5_32;
  Chord Bfdim5_32;
  Chord Bdim5_32;

  Chord Cdim6_32;
  Chord Csdim6_32;
  Chord Ddim6_32;
  Chord Dsdim6_32;
  Chord Efdim6_32;
  Chord Edim6_32;
  Chord _Fdim6_32;
  Chord Fsdim6_32;
  Chord Gfdim6_32;
  Chord Gdim6_32;
  Chord Gsdim6_32;
  Chord Afdim6_32;
  Chord Adim6_32;
  Chord Asdim6_32;
  Chord Bfdim6_32;
  Chord Bdim6_32;

  Chord Cdim7_32;
  Chord Csdim7_32;
  Chord Ddim7_32;
  Chord Dsdim7_32;
  Chord Efdim7_32;
  Chord Edim7_32;
  Chord _Fdim7_32;
  Chord Fsdim7_32;
  Chord Gfdim7_32;
  Chord Gdim7_32;
  Chord Gsdim7_32;
  Chord Afdim7_32;
  Chord Adim7_32;
  Chord Asdim7_32;
  Chord Bfdim7_32;
  Chord Bdim7_32;

  Chord Cdim8_32;
  Chord Csdim8_32;
  Chord Ddim8_32;
  Chord Dsdim8_32;
  Chord Efdim8_32;
  Chord Edim8_32;
  Chord _Fdim8_32;
  Chord Fsdim8_32;
  Chord Gfdim8_32;
  Chord Gdim8_32;
  Chord Gsdim8_32;
  Chord Afdim8_32;
  Chord Adim8_32;
  Chord Asdim8_32;
  Chord Bfdim8_32;
  Chord Bdim8_32;

  //
  // SXTYFRTH
  //

  // Major
  // 0-based offsets
  Chord CM_64;
  Chord CsM_64;
  Chord DM_64;
  Chord DsM_64;
  Chord EfM_64;
  Chord EM_64;
  Chord FM_64;
  Chord FsM_64;
  Chord GfM_64;
  Chord GM_64;
  Chord GsM_64;
  Chord AfM_64;
  Chord AM_64;
  Chord AsM_64;
  Chord BfM_64;
  Chord BM_64;

  // constants predefined per octave
  Chord CM0_64;
  Chord CsM0_64;
  Chord DM0_64;
  Chord DsM0_64;
  Chord EfM0_64;
  Chord EM0_64;
  Chord FM0_64;
  Chord FsM0_64;
  Chord GfM0_64;
  Chord GM0_64;
  Chord GsM0_64;
  Chord AfM0_64;
  Chord AM0_64;
  Chord AsM0_64;
  Chord BfM0_64;
  Chord BM0_64;

  Chord CM1_64;
  Chord CsM1_64;
  Chord DM1_64;
  Chord DsM1_64;
  Chord EfM1_64;
  Chord EM1_64;
  Chord FM1_64;
  Chord FsM1_64;
  Chord GfM1_64;
  Chord GM1_64;
  Chord GsM1_64;
  Chord AfM1_64;
  Chord AM1_64;
  Chord AsM1_64;
  Chord BfM1_64;
  Chord BM1_64;

  Chord CM2_64;
  Chord CsM2_64;
  Chord DM2_64;
  Chord DsM2_64;
  Chord EfM2_64;
  Chord EM2_64;
  Chord FM2_64;
  Chord FsM2_64;
  Chord GfM2_64;
  Chord GM2_64;
  Chord GsM2_64;
  Chord AfM2_64;
  Chord AM2_64;
  Chord AsM2_64;
  Chord BfM2_64;
  Chord BM2_64;

  Chord CM3_64;
  Chord CsM3_64;
  Chord DM3_64;
  Chord DsM3_64;
  Chord EfM3_64;
  Chord EM3_64;
  Chord FM3_64;
  Chord FsM3_64;
  Chord GfM3_64;
  Chord GM3_64;
  Chord GsM3_64;
  Chord AfM3_64;
  Chord AM3_64;
  Chord AsM3_64;
  Chord BfM3_64;
  Chord BM3_64;

  Chord CM4_64;
  Chord CsM4_64;
  Chord DM4_64;
  Chord DsM4_64;
  Chord EfM4_64;
  Chord EM4_64;
  Chord FM4_64;
  Chord FsM4_64;
  Chord GfM4_64;
  Chord GM4_64;
  Chord GsM4_64;
  Chord AfM4_64;
  Chord AM4_64;
  Chord AsM4_64;
  Chord BfM4_64;
  Chord BM4_64;

  Chord CM5_64;
  Chord CsM5_64;
  Chord DM5_64;
  Chord DsM5_64;
  Chord EfM5_64;
  Chord EM5_64;
  Chord FM5_64;
  Chord FsM5_64;
  Chord GfM5_64;
  Chord GM5_64;
  Chord GsM5_64;
  Chord AfM5_64;
  Chord AM5_64;
  Chord AsM5_64;
  Chord BfM5_64;
  Chord BM5_64;

  Chord CM6_64;
  Chord CsM6_64;
  Chord DM6_64;
  Chord DsM6_64;
  Chord EfM6_64;
  Chord EM6_64;
  Chord FM6_64;
  Chord FsM6_64;
  Chord GfM6_64;
  Chord GM6_64;
  Chord GsM6_64;
  Chord AfM6_64;
  Chord AM6_64;
  Chord AsM6_64;
  Chord BfM6_64;
  Chord BM6_64;

  Chord CM7_64;
  Chord CsM7_64;
  Chord DM7_64;
  Chord DsM7_64;
  Chord EfM7_64;
  Chord EM7_64;
  Chord FM7_64;
  Chord FsM7_64;
  Chord GfM7_64;
  Chord GM7_64;
  Chord GsM7_64;
  Chord AfM7_64;
  Chord AM7_64;
  Chord AsM7_64;
  Chord BfM7_64;
  Chord BM7_64;

  Chord CM8_64;
  Chord CsM8_64;
  Chord DM8_64;
  Chord DsM8_64;
  Chord EfM8_64;
  Chord EM8_64;
  Chord FM8_64;
  Chord FsM8_64;
  Chord GfM8_64;
  Chord GM8_64;
  Chord GsM8_64;
  Chord AfM8_64;
  Chord AM8_64;
  Chord AsM8_64;
  Chord BfM8_64;
  Chord BM8_64;

  // Minor
  Chord Cm_64;
  Chord Csm_64;
  Chord Dm_64;
  Chord Dsm_64;
  Chord Efm_64;
  Chord Em_64;
  Chord _Fm_64;
  Chord Fsm_64;
  Chord Gfm_64;
  Chord Gm_64;
  Chord Gsm_64;
  Chord Afm_64;
  Chord Am_64;
  Chord Asm_64;
  Chord Bfm_64;
  Chord Bm_64;

  Chord Cm0_64;
  Chord Csm0_64;
  Chord Dm0_64;
  Chord Dsm0_64;
  Chord Efm0_64;
  Chord Em0_64;
  Chord _Fm0_64;
  Chord Fsm0_64;
  Chord Gfm0_64;
  Chord Gm0_64;
  Chord Gsm0_64;
  Chord Afm0_64;
  Chord Am0_64;
  Chord Asm0_64;
  Chord Bfm0_64;
  Chord Bm0_64;

  Chord Cm1_64;
  Chord Csm1_64;
  Chord Dm1_64;
  Chord Dsm1_64;
  Chord Efm1_64;
  Chord Em1_64;
  Chord _Fm1_64;
  Chord Fsm1_64;
  Chord Gfm1_64;
  Chord Gm1_64;
  Chord Gsm1_64;
  Chord Afm1_64;
  Chord Am1_64;
  Chord Asm1_64;
  Chord Bfm1_64;
  Chord Bm1_64;

  Chord Cm2_64;
  Chord Csm2_64;
  Chord Dm2_64;
  Chord Dsm2_64;
  Chord Efm2_64;
  Chord Em2_64;
  Chord _Fm2_64;
  Chord Fsm2_64;
  Chord Gfm2_64;
  Chord Gm2_64;
  Chord Gsm2_64;
  Chord Afm2_64;
  Chord Am2_64;
  Chord Asm2_64;
  Chord Bfm2_64;
  Chord Bm2_64;

  Chord Cm3_64;
  Chord Csm3_64;
  Chord Dm3_64;
  Chord Dsm3_64;
  Chord Efm3_64;
  Chord Em3_64;
  Chord _Fm3_64;
  Chord Fsm3_64;
  Chord Gfm3_64;
  Chord Gm3_64;
  Chord Gsm3_64;
  Chord Afm3_64;
  Chord Am3_64;
  Chord Asm3_64;
  Chord Bfm3_64;
  Chord Bm3_64;

  Chord Cm4_64;
  Chord Csm4_64;
  Chord Dm4_64;
  Chord Dsm4_64;
  Chord Efm4_64;
  Chord Em4_64;
  Chord _Fm4_64;
  Chord Fsm4_64;
  Chord Gfm4_64;
  Chord Gm4_64;
  Chord Gsm4_64;
  Chord Afm4_64;
  Chord Am4_64;
  Chord Asm4_64;
  Chord Bfm4_64;
  Chord Bm4_64;

  Chord Cm5_64;
  Chord Csm5_64;
  Chord Dm5_64;
  Chord Dsm5_64;
  Chord Efm5_64;
  Chord Em5_64;
  Chord _Fm5_64;
  Chord Fsm5_64;
  Chord Gfm5_64;
  Chord Gm5_64;
  Chord Gsm5_64;
  Chord Afm5_64;
  Chord Am5_64;
  Chord Asm5_64;
  Chord Bfm5_64;
  Chord Bm5_64;

  Chord Cm6_64;
  Chord Csm6_64;
  Chord Dm6_64;
  Chord Dsm6_64;
  Chord Efm6_64;
  Chord Em6_64;
  Chord _Fm6_64;
  Chord Fsm6_64;
  Chord Gfm6_64;
  Chord Gm6_64;
  Chord Gsm6_64;
  Chord Afm6_64;
  Chord Am6_64;
  Chord Asm6_64;
  Chord Bfm6_64;
  Chord Bm6_64;

  Chord Cm7_64;
  Chord Csm7_64;
  Chord Dm7_64;
  Chord Dsm7_64;
  Chord Efm7_64;
  Chord Em7_64;
  Chord _Fm7_64;
  Chord Fsm7_64;
  Chord Gfm7_64;
  Chord Gm7_64;
  Chord Gsm7_64;
  Chord Afm7_64;
  Chord Am7_64;
  Chord Asm7_64;
  Chord Bfm7_64;
  Chord Bm7_64;

  Chord Cm8_64;
  Chord Csm8_64;
  Chord Dm8_64;
  Chord Dsm8_64;
  Chord Efm8_64;
  Chord Em8_64;
  Chord _Fm8_64;
  Chord Fsm8_64;
  Chord Gfm8_64;
  Chord Gm8_64;
  Chord Gsm8_64;
  Chord Afm8_64;
  Chord Am8_64;
  Chord Asm8_64;
  Chord Bfm8_64;
  Chord Bm8_64;

  // Augmented
  Chord Caug_64;
  Chord Csaug_64;
  Chord Daug_64;
  Chord Dsaug_64;
  Chord Efaug_64;
  Chord Eaug_64;
  Chord _Faug_64;
  Chord Fsaug_64;
  Chord Gfaug_64;
  Chord Gaug_64;
  Chord Gsaug_64;
  Chord Afaug_64;
  Chord Aaug_64;
  Chord Asaug_64;
  Chord Bfaug_64;
  Chord Baug_64;

  Chord Caug0_64;
  Chord Csaug0_64;
  Chord Daug0_64;
  Chord Dsaug0_64;
  Chord Efaug0_64;
  Chord Eaug0_64;
  Chord _Faug0_64;
  Chord Fsaug0_64;
  Chord Gfaug0_64;
  Chord Gaug0_64;
  Chord Gsaug0_64;
  Chord Afaug0_64;
  Chord Aaug0_64;
  Chord Asaug0_64;
  Chord Bfaug0_64;
  Chord Baug0_64;

  Chord Caug1_64;
  Chord Csaug1_64;
  Chord Daug1_64;
  Chord Dsaug1_64;
  Chord Efaug1_64;
  Chord Eaug1_64;
  Chord _Faug1_64;
  Chord Fsaug1_64;
  Chord Gfaug1_64;
  Chord Gaug1_64;
  Chord Gsaug1_64;
  Chord Afaug1_64;
  Chord Aaug1_64;
  Chord Asaug1_64;
  Chord Bfaug1_64;
  Chord Baug1_64;

  Chord Caug2_64;
  Chord Csaug2_64;
  Chord Daug2_64;
  Chord Dsaug2_64;
  Chord Efaug2_64;
  Chord Eaug2_64;
  Chord _Faug2_64;
  Chord Fsaug2_64;
  Chord Gfaug2_64;
  Chord Gaug2_64;
  Chord Gsaug2_64;
  Chord Afaug2_64;
  Chord Aaug2_64;
  Chord Asaug2_64;
  Chord Bfaug2_64;
  Chord Baug2_64;

  Chord Caug3_64;
  Chord Csaug3_64;
  Chord Daug3_64;
  Chord Dsaug3_64;
  Chord Efaug3_64;
  Chord Eaug3_64;
  Chord _Faug3_64;
  Chord Fsaug3_64;
  Chord Gfaug3_64;
  Chord Gaug3_64;
  Chord Gsaug3_64;
  Chord Afaug3_64;
  Chord Aaug3_64;
  Chord Asaug3_64;
  Chord Bfaug3_64;
  Chord Baug3_64;

  Chord Caug4_64;
  Chord Csaug4_64;
  Chord Daug4_64;
  Chord Dsaug4_64;
  Chord Efaug4_64;
  Chord Eaug4_64;
  Chord _Faug4_64;
  Chord Fsaug4_64;
  Chord Gfaug4_64;
  Chord Gaug4_64;
  Chord Gsaug4_64;
  Chord Afaug4_64;
  Chord Aaug4_64;
  Chord Asaug4_64;
  Chord Bfaug4_64;
  Chord Baug4_64;

  Chord Caug5_64;
  Chord Csaug5_64;
  Chord Daug5_64;
  Chord Dsaug5_64;
  Chord Efaug5_64;
  Chord Eaug5_64;
  Chord _Faug5_64;
  Chord Fsaug5_64;
  Chord Gfaug5_64;
  Chord Gaug5_64;
  Chord Gsaug5_64;
  Chord Afaug5_64;
  Chord Aaug5_64;
  Chord Asaug5_64;
  Chord Bfaug5_64;
  Chord Baug5_64;

  Chord Caug6_64;
  Chord Csaug6_64;
  Chord Daug6_64;
  Chord Dsaug6_64;
  Chord Efaug6_64;
  Chord Eaug6_64;
  Chord _Faug6_64;
  Chord Fsaug6_64;
  Chord Gfaug6_64;
  Chord Gaug6_64;
  Chord Gsaug6_64;
  Chord Afaug6_64;
  Chord Aaug6_64;
  Chord Asaug6_64;
  Chord Bfaug6_64;
  Chord Baug6_64;

  Chord Caug7_64;
  Chord Csaug7_64;
  Chord Daug7_64;
  Chord Dsaug7_64;
  Chord Efaug7_64;
  Chord Eaug7_64;
  Chord _Faug7_64;
  Chord Fsaug7_64;
  Chord Gfaug7_64;
  Chord Gaug7_64;
  Chord Gsaug7_64;
  Chord Afaug7_64;
  Chord Aaug7_64;
  Chord Asaug7_64;
  Chord Bfaug7_64;
  Chord Baug7_64;

  Chord Caug8_64;
  Chord Csaug8_64;
  Chord Daug8_64;
  Chord Dsaug8_64;
  Chord Efaug8_64;
  Chord Eaug8_64;
  Chord _Faug8_64;
  Chord Fsaug8_64;
  Chord Gfaug8_64;
  Chord Gaug8_64;
  Chord Gsaug8_64;
  Chord Afaug8_64;
  Chord Aaug8_64;
  Chord Asaug8_64;
  Chord Bfaug8_64;
  Chord Baug8_64;

  // Diminished
  Chord Cdim_64;
  Chord Csdim_64;
  Chord Ddim_64;
  Chord Dsdim_64;
  Chord Efdim_64;
  Chord Edim_64;
  Chord _Fdim_64;
  Chord Fsdim_64;
  Chord Gfdim_64;
  Chord Gdim_64;
  Chord Gsdim_64;
  Chord Afdim_64;
  Chord Adim_64;
  Chord Asdim_64;
  Chord Bfdim_64;
  Chord Bdim_64;

  Chord Cdim0_64;
  Chord Csdim0_64;
  Chord Ddim0_64;
  Chord Dsdim0_64;
  Chord Efdim0_64;
  Chord Edim0_64;
  Chord _Fdim0_64;
  Chord Fsdim0_64;
  Chord Gfdim0_64;
  Chord Gdim0_64;
  Chord Gsdim0_64;
  Chord Afdim0_64;
  Chord Adim0_64;
  Chord Asdim0_64;
  Chord Bfdim0_64;
  Chord Bdim0_64;

  Chord Cdim1_64;
  Chord Csdim1_64;
  Chord Ddim1_64;
  Chord Dsdim1_64;
  Chord Efdim1_64;
  Chord Edim1_64;
  Chord _Fdim1_64;
  Chord Fsdim1_64;
  Chord Gfdim1_64;
  Chord Gdim1_64;
  Chord Gsdim1_64;
  Chord Afdim1_64;
  Chord Adim1_64;
  Chord Asdim1_64;
  Chord Bfdim1_64;
  Chord Bdim1_64;

  Chord Cdim2_64;
  Chord Csdim2_64;
  Chord Ddim2_64;
  Chord Dsdim2_64;
  Chord Efdim2_64;
  Chord Edim2_64;
  Chord _Fdim2_64;
  Chord Fsdim2_64;
  Chord Gfdim2_64;
  Chord Gdim2_64;
  Chord Gsdim2_64;
  Chord Afdim2_64;
  Chord Adim2_64;
  Chord Asdim2_64;
  Chord Bfdim2_64;
  Chord Bdim2_64;

  Chord Cdim3_64;
  Chord Csdim3_64;
  Chord Ddim3_64;
  Chord Dsdim3_64;
  Chord Efdim3_64;
  Chord Edim3_64;
  Chord _Fdim3_64;
  Chord Fsdim3_64;
  Chord Gfdim3_64;
  Chord Gdim3_64;
  Chord Gsdim3_64;
  Chord Afdim3_64;
  Chord Adim3_64;
  Chord Asdim3_64;
  Chord Bfdim3_64;
  Chord Bdim3_64;

  Chord Cdim4_64;
  Chord Csdim4_64;
  Chord Ddim4_64;
  Chord Dsdim4_64;
  Chord Efdim4_64;
  Chord Edim4_64;
  Chord _Fdim4_64;
  Chord Fsdim4_64;
  Chord Gfdim4_64;
  Chord Gdim4_64;
  Chord Gsdim4_64;
  Chord Afdim4_64;
  Chord Adim4_64;
  Chord Asdim4_64;
  Chord Bfdim4_64;
  Chord Bdim4_64;

  Chord Cdim5_64;
  Chord Csdim5_64;
  Chord Ddim5_64;
  Chord Dsdim5_64;
  Chord Efdim5_64;
  Chord Edim5_64;
  Chord _Fdim5_64;
  Chord Fsdim5_64;
  Chord Gfdim5_64;
  Chord Gdim5_64;
  Chord Gsdim5_64;
  Chord Afdim5_64;
  Chord Adim5_64;
  Chord Asdim5_64;
  Chord Bfdim5_64;
  Chord Bdim5_64;

  Chord Cdim6_64;
  Chord Csdim6_64;
  Chord Ddim6_64;
  Chord Dsdim6_64;
  Chord Efdim6_64;
  Chord Edim6_64;
  Chord _Fdim6_64;
  Chord Fsdim6_64;
  Chord Gfdim6_64;
  Chord Gdim6_64;
  Chord Gsdim6_64;
  Chord Afdim6_64;
  Chord Adim6_64;
  Chord Asdim6_64;
  Chord Bfdim6_64;
  Chord Bdim6_64;

  Chord Cdim7_64;
  Chord Csdim7_64;
  Chord Ddim7_64;
  Chord Dsdim7_64;
  Chord Efdim7_64;
  Chord Edim7_64;
  Chord _Fdim7_64;
  Chord Fsdim7_64;
  Chord Gfdim7_64;
  Chord Gdim7_64;
  Chord Gsdim7_64;
  Chord Afdim7_64;
  Chord Adim7_64;
  Chord Asdim7_64;
  Chord Bfdim7_64;
  Chord Bdim7_64;

  Chord Cdim8_64;
  Chord Csdim8_64;
  Chord Ddim8_64;
  Chord Dsdim8_64;
  Chord Efdim8_64;
  Chord Edim8_64;
  Chord _Fdim8_64;
  Chord Fsdim8_64;
  Chord Gfdim8_64;
  Chord Gdim8_64;
  Chord Gsdim8_64;
  Chord Afdim8_64;
  Chord Adim8_64;
  Chord Asdim8_64;
  Chord Bfdim8_64;
  Chord Bdim8_64;

  fun void initConsts() {
    // Rest Constants
    0.0 => float NO_GAIN;

    c.make(s.triad(0, n.C, M), NO_GAIN, k.SXTYFRTH) @=> REST_64;
    c.make(s.triad(0, n.C, M), NO_GAIN, k.THRTYSCND) @=> REST_32;
    c.make(s.triad(0, n.C, M), NO_GAIN, k.SXTNTH) @=> REST_16;
    c.make(s.triad(0, n.C, M), NO_GAIN, k.ETH) @=> REST_8;
    c.make(s.triad(0, n.C, M), NO_GAIN, k.QRTR) @=> REST_4;
    c.make(s.triad(0, n.C, M), NO_GAIN, k.HLF) @=> REST_2;
    c.make(s.triad(0, n.C, M), NO_GAIN, k.WHL) @=> REST_1;

    //
    // Constants
    // grouped by duration, chord type, octave

    //
    // WHL
    //

    // Major
    // 0-based offsets
    c.make(s.triad(0, n.C, M), DEFAULT_GAIN, k.WHL) @=> CM_1;
    c.make(s.triad(0, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> CsM_1;
    c.make(s.triad(0, n.D, M), DEFAULT_GAIN, k.WHL) @=> DM_1;
    c.make(s.triad(0, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> DsM_1;
    c.make(s.triad(0, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> EfM_1;
    c.make(s.triad(0, n.E, M), DEFAULT_GAIN, k.WHL) @=> EM_1;
    c.make(s.triad(0, n.F, M), DEFAULT_GAIN, k.WHL) @=> FM_1;
    c.make(s.triad(0, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> FsM_1;
    c.make(s.triad(0, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> GfM_1;
    c.make(s.triad(0, n.G, M), DEFAULT_GAIN, k.WHL) @=> GM_1;
    c.make(s.triad(0, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> GsM_1;
    c.make(s.triad(0, n.Af, M), DEFAULT_GAIN, k.WHL) @=> AfM_1;
    c.make(s.triad(0, n.A, M), DEFAULT_GAIN, k.WHL) @=> AM_1;
    c.make(s.triad(0, n.As, M), DEFAULT_GAIN, k.WHL) @=> AsM_1;
    c.make(s.triad(0, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> BfM_1;
    c.make(s.triad(0, n.B, M), DEFAULT_GAIN, k.WHL) @=> BM_1;

    // constants predefined per octave
    c.make(s.triad(1, n.C, M), DEFAULT_GAIN, k.WHL) @=> CM0_1;
    c.make(s.triad(1, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> CsM0_1;
    c.make(s.triad(1, n.D, M), DEFAULT_GAIN, k.WHL) @=> DM0_1;
    c.make(s.triad(1, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> DsM0_1;
    c.make(s.triad(1, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> EfM0_1;
    c.make(s.triad(1, n.E, M), DEFAULT_GAIN, k.WHL) @=> EM0_1;
    c.make(s.triad(1, n.F, M), DEFAULT_GAIN, k.WHL) @=> FM0_1;
    c.make(s.triad(1, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> FsM0_1;
    c.make(s.triad(1, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> GfM0_1;
    c.make(s.triad(1, n.G, M), DEFAULT_GAIN, k.WHL) @=> GM0_1;
    c.make(s.triad(1, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> GsM0_1;
    c.make(s.triad(1, n.Af, M), DEFAULT_GAIN, k.WHL) @=> AfM0_1;
    c.make(s.triad(1, n.A, M), DEFAULT_GAIN, k.WHL) @=> AM0_1;
    c.make(s.triad(1, n.As, M), DEFAULT_GAIN, k.WHL) @=> AsM0_1;
    c.make(s.triad(1, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> BfM0_1;
    c.make(s.triad(1, n.B, M), DEFAULT_GAIN, k.WHL) @=> BM0_1;

    c.make(s.triad(2, n.C, M), DEFAULT_GAIN, k.WHL) @=> CM1_1;
    c.make(s.triad(2, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> CsM1_1;
    c.make(s.triad(2, n.D, M), DEFAULT_GAIN, k.WHL) @=> DM1_1;
    c.make(s.triad(2, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> DsM1_1;
    c.make(s.triad(2, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> EfM1_1;
    c.make(s.triad(2, n.E, M), DEFAULT_GAIN, k.WHL) @=> EM1_1;
    c.make(s.triad(2, n.F, M), DEFAULT_GAIN, k.WHL) @=> FM1_1;
    c.make(s.triad(2, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> FsM1_1;
    c.make(s.triad(2, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> GfM1_1;
    c.make(s.triad(2, n.G, M), DEFAULT_GAIN, k.WHL) @=> GM1_1;
    c.make(s.triad(2, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> GsM1_1;
    c.make(s.triad(2, n.Af, M), DEFAULT_GAIN, k.WHL) @=> AfM1_1;
    c.make(s.triad(2, n.A, M), DEFAULT_GAIN, k.WHL) @=> AM1_1;
    c.make(s.triad(2, n.As, M), DEFAULT_GAIN, k.WHL) @=> AsM1_1;
    c.make(s.triad(2, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> BfM1_1;
    c.make(s.triad(2, n.B, M), DEFAULT_GAIN, k.WHL) @=> BM1_1;

    c.make(s.triad(3, n.C, M), DEFAULT_GAIN, k.WHL) @=> CM2_1;
    c.make(s.triad(3, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> CsM2_1;
    c.make(s.triad(3, n.D, M), DEFAULT_GAIN, k.WHL) @=> DM2_1;
    c.make(s.triad(3, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> DsM2_1;
    c.make(s.triad(3, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> EfM2_1;
    c.make(s.triad(3, n.E, M), DEFAULT_GAIN, k.WHL) @=> EM2_1;
    c.make(s.triad(3, n.F, M), DEFAULT_GAIN, k.WHL) @=> FM2_1;
    c.make(s.triad(3, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> FsM2_1;
    c.make(s.triad(3, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> GfM2_1;
    c.make(s.triad(3, n.G, M), DEFAULT_GAIN, k.WHL) @=> GM2_1;
    c.make(s.triad(3, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> GsM2_1;
    c.make(s.triad(3, n.Af, M), DEFAULT_GAIN, k.WHL) @=> AfM2_1;
    c.make(s.triad(3, n.A, M), DEFAULT_GAIN, k.WHL) @=> AM2_1;
    c.make(s.triad(3, n.As, M), DEFAULT_GAIN, k.WHL) @=> AsM2_1;
    c.make(s.triad(3, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> BfM2_1;
    c.make(s.triad(3, n.B, M), DEFAULT_GAIN, k.WHL) @=> BM2_1;

    c.make(s.triad(4, n.C, M), DEFAULT_GAIN, k.WHL) @=> CM3_1;
    c.make(s.triad(4, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> CsM3_1;
    c.make(s.triad(4, n.D, M), DEFAULT_GAIN, k.WHL) @=> DM3_1;
    c.make(s.triad(4, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> DsM3_1;
    c.make(s.triad(4, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> EfM3_1;
    c.make(s.triad(4, n.E, M), DEFAULT_GAIN, k.WHL) @=> EM3_1;
    c.make(s.triad(4, n.F, M), DEFAULT_GAIN, k.WHL) @=> FM3_1;
    c.make(s.triad(4, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> FsM3_1;
    c.make(s.triad(4, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> GfM3_1;
    c.make(s.triad(4, n.G, M), DEFAULT_GAIN, k.WHL) @=> GM3_1;
    c.make(s.triad(4, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> GsM3_1;
    c.make(s.triad(4, n.Af, M), DEFAULT_GAIN, k.WHL) @=> AfM3_1;
    c.make(s.triad(4, n.A, M), DEFAULT_GAIN, k.WHL) @=> AM3_1;
    c.make(s.triad(4, n.As, M), DEFAULT_GAIN, k.WHL) @=> AsM3_1;
    c.make(s.triad(4, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> BfM3_1;
    c.make(s.triad(4, n.B, M), DEFAULT_GAIN, k.WHL) @=> BM3_1;

    c.make(s.triad(5, n.C, M), DEFAULT_GAIN, k.WHL) @=> CM4_1;
    c.make(s.triad(5, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> CsM4_1;
    c.make(s.triad(5, n.D, M), DEFAULT_GAIN, k.WHL) @=> DM4_1;
    c.make(s.triad(5, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> DsM4_1;
    c.make(s.triad(5, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> EfM4_1;
    c.make(s.triad(5, n.E, M), DEFAULT_GAIN, k.WHL) @=> EM4_1;
    c.make(s.triad(5, n.F, M), DEFAULT_GAIN, k.WHL) @=> FM4_1;
    c.make(s.triad(5, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> FsM4_1;
    c.make(s.triad(5, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> GfM4_1;
    c.make(s.triad(5, n.G, M), DEFAULT_GAIN, k.WHL) @=> GM4_1;
    c.make(s.triad(5, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> GsM4_1;
    c.make(s.triad(5, n.Af, M), DEFAULT_GAIN, k.WHL) @=> AfM4_1;
    c.make(s.triad(5, n.A, M), DEFAULT_GAIN, k.WHL) @=> AM4_1;
    c.make(s.triad(5, n.As, M), DEFAULT_GAIN, k.WHL) @=> AsM4_1;
    c.make(s.triad(5, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> BfM4_1;
    c.make(s.triad(5, n.B, M), DEFAULT_GAIN, k.WHL) @=> BM4_1;

    c.make(s.triad(6, n.C, M), DEFAULT_GAIN, k.WHL) @=> CM5_1;
    c.make(s.triad(6, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> CsM5_1;
    c.make(s.triad(6, n.D, M), DEFAULT_GAIN, k.WHL) @=> DM5_1;
    c.make(s.triad(6, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> DsM5_1;
    c.make(s.triad(6, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> EfM5_1;
    c.make(s.triad(6, n.E, M), DEFAULT_GAIN, k.WHL) @=> EM5_1;
    c.make(s.triad(6, n.F, M), DEFAULT_GAIN, k.WHL) @=> FM5_1;
    c.make(s.triad(6, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> FsM5_1;
    c.make(s.triad(6, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> GfM5_1;
    c.make(s.triad(6, n.G, M), DEFAULT_GAIN, k.WHL) @=> GM5_1;
    c.make(s.triad(6, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> GsM5_1;
    c.make(s.triad(6, n.Af, M), DEFAULT_GAIN, k.WHL) @=> AfM5_1;
    c.make(s.triad(6, n.A, M), DEFAULT_GAIN, k.WHL) @=> AM5_1;
    c.make(s.triad(6, n.As, M), DEFAULT_GAIN, k.WHL) @=> AsM5_1;
    c.make(s.triad(6, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> BfM5_1;
    c.make(s.triad(6, n.B, M), DEFAULT_GAIN, k.WHL) @=> BM5_1;

    c.make(s.triad(7, n.C, M), DEFAULT_GAIN, k.WHL) @=> CM6_1;
    c.make(s.triad(7, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> CsM6_1;
    c.make(s.triad(7, n.D, M), DEFAULT_GAIN, k.WHL) @=> DM6_1;
    c.make(s.triad(7, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> DsM6_1;
    c.make(s.triad(7, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> EfM6_1;
    c.make(s.triad(7, n.E, M), DEFAULT_GAIN, k.WHL) @=> EM6_1;
    c.make(s.triad(7, n.F, M), DEFAULT_GAIN, k.WHL) @=> FM6_1;
    c.make(s.triad(7, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> FsM6_1;
    c.make(s.triad(7, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> GfM6_1;
    c.make(s.triad(7, n.G, M), DEFAULT_GAIN, k.WHL) @=> GM6_1;
    c.make(s.triad(7, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> GsM6_1;
    c.make(s.triad(7, n.Af, M), DEFAULT_GAIN, k.WHL) @=> AfM6_1;
    c.make(s.triad(7, n.A, M), DEFAULT_GAIN, k.WHL) @=> AM6_1;
    c.make(s.triad(7, n.As, M), DEFAULT_GAIN, k.WHL) @=> AsM6_1;
    c.make(s.triad(7, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> BfM6_1;
    c.make(s.triad(7, n.B, M), DEFAULT_GAIN, k.WHL) @=> BM6_1;

    c.make(s.triad(8, n.C, M), DEFAULT_GAIN, k.WHL) @=> CM7_1;
    c.make(s.triad(8, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> CsM7_1;
    c.make(s.triad(8, n.D, M), DEFAULT_GAIN, k.WHL) @=> DM7_1;
    c.make(s.triad(8, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> DsM7_1;
    c.make(s.triad(8, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> EfM7_1;
    c.make(s.triad(8, n.E, M), DEFAULT_GAIN, k.WHL) @=> EM7_1;
    c.make(s.triad(8, n.F, M), DEFAULT_GAIN, k.WHL) @=> FM7_1;
    c.make(s.triad(8, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> FsM7_1;
    c.make(s.triad(8, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> GfM7_1;
    c.make(s.triad(8, n.G, M), DEFAULT_GAIN, k.WHL) @=> GM7_1;
    c.make(s.triad(8, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> GsM7_1;
    c.make(s.triad(8, n.Af, M), DEFAULT_GAIN, k.WHL) @=> AfM7_1;
    c.make(s.triad(8, n.A, M), DEFAULT_GAIN, k.WHL) @=> AM7_1;
    c.make(s.triad(8, n.As, M), DEFAULT_GAIN, k.WHL) @=> AsM7_1;
    c.make(s.triad(8, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> BfM7_1;
    c.make(s.triad(8, n.B, M), DEFAULT_GAIN, k.WHL) @=> BM7_1;

    c.make(s.triad(9, n.C, M), DEFAULT_GAIN, k.WHL) @=> CM8_1;
    c.make(s.triad(9, n.Cs, M), DEFAULT_GAIN, k.WHL) @=> CsM8_1;
    c.make(s.triad(9, n.D, M), DEFAULT_GAIN, k.WHL) @=> DM8_1;
    c.make(s.triad(9, n.Ds, M), DEFAULT_GAIN, k.WHL) @=> DsM8_1;
    c.make(s.triad(9, n.Ef, M), DEFAULT_GAIN, k.WHL) @=> EfM8_1;
    c.make(s.triad(9, n.E, M), DEFAULT_GAIN, k.WHL) @=> EM8_1;
    c.make(s.triad(9, n.F, M), DEFAULT_GAIN, k.WHL) @=> FM8_1;
    c.make(s.triad(9, n.Fs, M), DEFAULT_GAIN, k.WHL) @=> FsM8_1;
    c.make(s.triad(9, n.Gf, M), DEFAULT_GAIN, k.WHL) @=> GfM8_1;
    c.make(s.triad(9, n.G, M), DEFAULT_GAIN, k.WHL) @=> GM8_1;
    c.make(s.triad(9, n.Gs, M), DEFAULT_GAIN, k.WHL) @=> GsM8_1;
    c.make(s.triad(9, n.Af, M), DEFAULT_GAIN, k.WHL) @=> AfM8_1;
    c.make(s.triad(9, n.A, M), DEFAULT_GAIN, k.WHL) @=> AM8_1;
    c.make(s.triad(9, n.As, M), DEFAULT_GAIN, k.WHL) @=> AsM8_1;
    c.make(s.triad(9, n.Bf, M), DEFAULT_GAIN, k.WHL) @=> BfM8_1;
    c.make(s.triad(9, n.B, M), DEFAULT_GAIN, k.WHL) @=> BM8_1;

    // Minor
    c.make(s.triad(0, n.C, m), DEFAULT_GAIN, k.WHL) @=> Cm_1;
    c.make(s.triad(0, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Csm_1;
    c.make(s.triad(0, n.D, m), DEFAULT_GAIN, k.WHL) @=> Dm_1;
    c.make(s.triad(0, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Dsm_1;
    c.make(s.triad(0, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Efm_1;
    c.make(s.triad(0, n.E, m), DEFAULT_GAIN, k.WHL) @=> Em_1;
    c.make(s.triad(0, n.F, m), DEFAULT_GAIN, k.WHL) @=> _Fm_1;
    c.make(s.triad(0, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Fsm_1;
    c.make(s.triad(0, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Gfm_1;
    c.make(s.triad(0, n.G, m), DEFAULT_GAIN, k.WHL) @=> Gm_1;
    c.make(s.triad(0, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Gsm_1;
    c.make(s.triad(0, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Afm_1;
    c.make(s.triad(0, n.A, m), DEFAULT_GAIN, k.WHL) @=> Am_1;
    c.make(s.triad(0, n.As, m), DEFAULT_GAIN, k.WHL) @=> Asm_1;
    c.make(s.triad(0, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Bfm_1;
    c.make(s.triad(0, n.B, m), DEFAULT_GAIN, k.WHL) @=> Bm_1;

    c.make(s.triad(1, n.C, m), DEFAULT_GAIN, k.WHL) @=> Cm0_1;
    c.make(s.triad(1, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Csm0_1;
    c.make(s.triad(1, n.D, m), DEFAULT_GAIN, k.WHL) @=> Dm0_1;
    c.make(s.triad(1, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Dsm0_1;
    c.make(s.triad(1, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Efm0_1;
    c.make(s.triad(1, n.E, m), DEFAULT_GAIN, k.WHL) @=> Em0_1;
    c.make(s.triad(1, n.F, m), DEFAULT_GAIN, k.WHL) @=> _Fm0_1;
    c.make(s.triad(1, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Fsm0_1;
    c.make(s.triad(1, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Gfm0_1;
    c.make(s.triad(1, n.G, m), DEFAULT_GAIN, k.WHL) @=> Gm0_1;
    c.make(s.triad(1, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Gsm0_1;
    c.make(s.triad(1, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Afm0_1;
    c.make(s.triad(1, n.A, m), DEFAULT_GAIN, k.WHL) @=> Am0_1;
    c.make(s.triad(1, n.As, m), DEFAULT_GAIN, k.WHL) @=> Asm0_1;
    c.make(s.triad(1, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Bfm0_1;
    c.make(s.triad(1, n.B, m), DEFAULT_GAIN, k.WHL) @=> Bm0_1;

    c.make(s.triad(2, n.C, m), DEFAULT_GAIN, k.WHL) @=> Cm1_1;
    c.make(s.triad(2, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Csm1_1;
    c.make(s.triad(2, n.D, m), DEFAULT_GAIN, k.WHL) @=> Dm1_1;
    c.make(s.triad(2, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Dsm1_1;
    c.make(s.triad(2, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Efm1_1;
    c.make(s.triad(2, n.E, m), DEFAULT_GAIN, k.WHL) @=> Em1_1;
    c.make(s.triad(2, n.F, m), DEFAULT_GAIN, k.WHL) @=> _Fm1_1;
    c.make(s.triad(2, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Fsm1_1;
    c.make(s.triad(2, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Gfm1_1;
    c.make(s.triad(2, n.G, m), DEFAULT_GAIN, k.WHL) @=> Gm1_1;
    c.make(s.triad(2, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Gsm1_1;
    c.make(s.triad(2, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Afm1_1;
    c.make(s.triad(2, n.A, m), DEFAULT_GAIN, k.WHL) @=> Am1_1;
    c.make(s.triad(2, n.As, m), DEFAULT_GAIN, k.WHL) @=> Asm1_1;
    c.make(s.triad(2, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Bfm1_1;
    c.make(s.triad(2, n.B, m), DEFAULT_GAIN, k.WHL) @=> Bm1_1;

    c.make(s.triad(3, n.C, m), DEFAULT_GAIN, k.WHL) @=> Cm2_1;
    c.make(s.triad(3, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Csm2_1;
    c.make(s.triad(3, n.D, m), DEFAULT_GAIN, k.WHL) @=> Dm2_1;
    c.make(s.triad(3, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Dsm2_1;
    c.make(s.triad(3, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Efm2_1;
    c.make(s.triad(3, n.E, m), DEFAULT_GAIN, k.WHL) @=> Em2_1;
    c.make(s.triad(3, n.F, m), DEFAULT_GAIN, k.WHL) @=> _Fm2_1;
    c.make(s.triad(3, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Fsm2_1;
    c.make(s.triad(3, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Gfm2_1;
    c.make(s.triad(3, n.G, m), DEFAULT_GAIN, k.WHL) @=> Gm2_1;
    c.make(s.triad(3, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Gsm2_1;
    c.make(s.triad(3, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Afm2_1;
    c.make(s.triad(3, n.A, m), DEFAULT_GAIN, k.WHL) @=> Am2_1;
    c.make(s.triad(3, n.As, m), DEFAULT_GAIN, k.WHL) @=> Asm2_1;
    c.make(s.triad(3, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Bfm2_1;
    c.make(s.triad(3, n.B, m), DEFAULT_GAIN, k.WHL) @=> Bm2_1;

    c.make(s.triad(4, n.C, m), DEFAULT_GAIN, k.WHL) @=> Cm3_1;
    c.make(s.triad(4, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Csm3_1;
    c.make(s.triad(4, n.D, m), DEFAULT_GAIN, k.WHL) @=> Dm3_1;
    c.make(s.triad(4, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Dsm3_1;
    c.make(s.triad(4, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Efm3_1;
    c.make(s.triad(4, n.E, m), DEFAULT_GAIN, k.WHL) @=> Em3_1;
    c.make(s.triad(4, n.F, m), DEFAULT_GAIN, k.WHL) @=> _Fm3_1;
    c.make(s.triad(4, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Fsm3_1;
    c.make(s.triad(4, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Gfm3_1;
    c.make(s.triad(4, n.G, m), DEFAULT_GAIN, k.WHL) @=> Gm3_1;
    c.make(s.triad(4, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Gsm3_1;
    c.make(s.triad(4, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Afm3_1;
    c.make(s.triad(4, n.A, m), DEFAULT_GAIN, k.WHL) @=> Am3_1;
    c.make(s.triad(4, n.As, m), DEFAULT_GAIN, k.WHL) @=> Asm3_1;
    c.make(s.triad(4, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Bfm3_1;
    c.make(s.triad(4, n.B, m), DEFAULT_GAIN, k.WHL) @=> Bm3_1;

    c.make(s.triad(5, n.C, m), DEFAULT_GAIN, k.WHL) @=> Cm4_1;
    c.make(s.triad(5, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Csm4_1;
    c.make(s.triad(5, n.D, m), DEFAULT_GAIN, k.WHL) @=> Dm4_1;
    c.make(s.triad(5, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Dsm4_1;
    c.make(s.triad(5, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Efm4_1;
    c.make(s.triad(5, n.E, m), DEFAULT_GAIN, k.WHL) @=> Em4_1;
    c.make(s.triad(5, n.F, m), DEFAULT_GAIN, k.WHL) @=> _Fm4_1;
    c.make(s.triad(5, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Fsm4_1;
    c.make(s.triad(5, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Gfm4_1;
    c.make(s.triad(5, n.G, m), DEFAULT_GAIN, k.WHL) @=> Gm4_1;
    c.make(s.triad(5, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Gsm4_1;
    c.make(s.triad(5, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Afm4_1;
    c.make(s.triad(5, n.A, m), DEFAULT_GAIN, k.WHL) @=> Am4_1;
    c.make(s.triad(5, n.As, m), DEFAULT_GAIN, k.WHL) @=> Asm4_1;
    c.make(s.triad(5, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Bfm4_1;
    c.make(s.triad(5, n.B, m), DEFAULT_GAIN, k.WHL) @=> Bm4_1;

    c.make(s.triad(6, n.C, m), DEFAULT_GAIN, k.WHL) @=> Cm5_1;
    c.make(s.triad(6, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Csm5_1;
    c.make(s.triad(6, n.D, m), DEFAULT_GAIN, k.WHL) @=> Dm5_1;
    c.make(s.triad(6, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Dsm5_1;
    c.make(s.triad(6, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Efm5_1;
    c.make(s.triad(6, n.E, m), DEFAULT_GAIN, k.WHL) @=> Em5_1;
    c.make(s.triad(6, n.F, m), DEFAULT_GAIN, k.WHL) @=> _Fm5_1;
    c.make(s.triad(6, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Fsm5_1;
    c.make(s.triad(6, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Gfm5_1;
    c.make(s.triad(6, n.G, m), DEFAULT_GAIN, k.WHL) @=> Gm5_1;
    c.make(s.triad(6, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Gsm5_1;
    c.make(s.triad(6, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Afm5_1;
    c.make(s.triad(6, n.A, m), DEFAULT_GAIN, k.WHL) @=> Am5_1;
    c.make(s.triad(6, n.As, m), DEFAULT_GAIN, k.WHL) @=> Asm5_1;
    c.make(s.triad(6, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Bfm5_1;
    c.make(s.triad(6, n.B, m), DEFAULT_GAIN, k.WHL) @=> Bm5_1;

    c.make(s.triad(7, n.C, m), DEFAULT_GAIN, k.WHL) @=> Cm6_1;
    c.make(s.triad(7, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Csm6_1;
    c.make(s.triad(7, n.D, m), DEFAULT_GAIN, k.WHL) @=> Dm6_1;
    c.make(s.triad(7, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Dsm6_1;
    c.make(s.triad(7, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Efm6_1;
    c.make(s.triad(7, n.E, m), DEFAULT_GAIN, k.WHL) @=> Em6_1;
    c.make(s.triad(7, n.F, m), DEFAULT_GAIN, k.WHL) @=> _Fm6_1;
    c.make(s.triad(7, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Fsm6_1;
    c.make(s.triad(7, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Gfm6_1;
    c.make(s.triad(7, n.G, m), DEFAULT_GAIN, k.WHL) @=> Gm6_1;
    c.make(s.triad(7, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Gsm6_1;
    c.make(s.triad(7, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Afm6_1;
    c.make(s.triad(7, n.A, m), DEFAULT_GAIN, k.WHL) @=> Am6_1;
    c.make(s.triad(7, n.As, m), DEFAULT_GAIN, k.WHL) @=> Asm6_1;
    c.make(s.triad(7, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Bfm6_1;
    c.make(s.triad(7, n.B, m), DEFAULT_GAIN, k.WHL) @=> Bm6_1;

    c.make(s.triad(8, n.C, m), DEFAULT_GAIN, k.WHL) @=> Cm7_1;
    c.make(s.triad(8, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Csm7_1;
    c.make(s.triad(8, n.D, m), DEFAULT_GAIN, k.WHL) @=> Dm7_1;
    c.make(s.triad(8, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Dsm7_1;
    c.make(s.triad(8, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Efm7_1;
    c.make(s.triad(8, n.E, m), DEFAULT_GAIN, k.WHL) @=> Em7_1;
    c.make(s.triad(8, n.F, m), DEFAULT_GAIN, k.WHL) @=> _Fm7_1;
    c.make(s.triad(8, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Fsm7_1;
    c.make(s.triad(8, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Gfm7_1;
    c.make(s.triad(8, n.G, m), DEFAULT_GAIN, k.WHL) @=> Gm7_1;
    c.make(s.triad(8, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Gsm7_1;
    c.make(s.triad(8, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Afm7_1;
    c.make(s.triad(8, n.A, m), DEFAULT_GAIN, k.WHL) @=> Am7_1;
    c.make(s.triad(8, n.As, m), DEFAULT_GAIN, k.WHL) @=> Asm7_1;
    c.make(s.triad(8, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Bfm7_1;
    c.make(s.triad(8, n.B, m), DEFAULT_GAIN, k.WHL) @=> Bm7_1;

    c.make(s.triad(9, n.C, m), DEFAULT_GAIN, k.WHL) @=> Cm8_1;
    c.make(s.triad(9, n.Cs, m), DEFAULT_GAIN, k.WHL) @=> Csm8_1;
    c.make(s.triad(9, n.D, m), DEFAULT_GAIN, k.WHL) @=> Dm8_1;
    c.make(s.triad(9, n.Ds, m), DEFAULT_GAIN, k.WHL) @=> Dsm8_1;
    c.make(s.triad(9, n.Ef, m), DEFAULT_GAIN, k.WHL) @=> Efm8_1;
    c.make(s.triad(9, n.E, m), DEFAULT_GAIN, k.WHL) @=> Em8_1;
    c.make(s.triad(9, n.F, m), DEFAULT_GAIN, k.WHL) @=> _Fm8_1;
    c.make(s.triad(9, n.Fs, m), DEFAULT_GAIN, k.WHL) @=> Fsm8_1;
    c.make(s.triad(9, n.Gf, m), DEFAULT_GAIN, k.WHL) @=> Gfm8_1;
    c.make(s.triad(9, n.G, m), DEFAULT_GAIN, k.WHL) @=> Gm8_1;
    c.make(s.triad(9, n.Gs, m), DEFAULT_GAIN, k.WHL) @=> Gsm8_1;
    c.make(s.triad(9, n.Af, m), DEFAULT_GAIN, k.WHL) @=> Afm8_1;
    c.make(s.triad(9, n.A, m), DEFAULT_GAIN, k.WHL) @=> Am8_1;
    c.make(s.triad(9, n.As, m), DEFAULT_GAIN, k.WHL) @=> Asm8_1;
    c.make(s.triad(9, n.Bf, m), DEFAULT_GAIN, k.WHL) @=> Bfm8_1;
    c.make(s.triad(9, n.B, m), DEFAULT_GAIN, k.WHL) @=> Bm8_1;

    // Augmented
    c.make(s.triad(0, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Caug_1;
    c.make(s.triad(0, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Csaug_1;
    c.make(s.triad(0, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Daug_1;
    c.make(s.triad(0, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Dsaug_1;
    c.make(s.triad(0, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Efaug_1;
    c.make(s.triad(0, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Eaug_1;
    c.make(s.triad(0, n.F, aug), DEFAULT_GAIN, k.WHL) @=> _Faug_1;
    c.make(s.triad(0, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Fsaug_1;
    c.make(s.triad(0, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Gfaug_1;
    c.make(s.triad(0, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Gaug_1;
    c.make(s.triad(0, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Gsaug_1;
    c.make(s.triad(0, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Afaug_1;
    c.make(s.triad(0, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Aaug_1;
    c.make(s.triad(0, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Asaug_1;
    c.make(s.triad(0, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Bfaug_1;
    c.make(s.triad(0, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Baug_1;

    c.make(s.triad(1, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Caug0_1;
    c.make(s.triad(1, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Csaug0_1;
    c.make(s.triad(1, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Daug0_1;
    c.make(s.triad(1, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Dsaug0_1;
    c.make(s.triad(1, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Efaug0_1;
    c.make(s.triad(1, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Eaug0_1;
    c.make(s.triad(1, n.F, aug), DEFAULT_GAIN, k.WHL) @=> _Faug0_1;
    c.make(s.triad(1, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Fsaug0_1;
    c.make(s.triad(1, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Gfaug0_1;
    c.make(s.triad(1, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Gaug0_1;
    c.make(s.triad(1, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Gsaug0_1;
    c.make(s.triad(1, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Afaug0_1;
    c.make(s.triad(1, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Aaug0_1;
    c.make(s.triad(1, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Asaug0_1;
    c.make(s.triad(1, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Bfaug0_1;
    c.make(s.triad(1, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Baug0_1;

    c.make(s.triad(2, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Caug1_1;
    c.make(s.triad(2, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Csaug1_1;
    c.make(s.triad(2, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Daug1_1;
    c.make(s.triad(2, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Dsaug1_1;
    c.make(s.triad(2, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Efaug1_1;
    c.make(s.triad(2, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Eaug1_1;
    c.make(s.triad(2, n.F, aug), DEFAULT_GAIN, k.WHL) @=> _Faug1_1;
    c.make(s.triad(2, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Fsaug1_1;
    c.make(s.triad(2, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Gfaug1_1;
    c.make(s.triad(2, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Gaug1_1;
    c.make(s.triad(2, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Gsaug1_1;
    c.make(s.triad(2, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Afaug1_1;
    c.make(s.triad(2, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Aaug1_1;
    c.make(s.triad(2, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Asaug1_1;
    c.make(s.triad(2, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Bfaug1_1;
    c.make(s.triad(2, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Baug1_1;

    c.make(s.triad(3, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Caug2_1;
    c.make(s.triad(3, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Csaug2_1;
    c.make(s.triad(3, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Daug2_1;
    c.make(s.triad(3, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Dsaug2_1;
    c.make(s.triad(3, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Efaug2_1;
    c.make(s.triad(3, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Eaug2_1;
    c.make(s.triad(3, n.F, aug), DEFAULT_GAIN, k.WHL) @=> _Faug2_1;
    c.make(s.triad(3, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Fsaug2_1;
    c.make(s.triad(3, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Gfaug2_1;
    c.make(s.triad(3, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Gaug2_1;
    c.make(s.triad(3, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Gsaug2_1;
    c.make(s.triad(3, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Afaug2_1;
    c.make(s.triad(3, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Aaug2_1;
    c.make(s.triad(3, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Asaug2_1;
    c.make(s.triad(3, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Bfaug2_1;
    c.make(s.triad(3, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Baug2_1;

    c.make(s.triad(4, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Caug3_1;
    c.make(s.triad(4, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Csaug3_1;
    c.make(s.triad(4, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Daug3_1;
    c.make(s.triad(4, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Dsaug3_1;
    c.make(s.triad(4, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Efaug3_1;
    c.make(s.triad(4, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Eaug3_1;
    c.make(s.triad(4, n.F, aug), DEFAULT_GAIN, k.WHL) @=> _Faug3_1;
    c.make(s.triad(4, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Fsaug3_1;
    c.make(s.triad(4, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Gfaug3_1;
    c.make(s.triad(4, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Gaug3_1;
    c.make(s.triad(4, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Gsaug3_1;
    c.make(s.triad(4, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Afaug3_1;
    c.make(s.triad(4, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Aaug3_1;
    c.make(s.triad(4, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Asaug3_1;
    c.make(s.triad(4, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Bfaug3_1;
    c.make(s.triad(4, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Baug3_1;

    c.make(s.triad(5, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Caug4_1;
    c.make(s.triad(5, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Csaug4_1;
    c.make(s.triad(5, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Daug4_1;
    c.make(s.triad(5, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Dsaug4_1;
    c.make(s.triad(5, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Efaug4_1;
    c.make(s.triad(5, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Eaug4_1;
    c.make(s.triad(5, n.F, aug), DEFAULT_GAIN, k.WHL) @=> _Faug4_1;
    c.make(s.triad(5, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Fsaug4_1;
    c.make(s.triad(5, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Gfaug4_1;
    c.make(s.triad(5, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Gaug4_1;
    c.make(s.triad(5, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Gsaug4_1;
    c.make(s.triad(5, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Afaug4_1;
    c.make(s.triad(5, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Aaug4_1;
    c.make(s.triad(5, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Asaug4_1;
    c.make(s.triad(5, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Bfaug4_1;
    c.make(s.triad(5, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Baug4_1;

    c.make(s.triad(6, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Caug5_1;
    c.make(s.triad(6, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Csaug5_1;
    c.make(s.triad(6, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Daug5_1;
    c.make(s.triad(6, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Dsaug5_1;
    c.make(s.triad(6, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Efaug5_1;
    c.make(s.triad(6, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Eaug5_1;
    c.make(s.triad(6, n.F, aug), DEFAULT_GAIN, k.WHL) @=> _Faug5_1;
    c.make(s.triad(6, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Fsaug5_1;
    c.make(s.triad(6, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Gfaug5_1;
    c.make(s.triad(6, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Gaug5_1;
    c.make(s.triad(6, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Gsaug5_1;
    c.make(s.triad(6, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Afaug5_1;
    c.make(s.triad(6, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Aaug5_1;
    c.make(s.triad(6, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Asaug5_1;
    c.make(s.triad(6, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Bfaug5_1;
    c.make(s.triad(6, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Baug5_1;

    c.make(s.triad(7, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Caug6_1;
    c.make(s.triad(7, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Csaug6_1;
    c.make(s.triad(7, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Daug6_1;
    c.make(s.triad(7, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Dsaug6_1;
    c.make(s.triad(7, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Efaug6_1;
    c.make(s.triad(7, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Eaug6_1;
    c.make(s.triad(7, n.F, aug), DEFAULT_GAIN, k.WHL) @=> _Faug6_1;
    c.make(s.triad(7, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Fsaug6_1;
    c.make(s.triad(7, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Gfaug6_1;
    c.make(s.triad(7, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Gaug6_1;
    c.make(s.triad(7, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Gsaug6_1;
    c.make(s.triad(7, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Afaug6_1;
    c.make(s.triad(7, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Aaug6_1;
    c.make(s.triad(7, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Asaug6_1;
    c.make(s.triad(7, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Bfaug6_1;
    c.make(s.triad(7, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Baug6_1;

    c.make(s.triad(8, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Caug7_1;
    c.make(s.triad(8, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Csaug7_1;
    c.make(s.triad(8, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Daug7_1;
    c.make(s.triad(8, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Dsaug7_1;
    c.make(s.triad(8, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Efaug7_1;
    c.make(s.triad(8, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Eaug7_1;
    c.make(s.triad(8, n.F, aug), DEFAULT_GAIN, k.WHL) @=> _Faug7_1;
    c.make(s.triad(8, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Fsaug7_1;
    c.make(s.triad(8, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Gfaug7_1;
    c.make(s.triad(8, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Gaug7_1;
    c.make(s.triad(8, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Gsaug7_1;
    c.make(s.triad(8, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Afaug7_1;
    c.make(s.triad(8, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Aaug7_1;
    c.make(s.triad(8, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Asaug7_1;
    c.make(s.triad(8, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Bfaug7_1;
    c.make(s.triad(8, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Baug7_1;

    c.make(s.triad(9, n.C, aug), DEFAULT_GAIN, k.WHL) @=> Caug8_1;
    c.make(s.triad(9, n.Cs, aug), DEFAULT_GAIN, k.WHL) @=> Csaug8_1;
    c.make(s.triad(9, n.D, aug), DEFAULT_GAIN, k.WHL) @=> Daug8_1;
    c.make(s.triad(9, n.Ds, aug), DEFAULT_GAIN, k.WHL) @=> Dsaug8_1;
    c.make(s.triad(9, n.Ef, aug), DEFAULT_GAIN, k.WHL) @=> Efaug8_1;
    c.make(s.triad(9, n.E, aug), DEFAULT_GAIN, k.WHL) @=> Eaug8_1;
    c.make(s.triad(9, n.F, aug), DEFAULT_GAIN, k.WHL) @=> _Faug8_1;
    c.make(s.triad(9, n.Fs, aug), DEFAULT_GAIN, k.WHL) @=> Fsaug8_1;
    c.make(s.triad(9, n.Gf, aug), DEFAULT_GAIN, k.WHL) @=> Gfaug8_1;
    c.make(s.triad(9, n.G, aug), DEFAULT_GAIN, k.WHL) @=> Gaug8_1;
    c.make(s.triad(9, n.Gs, aug), DEFAULT_GAIN, k.WHL) @=> Gsaug8_1;
    c.make(s.triad(9, n.Af, aug), DEFAULT_GAIN, k.WHL) @=> Afaug8_1;
    c.make(s.triad(9, n.A, aug), DEFAULT_GAIN, k.WHL) @=> Aaug8_1;
    c.make(s.triad(9, n.As, aug), DEFAULT_GAIN, k.WHL) @=> Asaug8_1;
    c.make(s.triad(9, n.Bf, aug), DEFAULT_GAIN, k.WHL) @=> Bfaug8_1;
    c.make(s.triad(9, n.B, aug), DEFAULT_GAIN, k.WHL) @=> Baug8_1;

    // Diminished
    c.make(s.triad(0, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Cdim_1;
    c.make(s.triad(0, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Csdim_1;
    c.make(s.triad(0, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Ddim_1;
    c.make(s.triad(0, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Dsdim_1;
    c.make(s.triad(0, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Efdim_1;
    c.make(s.triad(0, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Edim_1;
    c.make(s.triad(0, n.F, dim), DEFAULT_GAIN, k.WHL) @=> _Fdim_1;
    c.make(s.triad(0, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Fsdim_1;
    c.make(s.triad(0, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Gfdim_1;
    c.make(s.triad(0, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Gdim_1;
    c.make(s.triad(0, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Gsdim_1;
    c.make(s.triad(0, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Afdim_1;
    c.make(s.triad(0, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Adim_1;
    c.make(s.triad(0, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Asdim_1;
    c.make(s.triad(0, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Bfdim_1;
    c.make(s.triad(0, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Bdim_1;

    c.make(s.triad(1, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Cdim0_1;
    c.make(s.triad(1, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Csdim0_1;
    c.make(s.triad(1, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Ddim0_1;
    c.make(s.triad(1, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Dsdim0_1;
    c.make(s.triad(1, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Efdim0_1;
    c.make(s.triad(1, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Edim0_1;
    c.make(s.triad(1, n.F, dim), DEFAULT_GAIN, k.WHL) @=> _Fdim0_1;
    c.make(s.triad(1, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Fsdim0_1;
    c.make(s.triad(1, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Gfdim0_1;
    c.make(s.triad(1, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Gdim0_1;
    c.make(s.triad(1, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Gsdim0_1;
    c.make(s.triad(1, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Afdim0_1;
    c.make(s.triad(1, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Adim0_1;
    c.make(s.triad(1, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Asdim0_1;
    c.make(s.triad(1, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Bfdim0_1;
    c.make(s.triad(1, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Bdim0_1;

    c.make(s.triad(2, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Cdim1_1;
    c.make(s.triad(2, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Csdim1_1;
    c.make(s.triad(2, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Ddim1_1;
    c.make(s.triad(2, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Dsdim1_1;
    c.make(s.triad(2, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Efdim1_1;
    c.make(s.triad(2, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Edim1_1;
    c.make(s.triad(2, n.F, dim), DEFAULT_GAIN, k.WHL) @=> _Fdim1_1;
    c.make(s.triad(2, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Fsdim1_1;
    c.make(s.triad(2, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Gfdim1_1;
    c.make(s.triad(2, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Gdim1_1;
    c.make(s.triad(2, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Gsdim1_1;
    c.make(s.triad(2, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Afdim1_1;
    c.make(s.triad(2, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Adim1_1;
    c.make(s.triad(2, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Asdim1_1;
    c.make(s.triad(2, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Bfdim1_1;
    c.make(s.triad(2, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Bdim1_1;

    c.make(s.triad(3, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Cdim2_1;
    c.make(s.triad(3, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Csdim2_1;
    c.make(s.triad(3, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Ddim2_1;
    c.make(s.triad(3, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Dsdim2_1;
    c.make(s.triad(3, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Efdim2_1;
    c.make(s.triad(3, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Edim2_1;
    c.make(s.triad(3, n.F, dim), DEFAULT_GAIN, k.WHL) @=> _Fdim2_1;
    c.make(s.triad(3, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Fsdim2_1;
    c.make(s.triad(3, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Gfdim2_1;
    c.make(s.triad(3, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Gdim2_1;
    c.make(s.triad(3, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Gsdim2_1;
    c.make(s.triad(3, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Afdim2_1;
    c.make(s.triad(3, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Adim2_1;
    c.make(s.triad(3, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Asdim2_1;
    c.make(s.triad(3, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Bfdim2_1;
    c.make(s.triad(3, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Bdim2_1;

    c.make(s.triad(4, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Cdim3_1;
    c.make(s.triad(4, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Csdim3_1;
    c.make(s.triad(4, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Ddim3_1;
    c.make(s.triad(4, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Dsdim3_1;
    c.make(s.triad(4, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Efdim3_1;
    c.make(s.triad(4, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Edim3_1;
    c.make(s.triad(4, n.F, dim), DEFAULT_GAIN, k.WHL) @=> _Fdim3_1;
    c.make(s.triad(4, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Fsdim3_1;
    c.make(s.triad(4, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Gfdim3_1;
    c.make(s.triad(4, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Gdim3_1;
    c.make(s.triad(4, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Gsdim3_1;
    c.make(s.triad(4, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Afdim3_1;
    c.make(s.triad(4, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Adim3_1;
    c.make(s.triad(4, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Asdim3_1;
    c.make(s.triad(4, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Bfdim3_1;
    c.make(s.triad(4, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Bdim3_1;

    c.make(s.triad(5, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Cdim4_1;
    c.make(s.triad(5, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Csdim4_1;
    c.make(s.triad(5, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Ddim4_1;
    c.make(s.triad(5, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Dsdim4_1;
    c.make(s.triad(5, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Efdim4_1;
    c.make(s.triad(5, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Edim4_1;
    c.make(s.triad(5, n.F, dim), DEFAULT_GAIN, k.WHL) @=> _Fdim4_1;
    c.make(s.triad(5, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Fsdim4_1;
    c.make(s.triad(5, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Gfdim4_1;
    c.make(s.triad(5, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Gdim4_1;
    c.make(s.triad(5, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Gsdim4_1;
    c.make(s.triad(5, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Afdim4_1;
    c.make(s.triad(5, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Adim4_1;
    c.make(s.triad(5, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Asdim4_1;
    c.make(s.triad(5, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Bfdim4_1;
    c.make(s.triad(5, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Bdim4_1;

    c.make(s.triad(6, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Cdim5_1;
    c.make(s.triad(6, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Csdim5_1;
    c.make(s.triad(6, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Ddim5_1;
    c.make(s.triad(6, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Dsdim5_1;
    c.make(s.triad(6, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Efdim5_1;
    c.make(s.triad(6, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Edim5_1;
    c.make(s.triad(6, n.F, dim), DEFAULT_GAIN, k.WHL) @=> _Fdim5_1;
    c.make(s.triad(6, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Fsdim5_1;
    c.make(s.triad(6, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Gfdim5_1;
    c.make(s.triad(6, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Gdim5_1;
    c.make(s.triad(6, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Gsdim5_1;
    c.make(s.triad(6, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Afdim5_1;
    c.make(s.triad(6, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Adim5_1;
    c.make(s.triad(6, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Asdim5_1;
    c.make(s.triad(6, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Bfdim5_1;
    c.make(s.triad(6, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Bdim5_1;

    c.make(s.triad(7, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Cdim6_1;
    c.make(s.triad(7, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Csdim6_1;
    c.make(s.triad(7, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Ddim6_1;
    c.make(s.triad(7, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Dsdim6_1;
    c.make(s.triad(7, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Efdim6_1;
    c.make(s.triad(7, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Edim6_1;
    c.make(s.triad(7, n.F, dim), DEFAULT_GAIN, k.WHL) @=> _Fdim6_1;
    c.make(s.triad(7, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Fsdim6_1;
    c.make(s.triad(7, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Gfdim6_1;
    c.make(s.triad(7, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Gdim6_1;
    c.make(s.triad(7, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Gsdim6_1;
    c.make(s.triad(7, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Afdim6_1;
    c.make(s.triad(7, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Adim6_1;
    c.make(s.triad(7, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Asdim6_1;
    c.make(s.triad(7, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Bfdim6_1;
    c.make(s.triad(7, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Bdim6_1;

    c.make(s.triad(8, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Cdim7_1;
    c.make(s.triad(8, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Csdim7_1;
    c.make(s.triad(8, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Ddim7_1;
    c.make(s.triad(8, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Dsdim7_1;
    c.make(s.triad(8, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Efdim7_1;
    c.make(s.triad(8, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Edim7_1;
    c.make(s.triad(8, n.F, dim), DEFAULT_GAIN, k.WHL) @=> _Fdim7_1;
    c.make(s.triad(8, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Fsdim7_1;
    c.make(s.triad(8, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Gfdim7_1;
    c.make(s.triad(8, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Gdim7_1;
    c.make(s.triad(8, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Gsdim7_1;
    c.make(s.triad(8, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Afdim7_1;
    c.make(s.triad(8, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Adim7_1;
    c.make(s.triad(8, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Asdim7_1;
    c.make(s.triad(8, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Bfdim7_1;
    c.make(s.triad(8, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Bdim7_1;

    c.make(s.triad(9, n.C, dim), DEFAULT_GAIN, k.WHL) @=> Cdim8_1;
    c.make(s.triad(9, n.Cs, dim), DEFAULT_GAIN, k.WHL) @=> Csdim8_1;
    c.make(s.triad(9, n.D, dim), DEFAULT_GAIN, k.WHL) @=> Ddim8_1;
    c.make(s.triad(9, n.Ds, dim), DEFAULT_GAIN, k.WHL) @=> Dsdim8_1;
    c.make(s.triad(9, n.Ef, dim), DEFAULT_GAIN, k.WHL) @=> Efdim8_1;
    c.make(s.triad(9, n.E, dim), DEFAULT_GAIN, k.WHL) @=> Edim8_1;
    c.make(s.triad(9, n.F, dim), DEFAULT_GAIN, k.WHL) @=> _Fdim8_1;
    c.make(s.triad(9, n.Fs, dim), DEFAULT_GAIN, k.WHL) @=> Fsdim8_1;
    c.make(s.triad(9, n.Gf, dim), DEFAULT_GAIN, k.WHL) @=> Gfdim8_1;
    c.make(s.triad(9, n.G, dim), DEFAULT_GAIN, k.WHL) @=> Gdim8_1;
    c.make(s.triad(9, n.Gs, dim), DEFAULT_GAIN, k.WHL) @=> Gsdim8_1;
    c.make(s.triad(9, n.Af, dim), DEFAULT_GAIN, k.WHL) @=> Afdim8_1;
    c.make(s.triad(9, n.A, dim), DEFAULT_GAIN, k.WHL) @=> Adim8_1;
    c.make(s.triad(9, n.As, dim), DEFAULT_GAIN, k.WHL) @=> Asdim8_1;
    c.make(s.triad(9, n.Bf, dim), DEFAULT_GAIN, k.WHL) @=> Bfdim8_1;
    c.make(s.triad(9, n.B, dim), DEFAULT_GAIN, k.WHL) @=> Bdim8_1;


    //
    // HLF
    //

    // Major
    // 0-based offsets
    c.make(s.triad(0, n.C, M), DEFAULT_GAIN, k.HLF) @=> CM_2;
    c.make(s.triad(0, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> CsM_2;
    c.make(s.triad(0, n.D, M), DEFAULT_GAIN, k.HLF) @=> DM_2;
    c.make(s.triad(0, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> DsM_2;
    c.make(s.triad(0, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> EfM_2;
    c.make(s.triad(0, n.E, M), DEFAULT_GAIN, k.HLF) @=> EM_2;
    c.make(s.triad(0, n.F, M), DEFAULT_GAIN, k.HLF) @=> FM_2;
    c.make(s.triad(0, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> FsM_2;
    c.make(s.triad(0, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> GfM_2;
    c.make(s.triad(0, n.G, M), DEFAULT_GAIN, k.HLF) @=> GM_2;
    c.make(s.triad(0, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> GsM_2;
    c.make(s.triad(0, n.Af, M), DEFAULT_GAIN, k.HLF) @=> AfM_2;
    c.make(s.triad(0, n.A, M), DEFAULT_GAIN, k.HLF) @=> AM_2;
    c.make(s.triad(0, n.As, M), DEFAULT_GAIN, k.HLF) @=> AsM_2;
    c.make(s.triad(0, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> BfM_2;
    c.make(s.triad(0, n.B, M), DEFAULT_GAIN, k.HLF) @=> BM_2;

    // constants predefined per octave
    c.make(s.triad(1, n.C, M), DEFAULT_GAIN, k.HLF) @=> CM0_2;
    c.make(s.triad(1, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> CsM0_2;
    c.make(s.triad(1, n.D, M), DEFAULT_GAIN, k.HLF) @=> DM0_2;
    c.make(s.triad(1, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> DsM0_2;
    c.make(s.triad(1, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> EfM0_2;
    c.make(s.triad(1, n.E, M), DEFAULT_GAIN, k.HLF) @=> EM0_2;
    c.make(s.triad(1, n.F, M), DEFAULT_GAIN, k.HLF) @=> FM0_2;
    c.make(s.triad(1, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> FsM0_2;
    c.make(s.triad(1, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> GfM0_2;
    c.make(s.triad(1, n.G, M), DEFAULT_GAIN, k.HLF) @=> GM0_2;
    c.make(s.triad(1, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> GsM0_2;
    c.make(s.triad(1, n.Af, M), DEFAULT_GAIN, k.HLF) @=> AfM0_2;
    c.make(s.triad(1, n.A, M), DEFAULT_GAIN, k.HLF) @=> AM0_2;
    c.make(s.triad(1, n.As, M), DEFAULT_GAIN, k.HLF) @=> AsM0_2;
    c.make(s.triad(1, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> BfM0_2;
    c.make(s.triad(1, n.B, M), DEFAULT_GAIN, k.HLF) @=> BM0_2;

    c.make(s.triad(2, n.C, M), DEFAULT_GAIN, k.HLF) @=> CM1_2;
    c.make(s.triad(2, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> CsM1_2;
    c.make(s.triad(2, n.D, M), DEFAULT_GAIN, k.HLF) @=> DM1_2;
    c.make(s.triad(2, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> DsM1_2;
    c.make(s.triad(2, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> EfM1_2;
    c.make(s.triad(2, n.E, M), DEFAULT_GAIN, k.HLF) @=> EM1_2;
    c.make(s.triad(2, n.F, M), DEFAULT_GAIN, k.HLF) @=> FM1_2;
    c.make(s.triad(2, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> FsM1_2;
    c.make(s.triad(2, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> GfM1_2;
    c.make(s.triad(2, n.G, M), DEFAULT_GAIN, k.HLF) @=> GM1_2;
    c.make(s.triad(2, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> GsM1_2;
    c.make(s.triad(2, n.Af, M), DEFAULT_GAIN, k.HLF) @=> AfM1_2;
    c.make(s.triad(2, n.A, M), DEFAULT_GAIN, k.HLF) @=> AM1_2;
    c.make(s.triad(2, n.As, M), DEFAULT_GAIN, k.HLF) @=> AsM1_2;
    c.make(s.triad(2, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> BfM1_2;
    c.make(s.triad(2, n.B, M), DEFAULT_GAIN, k.HLF) @=> BM1_2;

    c.make(s.triad(3, n.C, M), DEFAULT_GAIN, k.HLF) @=> CM2_2;
    c.make(s.triad(3, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> CsM2_2;
    c.make(s.triad(3, n.D, M), DEFAULT_GAIN, k.HLF) @=> DM2_2;
    c.make(s.triad(3, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> DsM2_2;
    c.make(s.triad(3, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> EfM2_2;
    c.make(s.triad(3, n.E, M), DEFAULT_GAIN, k.HLF) @=> EM2_2;
    c.make(s.triad(3, n.F, M), DEFAULT_GAIN, k.HLF) @=> FM2_2;
    c.make(s.triad(3, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> FsM2_2;
    c.make(s.triad(3, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> GfM2_2;
    c.make(s.triad(3, n.G, M), DEFAULT_GAIN, k.HLF) @=> GM2_2;
    c.make(s.triad(3, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> GsM2_2;
    c.make(s.triad(3, n.Af, M), DEFAULT_GAIN, k.HLF) @=> AfM2_2;
    c.make(s.triad(3, n.A, M), DEFAULT_GAIN, k.HLF) @=> AM2_2;
    c.make(s.triad(3, n.As, M), DEFAULT_GAIN, k.HLF) @=> AsM2_2;
    c.make(s.triad(3, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> BfM2_2;
    c.make(s.triad(3, n.B, M), DEFAULT_GAIN, k.HLF) @=> BM2_2;

    c.make(s.triad(4, n.C, M), DEFAULT_GAIN, k.HLF) @=> CM3_2;
    c.make(s.triad(4, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> CsM3_2;
    c.make(s.triad(4, n.D, M), DEFAULT_GAIN, k.HLF) @=> DM3_2;
    c.make(s.triad(4, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> DsM3_2;
    c.make(s.triad(4, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> EfM3_2;
    c.make(s.triad(4, n.E, M), DEFAULT_GAIN, k.HLF) @=> EM3_2;
    c.make(s.triad(4, n.F, M), DEFAULT_GAIN, k.HLF) @=> FM3_2;
    c.make(s.triad(4, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> FsM3_2;
    c.make(s.triad(4, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> GfM3_2;
    c.make(s.triad(4, n.G, M), DEFAULT_GAIN, k.HLF) @=> GM3_2;
    c.make(s.triad(4, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> GsM3_2;
    c.make(s.triad(4, n.Af, M), DEFAULT_GAIN, k.HLF) @=> AfM3_2;
    c.make(s.triad(4, n.A, M), DEFAULT_GAIN, k.HLF) @=> AM3_2;
    c.make(s.triad(4, n.As, M), DEFAULT_GAIN, k.HLF) @=> AsM3_2;
    c.make(s.triad(4, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> BfM3_2;
    c.make(s.triad(4, n.B, M), DEFAULT_GAIN, k.HLF) @=> BM3_2;

    c.make(s.triad(5, n.C, M), DEFAULT_GAIN, k.HLF) @=> CM4_2;
    c.make(s.triad(5, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> CsM4_2;
    c.make(s.triad(5, n.D, M), DEFAULT_GAIN, k.HLF) @=> DM4_2;
    c.make(s.triad(5, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> DsM4_2;
    c.make(s.triad(5, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> EfM4_2;
    c.make(s.triad(5, n.E, M), DEFAULT_GAIN, k.HLF) @=> EM4_2;
    c.make(s.triad(5, n.F, M), DEFAULT_GAIN, k.HLF) @=> FM4_2;
    c.make(s.triad(5, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> FsM4_2;
    c.make(s.triad(5, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> GfM4_2;
    c.make(s.triad(5, n.G, M), DEFAULT_GAIN, k.HLF) @=> GM4_2;
    c.make(s.triad(5, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> GsM4_2;
    c.make(s.triad(5, n.Af, M), DEFAULT_GAIN, k.HLF) @=> AfM4_2;
    c.make(s.triad(5, n.A, M), DEFAULT_GAIN, k.HLF) @=> AM4_2;
    c.make(s.triad(5, n.As, M), DEFAULT_GAIN, k.HLF) @=> AsM4_2;
    c.make(s.triad(5, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> BfM4_2;
    c.make(s.triad(5, n.B, M), DEFAULT_GAIN, k.HLF) @=> BM4_2;

    c.make(s.triad(6, n.C, M), DEFAULT_GAIN, k.HLF) @=> CM5_2;
    c.make(s.triad(6, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> CsM5_2;
    c.make(s.triad(6, n.D, M), DEFAULT_GAIN, k.HLF) @=> DM5_2;
    c.make(s.triad(6, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> DsM5_2;
    c.make(s.triad(6, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> EfM5_2;
    c.make(s.triad(6, n.E, M), DEFAULT_GAIN, k.HLF) @=> EM5_2;
    c.make(s.triad(6, n.F, M), DEFAULT_GAIN, k.HLF) @=> FM5_2;
    c.make(s.triad(6, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> FsM5_2;
    c.make(s.triad(6, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> GfM5_2;
    c.make(s.triad(6, n.G, M), DEFAULT_GAIN, k.HLF) @=> GM5_2;
    c.make(s.triad(6, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> GsM5_2;
    c.make(s.triad(6, n.Af, M), DEFAULT_GAIN, k.HLF) @=> AfM5_2;
    c.make(s.triad(6, n.A, M), DEFAULT_GAIN, k.HLF) @=> AM5_2;
    c.make(s.triad(6, n.As, M), DEFAULT_GAIN, k.HLF) @=> AsM5_2;
    c.make(s.triad(6, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> BfM5_2;
    c.make(s.triad(6, n.B, M), DEFAULT_GAIN, k.HLF) @=> BM5_2;

    c.make(s.triad(7, n.C, M), DEFAULT_GAIN, k.HLF) @=> CM6_2;
    c.make(s.triad(7, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> CsM6_2;
    c.make(s.triad(7, n.D, M), DEFAULT_GAIN, k.HLF) @=> DM6_2;
    c.make(s.triad(7, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> DsM6_2;
    c.make(s.triad(7, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> EfM6_2;
    c.make(s.triad(7, n.E, M), DEFAULT_GAIN, k.HLF) @=> EM6_2;
    c.make(s.triad(7, n.F, M), DEFAULT_GAIN, k.HLF) @=> FM6_2;
    c.make(s.triad(7, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> FsM6_2;
    c.make(s.triad(7, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> GfM6_2;
    c.make(s.triad(7, n.G, M), DEFAULT_GAIN, k.HLF) @=> GM6_2;
    c.make(s.triad(7, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> GsM6_2;
    c.make(s.triad(7, n.Af, M), DEFAULT_GAIN, k.HLF) @=> AfM6_2;
    c.make(s.triad(7, n.A, M), DEFAULT_GAIN, k.HLF) @=> AM6_2;
    c.make(s.triad(7, n.As, M), DEFAULT_GAIN, k.HLF) @=> AsM6_2;
    c.make(s.triad(7, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> BfM6_2;
    c.make(s.triad(7, n.B, M), DEFAULT_GAIN, k.HLF) @=> BM6_2;

    c.make(s.triad(8, n.C, M), DEFAULT_GAIN, k.HLF) @=> CM7_2;
    c.make(s.triad(8, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> CsM7_2;
    c.make(s.triad(8, n.D, M), DEFAULT_GAIN, k.HLF) @=> DM7_2;
    c.make(s.triad(8, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> DsM7_2;
    c.make(s.triad(8, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> EfM7_2;
    c.make(s.triad(8, n.E, M), DEFAULT_GAIN, k.HLF) @=> EM7_2;
    c.make(s.triad(8, n.F, M), DEFAULT_GAIN, k.HLF) @=> FM7_2;
    c.make(s.triad(8, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> FsM7_2;
    c.make(s.triad(8, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> GfM7_2;
    c.make(s.triad(8, n.G, M), DEFAULT_GAIN, k.HLF) @=> GM7_2;
    c.make(s.triad(8, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> GsM7_2;
    c.make(s.triad(8, n.Af, M), DEFAULT_GAIN, k.HLF) @=> AfM7_2;
    c.make(s.triad(8, n.A, M), DEFAULT_GAIN, k.HLF) @=> AM7_2;
    c.make(s.triad(8, n.As, M), DEFAULT_GAIN, k.HLF) @=> AsM7_2;
    c.make(s.triad(8, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> BfM7_2;
    c.make(s.triad(8, n.B, M), DEFAULT_GAIN, k.HLF) @=> BM7_2;

    c.make(s.triad(9, n.C, M), DEFAULT_GAIN, k.HLF) @=> CM8_2;
    c.make(s.triad(9, n.Cs, M), DEFAULT_GAIN, k.HLF) @=> CsM8_2;
    c.make(s.triad(9, n.D, M), DEFAULT_GAIN, k.HLF) @=> DM8_2;
    c.make(s.triad(9, n.Ds, M), DEFAULT_GAIN, k.HLF) @=> DsM8_2;
    c.make(s.triad(9, n.Ef, M), DEFAULT_GAIN, k.HLF) @=> EfM8_2;
    c.make(s.triad(9, n.E, M), DEFAULT_GAIN, k.HLF) @=> EM8_2;
    c.make(s.triad(9, n.F, M), DEFAULT_GAIN, k.HLF) @=> FM8_2;
    c.make(s.triad(9, n.Fs, M), DEFAULT_GAIN, k.HLF) @=> FsM8_2;
    c.make(s.triad(9, n.Gf, M), DEFAULT_GAIN, k.HLF) @=> GfM8_2;
    c.make(s.triad(9, n.G, M), DEFAULT_GAIN, k.HLF) @=> GM8_2;
    c.make(s.triad(9, n.Gs, M), DEFAULT_GAIN, k.HLF) @=> GsM8_2;
    c.make(s.triad(9, n.Af, M), DEFAULT_GAIN, k.HLF) @=> AfM8_2;
    c.make(s.triad(9, n.A, M), DEFAULT_GAIN, k.HLF) @=> AM8_2;
    c.make(s.triad(9, n.As, M), DEFAULT_GAIN, k.HLF) @=> AsM8_2;
    c.make(s.triad(9, n.Bf, M), DEFAULT_GAIN, k.HLF) @=> BfM8_2;
    c.make(s.triad(9, n.B, M), DEFAULT_GAIN, k.HLF) @=> BM8_2;

    // Minor
    c.make(s.triad(0, n.C, m), DEFAULT_GAIN, k.HLF) @=> Cm_2;
    c.make(s.triad(0, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Csm_2;
    c.make(s.triad(0, n.D, m), DEFAULT_GAIN, k.HLF) @=> Dm_2;
    c.make(s.triad(0, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Dsm_2;
    c.make(s.triad(0, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Efm_2;
    c.make(s.triad(0, n.E, m), DEFAULT_GAIN, k.HLF) @=> Em_2;
    c.make(s.triad(0, n.F, m), DEFAULT_GAIN, k.HLF) @=> _Fm_2;
    c.make(s.triad(0, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Fsm_2;
    c.make(s.triad(0, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Gfm_2;
    c.make(s.triad(0, n.G, m), DEFAULT_GAIN, k.HLF) @=> Gm_2;
    c.make(s.triad(0, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Gsm_2;
    c.make(s.triad(0, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Afm_2;
    c.make(s.triad(0, n.A, m), DEFAULT_GAIN, k.HLF) @=> Am_2;
    c.make(s.triad(0, n.As, m), DEFAULT_GAIN, k.HLF) @=> Asm_2;
    c.make(s.triad(0, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Bfm_2;
    c.make(s.triad(0, n.B, m), DEFAULT_GAIN, k.HLF) @=> Bm_2;

    c.make(s.triad(1, n.C, m), DEFAULT_GAIN, k.HLF) @=> Cm0_2;
    c.make(s.triad(1, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Csm0_2;
    c.make(s.triad(1, n.D, m), DEFAULT_GAIN, k.HLF) @=> Dm0_2;
    c.make(s.triad(1, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Dsm0_2;
    c.make(s.triad(1, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Efm0_2;
    c.make(s.triad(1, n.E, m), DEFAULT_GAIN, k.HLF) @=> Em0_2;
    c.make(s.triad(1, n.F, m), DEFAULT_GAIN, k.HLF) @=> _Fm0_2;
    c.make(s.triad(1, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Fsm0_2;
    c.make(s.triad(1, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Gfm0_2;
    c.make(s.triad(1, n.G, m), DEFAULT_GAIN, k.HLF) @=> Gm0_2;
    c.make(s.triad(1, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Gsm0_2;
    c.make(s.triad(1, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Afm0_2;
    c.make(s.triad(1, n.A, m), DEFAULT_GAIN, k.HLF) @=> Am0_2;
    c.make(s.triad(1, n.As, m), DEFAULT_GAIN, k.HLF) @=> Asm0_2;
    c.make(s.triad(1, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Bfm0_2;
    c.make(s.triad(1, n.B, m), DEFAULT_GAIN, k.HLF) @=> Bm0_2;

    c.make(s.triad(2, n.C, m), DEFAULT_GAIN, k.HLF) @=> Cm1_2;
    c.make(s.triad(2, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Csm1_2;
    c.make(s.triad(2, n.D, m), DEFAULT_GAIN, k.HLF) @=> Dm1_2;
    c.make(s.triad(2, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Dsm1_2;
    c.make(s.triad(2, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Efm1_2;
    c.make(s.triad(2, n.E, m), DEFAULT_GAIN, k.HLF) @=> Em1_2;
    c.make(s.triad(2, n.F, m), DEFAULT_GAIN, k.HLF) @=> _Fm1_2;
    c.make(s.triad(2, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Fsm1_2;
    c.make(s.triad(2, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Gfm1_2;
    c.make(s.triad(2, n.G, m), DEFAULT_GAIN, k.HLF) @=> Gm1_2;
    c.make(s.triad(2, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Gsm1_2;
    c.make(s.triad(2, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Afm1_2;
    c.make(s.triad(2, n.A, m), DEFAULT_GAIN, k.HLF) @=> Am1_2;
    c.make(s.triad(2, n.As, m), DEFAULT_GAIN, k.HLF) @=> Asm1_2;
    c.make(s.triad(2, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Bfm1_2;
    c.make(s.triad(2, n.B, m), DEFAULT_GAIN, k.HLF) @=> Bm1_2;

    c.make(s.triad(3, n.C, m), DEFAULT_GAIN, k.HLF) @=> Cm2_2;
    c.make(s.triad(3, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Csm2_2;
    c.make(s.triad(3, n.D, m), DEFAULT_GAIN, k.HLF) @=> Dm2_2;
    c.make(s.triad(3, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Dsm2_2;
    c.make(s.triad(3, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Efm2_2;
    c.make(s.triad(3, n.E, m), DEFAULT_GAIN, k.HLF) @=> Em2_2;
    c.make(s.triad(3, n.F, m), DEFAULT_GAIN, k.HLF) @=> _Fm2_2;
    c.make(s.triad(3, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Fsm2_2;
    c.make(s.triad(3, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Gfm2_2;
    c.make(s.triad(3, n.G, m), DEFAULT_GAIN, k.HLF) @=> Gm2_2;
    c.make(s.triad(3, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Gsm2_2;
    c.make(s.triad(3, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Afm2_2;
    c.make(s.triad(3, n.A, m), DEFAULT_GAIN, k.HLF) @=> Am2_2;
    c.make(s.triad(3, n.As, m), DEFAULT_GAIN, k.HLF) @=> Asm2_2;
    c.make(s.triad(3, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Bfm2_2;
    c.make(s.triad(3, n.B, m), DEFAULT_GAIN, k.HLF) @=> Bm2_2;

    c.make(s.triad(4, n.C, m), DEFAULT_GAIN, k.HLF) @=> Cm3_2;
    c.make(s.triad(4, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Csm3_2;
    c.make(s.triad(4, n.D, m), DEFAULT_GAIN, k.HLF) @=> Dm3_2;
    c.make(s.triad(4, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Dsm3_2;
    c.make(s.triad(4, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Efm3_2;
    c.make(s.triad(4, n.E, m), DEFAULT_GAIN, k.HLF) @=> Em3_2;
    c.make(s.triad(4, n.F, m), DEFAULT_GAIN, k.HLF) @=> _Fm3_2;
    c.make(s.triad(4, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Fsm3_2;
    c.make(s.triad(4, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Gfm3_2;
    c.make(s.triad(4, n.G, m), DEFAULT_GAIN, k.HLF) @=> Gm3_2;
    c.make(s.triad(4, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Gsm3_2;
    c.make(s.triad(4, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Afm3_2;
    c.make(s.triad(4, n.A, m), DEFAULT_GAIN, k.HLF) @=> Am3_2;
    c.make(s.triad(4, n.As, m), DEFAULT_GAIN, k.HLF) @=> Asm3_2;
    c.make(s.triad(4, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Bfm3_2;
    c.make(s.triad(4, n.B, m), DEFAULT_GAIN, k.HLF) @=> Bm3_2;

    c.make(s.triad(5, n.C, m), DEFAULT_GAIN, k.HLF) @=> Cm4_2;
    c.make(s.triad(5, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Csm4_2;
    c.make(s.triad(5, n.D, m), DEFAULT_GAIN, k.HLF) @=> Dm4_2;
    c.make(s.triad(5, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Dsm4_2;
    c.make(s.triad(5, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Efm4_2;
    c.make(s.triad(5, n.E, m), DEFAULT_GAIN, k.HLF) @=> Em4_2;
    c.make(s.triad(5, n.F, m), DEFAULT_GAIN, k.HLF) @=> _Fm4_2;
    c.make(s.triad(5, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Fsm4_2;
    c.make(s.triad(5, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Gfm4_2;
    c.make(s.triad(5, n.G, m), DEFAULT_GAIN, k.HLF) @=> Gm4_2;
    c.make(s.triad(5, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Gsm4_2;
    c.make(s.triad(5, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Afm4_2;
    c.make(s.triad(5, n.A, m), DEFAULT_GAIN, k.HLF) @=> Am4_2;
    c.make(s.triad(5, n.As, m), DEFAULT_GAIN, k.HLF) @=> Asm4_2;
    c.make(s.triad(5, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Bfm4_2;
    c.make(s.triad(5, n.B, m), DEFAULT_GAIN, k.HLF) @=> Bm4_2;

    c.make(s.triad(6, n.C, m), DEFAULT_GAIN, k.HLF) @=> Cm5_2;
    c.make(s.triad(6, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Csm5_2;
    c.make(s.triad(6, n.D, m), DEFAULT_GAIN, k.HLF) @=> Dm5_2;
    c.make(s.triad(6, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Dsm5_2;
    c.make(s.triad(6, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Efm5_2;
    c.make(s.triad(6, n.E, m), DEFAULT_GAIN, k.HLF) @=> Em5_2;
    c.make(s.triad(6, n.F, m), DEFAULT_GAIN, k.HLF) @=> _Fm5_2;
    c.make(s.triad(6, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Fsm5_2;
    c.make(s.triad(6, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Gfm5_2;
    c.make(s.triad(6, n.G, m), DEFAULT_GAIN, k.HLF) @=> Gm5_2;
    c.make(s.triad(6, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Gsm5_2;
    c.make(s.triad(6, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Afm5_2;
    c.make(s.triad(6, n.A, m), DEFAULT_GAIN, k.HLF) @=> Am5_2;
    c.make(s.triad(6, n.As, m), DEFAULT_GAIN, k.HLF) @=> Asm5_2;
    c.make(s.triad(6, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Bfm5_2;
    c.make(s.triad(6, n.B, m), DEFAULT_GAIN, k.HLF) @=> Bm5_2;

    c.make(s.triad(7, n.C, m), DEFAULT_GAIN, k.HLF) @=> Cm6_2;
    c.make(s.triad(7, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Csm6_2;
    c.make(s.triad(7, n.D, m), DEFAULT_GAIN, k.HLF) @=> Dm6_2;
    c.make(s.triad(7, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Dsm6_2;
    c.make(s.triad(7, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Efm6_2;
    c.make(s.triad(7, n.E, m), DEFAULT_GAIN, k.HLF) @=> Em6_2;
    c.make(s.triad(7, n.F, m), DEFAULT_GAIN, k.HLF) @=> _Fm6_2;
    c.make(s.triad(7, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Fsm6_2;
    c.make(s.triad(7, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Gfm6_2;
    c.make(s.triad(7, n.G, m), DEFAULT_GAIN, k.HLF) @=> Gm6_2;
    c.make(s.triad(7, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Gsm6_2;
    c.make(s.triad(7, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Afm6_2;
    c.make(s.triad(7, n.A, m), DEFAULT_GAIN, k.HLF) @=> Am6_2;
    c.make(s.triad(7, n.As, m), DEFAULT_GAIN, k.HLF) @=> Asm6_2;
    c.make(s.triad(7, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Bfm6_2;
    c.make(s.triad(7, n.B, m), DEFAULT_GAIN, k.HLF) @=> Bm6_2;

    c.make(s.triad(8, n.C, m), DEFAULT_GAIN, k.HLF) @=> Cm7_2;
    c.make(s.triad(8, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Csm7_2;
    c.make(s.triad(8, n.D, m), DEFAULT_GAIN, k.HLF) @=> Dm7_2;
    c.make(s.triad(8, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Dsm7_2;
    c.make(s.triad(8, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Efm7_2;
    c.make(s.triad(8, n.E, m), DEFAULT_GAIN, k.HLF) @=> Em7_2;
    c.make(s.triad(8, n.F, m), DEFAULT_GAIN, k.HLF) @=> _Fm7_2;
    c.make(s.triad(8, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Fsm7_2;
    c.make(s.triad(8, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Gfm7_2;
    c.make(s.triad(8, n.G, m), DEFAULT_GAIN, k.HLF) @=> Gm7_2;
    c.make(s.triad(8, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Gsm7_2;
    c.make(s.triad(8, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Afm7_2;
    c.make(s.triad(8, n.A, m), DEFAULT_GAIN, k.HLF) @=> Am7_2;
    c.make(s.triad(8, n.As, m), DEFAULT_GAIN, k.HLF) @=> Asm7_2;
    c.make(s.triad(8, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Bfm7_2;
    c.make(s.triad(8, n.B, m), DEFAULT_GAIN, k.HLF) @=> Bm7_2;

    c.make(s.triad(9, n.C, m), DEFAULT_GAIN, k.HLF) @=> Cm8_2;
    c.make(s.triad(9, n.Cs, m), DEFAULT_GAIN, k.HLF) @=> Csm8_2;
    c.make(s.triad(9, n.D, m), DEFAULT_GAIN, k.HLF) @=> Dm8_2;
    c.make(s.triad(9, n.Ds, m), DEFAULT_GAIN, k.HLF) @=> Dsm8_2;
    c.make(s.triad(9, n.Ef, m), DEFAULT_GAIN, k.HLF) @=> Efm8_2;
    c.make(s.triad(9, n.E, m), DEFAULT_GAIN, k.HLF) @=> Em8_2;
    c.make(s.triad(9, n.F, m), DEFAULT_GAIN, k.HLF) @=> _Fm8_2;
    c.make(s.triad(9, n.Fs, m), DEFAULT_GAIN, k.HLF) @=> Fsm8_2;
    c.make(s.triad(9, n.Gf, m), DEFAULT_GAIN, k.HLF) @=> Gfm8_2;
    c.make(s.triad(9, n.G, m), DEFAULT_GAIN, k.HLF) @=> Gm8_2;
    c.make(s.triad(9, n.Gs, m), DEFAULT_GAIN, k.HLF) @=> Gsm8_2;
    c.make(s.triad(9, n.Af, m), DEFAULT_GAIN, k.HLF) @=> Afm8_2;
    c.make(s.triad(9, n.A, m), DEFAULT_GAIN, k.HLF) @=> Am8_2;
    c.make(s.triad(9, n.As, m), DEFAULT_GAIN, k.HLF) @=> Asm8_2;
    c.make(s.triad(9, n.Bf, m), DEFAULT_GAIN, k.HLF) @=> Bfm8_2;
    c.make(s.triad(9, n.B, m), DEFAULT_GAIN, k.HLF) @=> Bm8_2;

    // Augmented
    c.make(s.triad(0, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Caug_2;
    c.make(s.triad(0, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Csaug_2;
    c.make(s.triad(0, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Daug_2;
    c.make(s.triad(0, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Dsaug_2;
    c.make(s.triad(0, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Efaug_2;
    c.make(s.triad(0, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Eaug_2;
    c.make(s.triad(0, n.F, aug), DEFAULT_GAIN, k.HLF) @=> _Faug_2;
    c.make(s.triad(0, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Fsaug_2;
    c.make(s.triad(0, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Gfaug_2;
    c.make(s.triad(0, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Gaug_2;
    c.make(s.triad(0, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Gsaug_2;
    c.make(s.triad(0, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Afaug_2;
    c.make(s.triad(0, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Aaug_2;
    c.make(s.triad(0, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Asaug_2;
    c.make(s.triad(0, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Bfaug_2;
    c.make(s.triad(0, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Baug_2;

    c.make(s.triad(1, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Caug0_2;
    c.make(s.triad(1, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Csaug0_2;
    c.make(s.triad(1, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Daug0_2;
    c.make(s.triad(1, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Dsaug0_2;
    c.make(s.triad(1, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Efaug0_2;
    c.make(s.triad(1, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Eaug0_2;
    c.make(s.triad(1, n.F, aug), DEFAULT_GAIN, k.HLF) @=> _Faug0_2;
    c.make(s.triad(1, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Fsaug0_2;
    c.make(s.triad(1, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Gfaug0_2;
    c.make(s.triad(1, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Gaug0_2;
    c.make(s.triad(1, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Gsaug0_2;
    c.make(s.triad(1, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Afaug0_2;
    c.make(s.triad(1, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Aaug0_2;
    c.make(s.triad(1, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Asaug0_2;
    c.make(s.triad(1, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Bfaug0_2;
    c.make(s.triad(1, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Baug0_2;

    c.make(s.triad(2, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Caug1_2;
    c.make(s.triad(2, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Csaug1_2;
    c.make(s.triad(2, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Daug1_2;
    c.make(s.triad(2, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Dsaug1_2;
    c.make(s.triad(2, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Efaug1_2;
    c.make(s.triad(2, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Eaug1_2;
    c.make(s.triad(2, n.F, aug), DEFAULT_GAIN, k.HLF) @=> _Faug1_2;
    c.make(s.triad(2, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Fsaug1_2;
    c.make(s.triad(2, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Gfaug1_2;
    c.make(s.triad(2, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Gaug1_2;
    c.make(s.triad(2, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Gsaug1_2;
    c.make(s.triad(2, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Afaug1_2;
    c.make(s.triad(2, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Aaug1_2;
    c.make(s.triad(2, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Asaug1_2;
    c.make(s.triad(2, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Bfaug1_2;
    c.make(s.triad(2, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Baug1_2;

    c.make(s.triad(3, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Caug2_2;
    c.make(s.triad(3, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Csaug2_2;
    c.make(s.triad(3, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Daug2_2;
    c.make(s.triad(3, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Dsaug2_2;
    c.make(s.triad(3, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Efaug2_2;
    c.make(s.triad(3, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Eaug2_2;
    c.make(s.triad(3, n.F, aug), DEFAULT_GAIN, k.HLF) @=> _Faug2_2;
    c.make(s.triad(3, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Fsaug2_2;
    c.make(s.triad(3, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Gfaug2_2;
    c.make(s.triad(3, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Gaug2_2;
    c.make(s.triad(3, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Gsaug2_2;
    c.make(s.triad(3, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Afaug2_2;
    c.make(s.triad(3, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Aaug2_2;
    c.make(s.triad(3, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Asaug2_2;
    c.make(s.triad(3, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Bfaug2_2;
    c.make(s.triad(3, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Baug2_2;

    c.make(s.triad(4, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Caug3_2;
    c.make(s.triad(4, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Csaug3_2;
    c.make(s.triad(4, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Daug3_2;
    c.make(s.triad(4, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Dsaug3_2;
    c.make(s.triad(4, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Efaug3_2;
    c.make(s.triad(4, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Eaug3_2;
    c.make(s.triad(4, n.F, aug), DEFAULT_GAIN, k.HLF) @=> _Faug3_2;
    c.make(s.triad(4, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Fsaug3_2;
    c.make(s.triad(4, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Gfaug3_2;
    c.make(s.triad(4, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Gaug3_2;
    c.make(s.triad(4, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Gsaug3_2;
    c.make(s.triad(4, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Afaug3_2;
    c.make(s.triad(4, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Aaug3_2;
    c.make(s.triad(4, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Asaug3_2;
    c.make(s.triad(4, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Bfaug3_2;
    c.make(s.triad(4, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Baug3_2;

    c.make(s.triad(5, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Caug4_2;
    c.make(s.triad(5, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Csaug4_2;
    c.make(s.triad(5, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Daug4_2;
    c.make(s.triad(5, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Dsaug4_2;
    c.make(s.triad(5, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Efaug4_2;
    c.make(s.triad(5, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Eaug4_2;
    c.make(s.triad(5, n.F, aug), DEFAULT_GAIN, k.HLF) @=> _Faug4_2;
    c.make(s.triad(5, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Fsaug4_2;
    c.make(s.triad(5, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Gfaug4_2;
    c.make(s.triad(5, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Gaug4_2;
    c.make(s.triad(5, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Gsaug4_2;
    c.make(s.triad(5, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Afaug4_2;
    c.make(s.triad(5, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Aaug4_2;
    c.make(s.triad(5, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Asaug4_2;
    c.make(s.triad(5, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Bfaug4_2;
    c.make(s.triad(5, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Baug4_2;

    c.make(s.triad(6, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Caug5_2;
    c.make(s.triad(6, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Csaug5_2;
    c.make(s.triad(6, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Daug5_2;
    c.make(s.triad(6, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Dsaug5_2;
    c.make(s.triad(6, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Efaug5_2;
    c.make(s.triad(6, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Eaug5_2;
    c.make(s.triad(6, n.F, aug), DEFAULT_GAIN, k.HLF) @=> _Faug5_2;
    c.make(s.triad(6, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Fsaug5_2;
    c.make(s.triad(6, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Gfaug5_2;
    c.make(s.triad(6, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Gaug5_2;
    c.make(s.triad(6, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Gsaug5_2;
    c.make(s.triad(6, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Afaug5_2;
    c.make(s.triad(6, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Aaug5_2;
    c.make(s.triad(6, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Asaug5_2;
    c.make(s.triad(6, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Bfaug5_2;
    c.make(s.triad(6, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Baug5_2;

    c.make(s.triad(7, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Caug6_2;
    c.make(s.triad(7, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Csaug6_2;
    c.make(s.triad(7, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Daug6_2;
    c.make(s.triad(7, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Dsaug6_2;
    c.make(s.triad(7, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Efaug6_2;
    c.make(s.triad(7, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Eaug6_2;
    c.make(s.triad(7, n.F, aug), DEFAULT_GAIN, k.HLF) @=> _Faug6_2;
    c.make(s.triad(7, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Fsaug6_2;
    c.make(s.triad(7, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Gfaug6_2;
    c.make(s.triad(7, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Gaug6_2;
    c.make(s.triad(7, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Gsaug6_2;
    c.make(s.triad(7, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Afaug6_2;
    c.make(s.triad(7, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Aaug6_2;
    c.make(s.triad(7, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Asaug6_2;
    c.make(s.triad(7, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Bfaug6_2;
    c.make(s.triad(7, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Baug6_2;

    c.make(s.triad(8, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Caug7_2;
    c.make(s.triad(8, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Csaug7_2;
    c.make(s.triad(8, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Daug7_2;
    c.make(s.triad(8, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Dsaug7_2;
    c.make(s.triad(8, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Efaug7_2;
    c.make(s.triad(8, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Eaug7_2;
    c.make(s.triad(8, n.F, aug), DEFAULT_GAIN, k.HLF) @=> _Faug7_2;
    c.make(s.triad(8, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Fsaug7_2;
    c.make(s.triad(8, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Gfaug7_2;
    c.make(s.triad(8, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Gaug7_2;
    c.make(s.triad(8, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Gsaug7_2;
    c.make(s.triad(8, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Afaug7_2;
    c.make(s.triad(8, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Aaug7_2;
    c.make(s.triad(8, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Asaug7_2;
    c.make(s.triad(8, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Bfaug7_2;
    c.make(s.triad(8, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Baug7_2;

    c.make(s.triad(9, n.C, aug), DEFAULT_GAIN, k.HLF) @=> Caug8_2;
    c.make(s.triad(9, n.Cs, aug), DEFAULT_GAIN, k.HLF) @=> Csaug8_2;
    c.make(s.triad(9, n.D, aug), DEFAULT_GAIN, k.HLF) @=> Daug8_2;
    c.make(s.triad(9, n.Ds, aug), DEFAULT_GAIN, k.HLF) @=> Dsaug8_2;
    c.make(s.triad(9, n.Ef, aug), DEFAULT_GAIN, k.HLF) @=> Efaug8_2;
    c.make(s.triad(9, n.E, aug), DEFAULT_GAIN, k.HLF) @=> Eaug8_2;
    c.make(s.triad(9, n.F, aug), DEFAULT_GAIN, k.HLF) @=> _Faug8_2;
    c.make(s.triad(9, n.Fs, aug), DEFAULT_GAIN, k.HLF) @=> Fsaug8_2;
    c.make(s.triad(9, n.Gf, aug), DEFAULT_GAIN, k.HLF) @=> Gfaug8_2;
    c.make(s.triad(9, n.G, aug), DEFAULT_GAIN, k.HLF) @=> Gaug8_2;
    c.make(s.triad(9, n.Gs, aug), DEFAULT_GAIN, k.HLF) @=> Gsaug8_2;
    c.make(s.triad(9, n.Af, aug), DEFAULT_GAIN, k.HLF) @=> Afaug8_2;
    c.make(s.triad(9, n.A, aug), DEFAULT_GAIN, k.HLF) @=> Aaug8_2;
    c.make(s.triad(9, n.As, aug), DEFAULT_GAIN, k.HLF) @=> Asaug8_2;
    c.make(s.triad(9, n.Bf, aug), DEFAULT_GAIN, k.HLF) @=> Bfaug8_2;
    c.make(s.triad(9, n.B, aug), DEFAULT_GAIN, k.HLF) @=> Baug8_2;

    // Diminished
    c.make(s.triad(0, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Cdim_2;
    c.make(s.triad(0, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Csdim_2;
    c.make(s.triad(0, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Ddim_2;
    c.make(s.triad(0, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Dsdim_2;
    c.make(s.triad(0, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Efdim_2;
    c.make(s.triad(0, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Edim_2;
    c.make(s.triad(0, n.F, dim), DEFAULT_GAIN, k.HLF) @=> _Fdim_2;
    c.make(s.triad(0, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Fsdim_2;
    c.make(s.triad(0, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Gfdim_2;
    c.make(s.triad(0, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Gdim_2;
    c.make(s.triad(0, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Gsdim_2;
    c.make(s.triad(0, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Afdim_2;
    c.make(s.triad(0, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Adim_2;
    c.make(s.triad(0, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Asdim_2;
    c.make(s.triad(0, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Bfdim_2;
    c.make(s.triad(0, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Bdim_2;

    c.make(s.triad(1, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Cdim0_2;
    c.make(s.triad(1, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Csdim0_2;
    c.make(s.triad(1, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Ddim0_2;
    c.make(s.triad(1, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Dsdim0_2;
    c.make(s.triad(1, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Efdim0_2;
    c.make(s.triad(1, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Edim0_2;
    c.make(s.triad(1, n.F, dim), DEFAULT_GAIN, k.HLF) @=> _Fdim0_2;
    c.make(s.triad(1, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Fsdim0_2;
    c.make(s.triad(1, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Gfdim0_2;
    c.make(s.triad(1, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Gdim0_2;
    c.make(s.triad(1, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Gsdim0_2;
    c.make(s.triad(1, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Afdim0_2;
    c.make(s.triad(1, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Adim0_2;
    c.make(s.triad(1, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Asdim0_2;
    c.make(s.triad(1, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Bfdim0_2;
    c.make(s.triad(1, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Bdim0_2;

    c.make(s.triad(2, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Cdim1_2;
    c.make(s.triad(2, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Csdim1_2;
    c.make(s.triad(2, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Ddim1_2;
    c.make(s.triad(2, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Dsdim1_2;
    c.make(s.triad(2, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Efdim1_2;
    c.make(s.triad(2, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Edim1_2;
    c.make(s.triad(2, n.F, dim), DEFAULT_GAIN, k.HLF) @=> _Fdim1_2;
    c.make(s.triad(2, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Fsdim1_2;
    c.make(s.triad(2, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Gfdim1_2;
    c.make(s.triad(2, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Gdim1_2;
    c.make(s.triad(2, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Gsdim1_2;
    c.make(s.triad(2, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Afdim1_2;
    c.make(s.triad(2, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Adim1_2;
    c.make(s.triad(2, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Asdim1_2;
    c.make(s.triad(2, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Bfdim1_2;
    c.make(s.triad(2, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Bdim1_2;

    c.make(s.triad(3, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Cdim2_2;
    c.make(s.triad(3, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Csdim2_2;
    c.make(s.triad(3, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Ddim2_2;
    c.make(s.triad(3, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Dsdim2_2;
    c.make(s.triad(3, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Efdim2_2;
    c.make(s.triad(3, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Edim2_2;
    c.make(s.triad(3, n.F, dim), DEFAULT_GAIN, k.HLF) @=> _Fdim2_2;
    c.make(s.triad(3, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Fsdim2_2;
    c.make(s.triad(3, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Gfdim2_2;
    c.make(s.triad(3, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Gdim2_2;
    c.make(s.triad(3, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Gsdim2_2;
    c.make(s.triad(3, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Afdim2_2;
    c.make(s.triad(3, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Adim2_2;
    c.make(s.triad(3, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Asdim2_2;
    c.make(s.triad(3, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Bfdim2_2;
    c.make(s.triad(3, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Bdim2_2;

    c.make(s.triad(4, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Cdim3_2;
    c.make(s.triad(4, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Csdim3_2;
    c.make(s.triad(4, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Ddim3_2;
    c.make(s.triad(4, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Dsdim3_2;
    c.make(s.triad(4, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Efdim3_2;
    c.make(s.triad(4, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Edim3_2;
    c.make(s.triad(4, n.F, dim), DEFAULT_GAIN, k.HLF) @=> _Fdim3_2;
    c.make(s.triad(4, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Fsdim3_2;
    c.make(s.triad(4, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Gfdim3_2;
    c.make(s.triad(4, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Gdim3_2;
    c.make(s.triad(4, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Gsdim3_2;
    c.make(s.triad(4, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Afdim3_2;
    c.make(s.triad(4, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Adim3_2;
    c.make(s.triad(4, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Asdim3_2;
    c.make(s.triad(4, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Bfdim3_2;
    c.make(s.triad(4, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Bdim3_2;

    c.make(s.triad(5, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Cdim4_2;
    c.make(s.triad(5, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Csdim4_2;
    c.make(s.triad(5, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Ddim4_2;
    c.make(s.triad(5, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Dsdim4_2;
    c.make(s.triad(5, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Efdim4_2;
    c.make(s.triad(5, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Edim4_2;
    c.make(s.triad(5, n.F, dim), DEFAULT_GAIN, k.HLF) @=> _Fdim4_2;
    c.make(s.triad(5, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Fsdim4_2;
    c.make(s.triad(5, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Gfdim4_2;
    c.make(s.triad(5, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Gdim4_2;
    c.make(s.triad(5, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Gsdim4_2;
    c.make(s.triad(5, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Afdim4_2;
    c.make(s.triad(5, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Adim4_2;
    c.make(s.triad(5, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Asdim4_2;
    c.make(s.triad(5, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Bfdim4_2;
    c.make(s.triad(5, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Bdim4_2;

    c.make(s.triad(6, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Cdim5_2;
    c.make(s.triad(6, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Csdim5_2;
    c.make(s.triad(6, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Ddim5_2;
    c.make(s.triad(6, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Dsdim5_2;
    c.make(s.triad(6, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Efdim5_2;
    c.make(s.triad(6, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Edim5_2;
    c.make(s.triad(6, n.F, dim), DEFAULT_GAIN, k.HLF) @=> _Fdim5_2;
    c.make(s.triad(6, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Fsdim5_2;
    c.make(s.triad(6, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Gfdim5_2;
    c.make(s.triad(6, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Gdim5_2;
    c.make(s.triad(6, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Gsdim5_2;
    c.make(s.triad(6, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Afdim5_2;
    c.make(s.triad(6, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Adim5_2;
    c.make(s.triad(6, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Asdim5_2;
    c.make(s.triad(6, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Bfdim5_2;
    c.make(s.triad(6, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Bdim5_2;

    c.make(s.triad(7, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Cdim6_2;
    c.make(s.triad(7, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Csdim6_2;
    c.make(s.triad(7, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Ddim6_2;
    c.make(s.triad(7, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Dsdim6_2;
    c.make(s.triad(7, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Efdim6_2;
    c.make(s.triad(7, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Edim6_2;
    c.make(s.triad(7, n.F, dim), DEFAULT_GAIN, k.HLF) @=> _Fdim6_2;
    c.make(s.triad(7, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Fsdim6_2;
    c.make(s.triad(7, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Gfdim6_2;
    c.make(s.triad(7, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Gdim6_2;
    c.make(s.triad(7, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Gsdim6_2;
    c.make(s.triad(7, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Afdim6_2;
    c.make(s.triad(7, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Adim6_2;
    c.make(s.triad(7, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Asdim6_2;
    c.make(s.triad(7, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Bfdim6_2;
    c.make(s.triad(7, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Bdim6_2;

    c.make(s.triad(8, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Cdim7_2;
    c.make(s.triad(8, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Csdim7_2;
    c.make(s.triad(8, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Ddim7_2;
    c.make(s.triad(8, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Dsdim7_2;
    c.make(s.triad(8, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Efdim7_2;
    c.make(s.triad(8, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Edim7_2;
    c.make(s.triad(8, n.F, dim), DEFAULT_GAIN, k.HLF) @=> _Fdim7_2;
    c.make(s.triad(8, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Fsdim7_2;
    c.make(s.triad(8, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Gfdim7_2;
    c.make(s.triad(8, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Gdim7_2;
    c.make(s.triad(8, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Gsdim7_2;
    c.make(s.triad(8, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Afdim7_2;
    c.make(s.triad(8, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Adim7_2;
    c.make(s.triad(8, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Asdim7_2;
    c.make(s.triad(8, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Bfdim7_2;
    c.make(s.triad(8, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Bdim7_2;

    c.make(s.triad(9, n.C, dim), DEFAULT_GAIN, k.HLF) @=> Cdim8_2;
    c.make(s.triad(9, n.Cs, dim), DEFAULT_GAIN, k.HLF) @=> Csdim8_2;
    c.make(s.triad(9, n.D, dim), DEFAULT_GAIN, k.HLF) @=> Ddim8_2;
    c.make(s.triad(9, n.Ds, dim), DEFAULT_GAIN, k.HLF) @=> Dsdim8_2;
    c.make(s.triad(9, n.Ef, dim), DEFAULT_GAIN, k.HLF) @=> Efdim8_2;
    c.make(s.triad(9, n.E, dim), DEFAULT_GAIN, k.HLF) @=> Edim8_2;
    c.make(s.triad(9, n.F, dim), DEFAULT_GAIN, k.HLF) @=> _Fdim8_2;
    c.make(s.triad(9, n.Fs, dim), DEFAULT_GAIN, k.HLF) @=> Fsdim8_2;
    c.make(s.triad(9, n.Gf, dim), DEFAULT_GAIN, k.HLF) @=> Gfdim8_2;
    c.make(s.triad(9, n.G, dim), DEFAULT_GAIN, k.HLF) @=> Gdim8_2;
    c.make(s.triad(9, n.Gs, dim), DEFAULT_GAIN, k.HLF) @=> Gsdim8_2;
    c.make(s.triad(9, n.Af, dim), DEFAULT_GAIN, k.HLF) @=> Afdim8_2;
    c.make(s.triad(9, n.A, dim), DEFAULT_GAIN, k.HLF) @=> Adim8_2;
    c.make(s.triad(9, n.As, dim), DEFAULT_GAIN, k.HLF) @=> Asdim8_2;
    c.make(s.triad(9, n.Bf, dim), DEFAULT_GAIN, k.HLF) @=> Bfdim8_2;
    c.make(s.triad(9, n.B, dim), DEFAULT_GAIN, k.HLF) @=> Bdim8_2;

    //
    // QRTR
    //

    // Major
    // 0-based offsets
    c.make(s.triad(0, n.C, M), DEFAULT_GAIN, k.QRTR) @=> CM_4;
    c.make(s.triad(0, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> CsM_4;
    c.make(s.triad(0, n.D, M), DEFAULT_GAIN, k.QRTR) @=> DM_4;
    c.make(s.triad(0, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> DsM_4;
    c.make(s.triad(0, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> EfM_4;
    c.make(s.triad(0, n.E, M), DEFAULT_GAIN, k.QRTR) @=> EM_4;
    c.make(s.triad(0, n.F, M), DEFAULT_GAIN, k.QRTR) @=> FM_4;
    c.make(s.triad(0, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> FsM_4;
    c.make(s.triad(0, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> GfM_4;
    c.make(s.triad(0, n.G, M), DEFAULT_GAIN, k.QRTR) @=> GM_4;
    c.make(s.triad(0, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> GsM_4;
    c.make(s.triad(0, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> AfM_4;
    c.make(s.triad(0, n.A, M), DEFAULT_GAIN, k.QRTR) @=> AM_4;
    c.make(s.triad(0, n.As, M), DEFAULT_GAIN, k.QRTR) @=> AsM_4;
    c.make(s.triad(0, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> BfM_4;
    c.make(s.triad(0, n.B, M), DEFAULT_GAIN, k.QRTR) @=> BM_4;

    // constants predefined per octave
    c.make(s.triad(1, n.C, M), DEFAULT_GAIN, k.QRTR) @=> CM0_4;
    c.make(s.triad(1, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> CsM0_4;
    c.make(s.triad(1, n.D, M), DEFAULT_GAIN, k.QRTR) @=> DM0_4;
    c.make(s.triad(1, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> DsM0_4;
    c.make(s.triad(1, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> EfM0_4;
    c.make(s.triad(1, n.E, M), DEFAULT_GAIN, k.QRTR) @=> EM0_4;
    c.make(s.triad(1, n.F, M), DEFAULT_GAIN, k.QRTR) @=> FM0_4;
    c.make(s.triad(1, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> FsM0_4;
    c.make(s.triad(1, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> GfM0_4;
    c.make(s.triad(1, n.G, M), DEFAULT_GAIN, k.QRTR) @=> GM0_4;
    c.make(s.triad(1, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> GsM0_4;
    c.make(s.triad(1, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> AfM0_4;
    c.make(s.triad(1, n.A, M), DEFAULT_GAIN, k.QRTR) @=> AM0_4;
    c.make(s.triad(1, n.As, M), DEFAULT_GAIN, k.QRTR) @=> AsM0_4;
    c.make(s.triad(1, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> BfM0_4;
    c.make(s.triad(1, n.B, M), DEFAULT_GAIN, k.QRTR) @=> BM0_4;

    c.make(s.triad(2, n.C, M), DEFAULT_GAIN, k.QRTR) @=> CM1_4;
    c.make(s.triad(2, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> CsM1_4;
    c.make(s.triad(2, n.D, M), DEFAULT_GAIN, k.QRTR) @=> DM1_4;
    c.make(s.triad(2, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> DsM1_4;
    c.make(s.triad(2, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> EfM1_4;
    c.make(s.triad(2, n.E, M), DEFAULT_GAIN, k.QRTR) @=> EM1_4;
    c.make(s.triad(2, n.F, M), DEFAULT_GAIN, k.QRTR) @=> FM1_4;
    c.make(s.triad(2, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> FsM1_4;
    c.make(s.triad(2, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> GfM1_4;
    c.make(s.triad(2, n.G, M), DEFAULT_GAIN, k.QRTR) @=> GM1_4;
    c.make(s.triad(2, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> GsM1_4;
    c.make(s.triad(2, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> AfM1_4;
    c.make(s.triad(2, n.A, M), DEFAULT_GAIN, k.QRTR) @=> AM1_4;
    c.make(s.triad(2, n.As, M), DEFAULT_GAIN, k.QRTR) @=> AsM1_4;
    c.make(s.triad(2, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> BfM1_4;
    c.make(s.triad(2, n.B, M), DEFAULT_GAIN, k.QRTR) @=> BM1_4;

    c.make(s.triad(3, n.C, M), DEFAULT_GAIN, k.QRTR) @=> CM2_4;
    c.make(s.triad(3, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> CsM2_4;
    c.make(s.triad(3, n.D, M), DEFAULT_GAIN, k.QRTR) @=> DM2_4;
    c.make(s.triad(3, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> DsM2_4;
    c.make(s.triad(3, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> EfM2_4;
    c.make(s.triad(3, n.E, M), DEFAULT_GAIN, k.QRTR) @=> EM2_4;
    c.make(s.triad(3, n.F, M), DEFAULT_GAIN, k.QRTR) @=> FM2_4;
    c.make(s.triad(3, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> FsM2_4;
    c.make(s.triad(3, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> GfM2_4;
    c.make(s.triad(3, n.G, M), DEFAULT_GAIN, k.QRTR) @=> GM2_4;
    c.make(s.triad(3, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> GsM2_4;
    c.make(s.triad(3, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> AfM2_4;
    c.make(s.triad(3, n.A, M), DEFAULT_GAIN, k.QRTR) @=> AM2_4;
    c.make(s.triad(3, n.As, M), DEFAULT_GAIN, k.QRTR) @=> AsM2_4;
    c.make(s.triad(3, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> BfM2_4;
    c.make(s.triad(3, n.B, M), DEFAULT_GAIN, k.QRTR) @=> BM2_4;

    c.make(s.triad(4, n.C, M), DEFAULT_GAIN, k.QRTR) @=> CM3_4;
    c.make(s.triad(4, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> CsM3_4;
    c.make(s.triad(4, n.D, M), DEFAULT_GAIN, k.QRTR) @=> DM3_4;
    c.make(s.triad(4, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> DsM3_4;
    c.make(s.triad(4, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> EfM3_4;
    c.make(s.triad(4, n.E, M), DEFAULT_GAIN, k.QRTR) @=> EM3_4;
    c.make(s.triad(4, n.F, M), DEFAULT_GAIN, k.QRTR) @=> FM3_4;
    c.make(s.triad(4, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> FsM3_4;
    c.make(s.triad(4, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> GfM3_4;
    c.make(s.triad(4, n.G, M), DEFAULT_GAIN, k.QRTR) @=> GM3_4;
    c.make(s.triad(4, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> GsM3_4;
    c.make(s.triad(4, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> AfM3_4;
    c.make(s.triad(4, n.A, M), DEFAULT_GAIN, k.QRTR) @=> AM3_4;
    c.make(s.triad(4, n.As, M), DEFAULT_GAIN, k.QRTR) @=> AsM3_4;
    c.make(s.triad(4, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> BfM3_4;
    c.make(s.triad(4, n.B, M), DEFAULT_GAIN, k.QRTR) @=> BM3_4;

    c.make(s.triad(5, n.C, M), DEFAULT_GAIN, k.QRTR) @=> CM4_4;
    c.make(s.triad(5, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> CsM4_4;
    c.make(s.triad(5, n.D, M), DEFAULT_GAIN, k.QRTR) @=> DM4_4;
    c.make(s.triad(5, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> DsM4_4;
    c.make(s.triad(5, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> EfM4_4;
    c.make(s.triad(5, n.E, M), DEFAULT_GAIN, k.QRTR) @=> EM4_4;
    c.make(s.triad(5, n.F, M), DEFAULT_GAIN, k.QRTR) @=> FM4_4;
    c.make(s.triad(5, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> FsM4_4;
    c.make(s.triad(5, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> GfM4_4;
    c.make(s.triad(5, n.G, M), DEFAULT_GAIN, k.QRTR) @=> GM4_4;
    c.make(s.triad(5, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> GsM4_4;
    c.make(s.triad(5, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> AfM4_4;
    c.make(s.triad(5, n.A, M), DEFAULT_GAIN, k.QRTR) @=> AM4_4;
    c.make(s.triad(5, n.As, M), DEFAULT_GAIN, k.QRTR) @=> AsM4_4;
    c.make(s.triad(5, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> BfM4_4;
    c.make(s.triad(5, n.B, M), DEFAULT_GAIN, k.QRTR) @=> BM4_4;

    c.make(s.triad(6, n.C, M), DEFAULT_GAIN, k.QRTR) @=> CM5_4;
    c.make(s.triad(6, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> CsM5_4;
    c.make(s.triad(6, n.D, M), DEFAULT_GAIN, k.QRTR) @=> DM5_4;
    c.make(s.triad(6, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> DsM5_4;
    c.make(s.triad(6, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> EfM5_4;
    c.make(s.triad(6, n.E, M), DEFAULT_GAIN, k.QRTR) @=> EM5_4;
    c.make(s.triad(6, n.F, M), DEFAULT_GAIN, k.QRTR) @=> FM5_4;
    c.make(s.triad(6, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> FsM5_4;
    c.make(s.triad(6, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> GfM5_4;
    c.make(s.triad(6, n.G, M), DEFAULT_GAIN, k.QRTR) @=> GM5_4;
    c.make(s.triad(6, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> GsM5_4;
    c.make(s.triad(6, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> AfM5_4;
    c.make(s.triad(6, n.A, M), DEFAULT_GAIN, k.QRTR) @=> AM5_4;
    c.make(s.triad(6, n.As, M), DEFAULT_GAIN, k.QRTR) @=> AsM5_4;
    c.make(s.triad(6, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> BfM5_4;
    c.make(s.triad(6, n.B, M), DEFAULT_GAIN, k.QRTR) @=> BM5_4;

    c.make(s.triad(7, n.C, M), DEFAULT_GAIN, k.QRTR) @=> CM6_4;
    c.make(s.triad(7, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> CsM6_4;
    c.make(s.triad(7, n.D, M), DEFAULT_GAIN, k.QRTR) @=> DM6_4;
    c.make(s.triad(7, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> DsM6_4;
    c.make(s.triad(7, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> EfM6_4;
    c.make(s.triad(7, n.E, M), DEFAULT_GAIN, k.QRTR) @=> EM6_4;
    c.make(s.triad(7, n.F, M), DEFAULT_GAIN, k.QRTR) @=> FM6_4;
    c.make(s.triad(7, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> FsM6_4;
    c.make(s.triad(7, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> GfM6_4;
    c.make(s.triad(7, n.G, M), DEFAULT_GAIN, k.QRTR) @=> GM6_4;
    c.make(s.triad(7, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> GsM6_4;
    c.make(s.triad(7, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> AfM6_4;
    c.make(s.triad(7, n.A, M), DEFAULT_GAIN, k.QRTR) @=> AM6_4;
    c.make(s.triad(7, n.As, M), DEFAULT_GAIN, k.QRTR) @=> AsM6_4;
    c.make(s.triad(7, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> BfM6_4;
    c.make(s.triad(7, n.B, M), DEFAULT_GAIN, k.QRTR) @=> BM6_4;

    c.make(s.triad(8, n.C, M), DEFAULT_GAIN, k.QRTR) @=> CM7_4;
    c.make(s.triad(8, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> CsM7_4;
    c.make(s.triad(8, n.D, M), DEFAULT_GAIN, k.QRTR) @=> DM7_4;
    c.make(s.triad(8, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> DsM7_4;
    c.make(s.triad(8, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> EfM7_4;
    c.make(s.triad(8, n.E, M), DEFAULT_GAIN, k.QRTR) @=> EM7_4;
    c.make(s.triad(8, n.F, M), DEFAULT_GAIN, k.QRTR) @=> FM7_4;
    c.make(s.triad(8, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> FsM7_4;
    c.make(s.triad(8, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> GfM7_4;
    c.make(s.triad(8, n.G, M), DEFAULT_GAIN, k.QRTR) @=> GM7_4;
    c.make(s.triad(8, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> GsM7_4;
    c.make(s.triad(8, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> AfM7_4;
    c.make(s.triad(8, n.A, M), DEFAULT_GAIN, k.QRTR) @=> AM7_4;
    c.make(s.triad(8, n.As, M), DEFAULT_GAIN, k.QRTR) @=> AsM7_4;
    c.make(s.triad(8, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> BfM7_4;
    c.make(s.triad(8, n.B, M), DEFAULT_GAIN, k.QRTR) @=> BM7_4;

    c.make(s.triad(9, n.C, M), DEFAULT_GAIN, k.QRTR) @=> CM8_4;
    c.make(s.triad(9, n.Cs, M), DEFAULT_GAIN, k.QRTR) @=> CsM8_4;
    c.make(s.triad(9, n.D, M), DEFAULT_GAIN, k.QRTR) @=> DM8_4;
    c.make(s.triad(9, n.Ds, M), DEFAULT_GAIN, k.QRTR) @=> DsM8_4;
    c.make(s.triad(9, n.Ef, M), DEFAULT_GAIN, k.QRTR) @=> EfM8_4;
    c.make(s.triad(9, n.E, M), DEFAULT_GAIN, k.QRTR) @=> EM8_4;
    c.make(s.triad(9, n.F, M), DEFAULT_GAIN, k.QRTR) @=> FM8_4;
    c.make(s.triad(9, n.Fs, M), DEFAULT_GAIN, k.QRTR) @=> FsM8_4;
    c.make(s.triad(9, n.Gf, M), DEFAULT_GAIN, k.QRTR) @=> GfM8_4;
    c.make(s.triad(9, n.G, M), DEFAULT_GAIN, k.QRTR) @=> GM8_4;
    c.make(s.triad(9, n.Gs, M), DEFAULT_GAIN, k.QRTR) @=> GsM8_4;
    c.make(s.triad(9, n.Af, M), DEFAULT_GAIN, k.QRTR) @=> AfM8_4;
    c.make(s.triad(9, n.A, M), DEFAULT_GAIN, k.QRTR) @=> AM8_4;
    c.make(s.triad(9, n.As, M), DEFAULT_GAIN, k.QRTR) @=> AsM8_4;
    c.make(s.triad(9, n.Bf, M), DEFAULT_GAIN, k.QRTR) @=> BfM8_4;
    c.make(s.triad(9, n.B, M), DEFAULT_GAIN, k.QRTR) @=> BM8_4;

    // Minor
    c.make(s.triad(0, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Cm_4;
    c.make(s.triad(0, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Csm_4;
    c.make(s.triad(0, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Dm_4;
    c.make(s.triad(0, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Dsm_4;
    c.make(s.triad(0, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Efm_4;
    c.make(s.triad(0, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Em_4;
    c.make(s.triad(0, n.F, m), DEFAULT_GAIN, k.QRTR) @=> _Fm_4;
    c.make(s.triad(0, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Fsm_4;
    c.make(s.triad(0, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Gfm_4;
    c.make(s.triad(0, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Gm_4;
    c.make(s.triad(0, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Gsm_4;
    c.make(s.triad(0, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Afm_4;
    c.make(s.triad(0, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Am_4;
    c.make(s.triad(0, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Asm_4;
    c.make(s.triad(0, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Bfm_4;
    c.make(s.triad(0, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Bm_4;

    c.make(s.triad(1, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Cm0_4;
    c.make(s.triad(1, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Csm0_4;
    c.make(s.triad(1, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Dm0_4;
    c.make(s.triad(1, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Dsm0_4;
    c.make(s.triad(1, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Efm0_4;
    c.make(s.triad(1, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Em0_4;
    c.make(s.triad(1, n.F, m), DEFAULT_GAIN, k.QRTR) @=> _Fm0_4;
    c.make(s.triad(1, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Fsm0_4;
    c.make(s.triad(1, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Gfm0_4;
    c.make(s.triad(1, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Gm0_4;
    c.make(s.triad(1, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Gsm0_4;
    c.make(s.triad(1, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Afm0_4;
    c.make(s.triad(1, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Am0_4;
    c.make(s.triad(1, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Asm0_4;
    c.make(s.triad(1, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Bfm0_4;
    c.make(s.triad(1, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Bm0_4;

    c.make(s.triad(2, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Cm1_4;
    c.make(s.triad(2, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Csm1_4;
    c.make(s.triad(2, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Dm1_4;
    c.make(s.triad(2, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Dsm1_4;
    c.make(s.triad(2, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Efm1_4;
    c.make(s.triad(2, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Em1_4;
    c.make(s.triad(2, n.F, m), DEFAULT_GAIN, k.QRTR) @=> _Fm1_4;
    c.make(s.triad(2, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Fsm1_4;
    c.make(s.triad(2, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Gfm1_4;
    c.make(s.triad(2, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Gm1_4;
    c.make(s.triad(2, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Gsm1_4;
    c.make(s.triad(2, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Afm1_4;
    c.make(s.triad(2, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Am1_4;
    c.make(s.triad(2, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Asm1_4;
    c.make(s.triad(2, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Bfm1_4;
    c.make(s.triad(2, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Bm1_4;

    c.make(s.triad(3, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Cm2_4;
    c.make(s.triad(3, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Csm2_4;
    c.make(s.triad(3, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Dm2_4;
    c.make(s.triad(3, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Dsm2_4;
    c.make(s.triad(3, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Efm2_4;
    c.make(s.triad(3, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Em2_4;
    c.make(s.triad(3, n.F, m), DEFAULT_GAIN, k.QRTR) @=> _Fm2_4;
    c.make(s.triad(3, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Fsm2_4;
    c.make(s.triad(3, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Gfm2_4;
    c.make(s.triad(3, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Gm2_4;
    c.make(s.triad(3, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Gsm2_4;
    c.make(s.triad(3, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Afm2_4;
    c.make(s.triad(3, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Am2_4;
    c.make(s.triad(3, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Asm2_4;
    c.make(s.triad(3, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Bfm2_4;
    c.make(s.triad(3, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Bm2_4;

    c.make(s.triad(4, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Cm3_4;
    c.make(s.triad(4, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Csm3_4;
    c.make(s.triad(4, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Dm3_4;
    c.make(s.triad(4, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Dsm3_4;
    c.make(s.triad(4, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Efm3_4;
    c.make(s.triad(4, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Em3_4;
    c.make(s.triad(4, n.F, m), DEFAULT_GAIN, k.QRTR) @=> _Fm3_4;
    c.make(s.triad(4, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Fsm3_4;
    c.make(s.triad(4, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Gfm3_4;
    c.make(s.triad(4, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Gm3_4;
    c.make(s.triad(4, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Gsm3_4;
    c.make(s.triad(4, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Afm3_4;
    c.make(s.triad(4, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Am3_4;
    c.make(s.triad(4, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Asm3_4;
    c.make(s.triad(4, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Bfm3_4;
    c.make(s.triad(4, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Bm3_4;

    c.make(s.triad(5, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Cm4_4;
    c.make(s.triad(5, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Csm4_4;
    c.make(s.triad(5, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Dm4_4;
    c.make(s.triad(5, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Dsm4_4;
    c.make(s.triad(5, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Efm4_4;
    c.make(s.triad(5, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Em4_4;
    c.make(s.triad(5, n.F, m), DEFAULT_GAIN, k.QRTR) @=> _Fm4_4;
    c.make(s.triad(5, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Fsm4_4;
    c.make(s.triad(5, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Gfm4_4;
    c.make(s.triad(5, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Gm4_4;
    c.make(s.triad(5, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Gsm4_4;
    c.make(s.triad(5, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Afm4_4;
    c.make(s.triad(5, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Am4_4;
    c.make(s.triad(5, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Asm4_4;
    c.make(s.triad(5, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Bfm4_4;
    c.make(s.triad(5, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Bm4_4;

    c.make(s.triad(6, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Cm5_4;
    c.make(s.triad(6, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Csm5_4;
    c.make(s.triad(6, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Dm5_4;
    c.make(s.triad(6, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Dsm5_4;
    c.make(s.triad(6, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Efm5_4;
    c.make(s.triad(6, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Em5_4;
    c.make(s.triad(6, n.F, m), DEFAULT_GAIN, k.QRTR) @=> _Fm5_4;
    c.make(s.triad(6, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Fsm5_4;
    c.make(s.triad(6, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Gfm5_4;
    c.make(s.triad(6, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Gm5_4;
    c.make(s.triad(6, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Gsm5_4;
    c.make(s.triad(6, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Afm5_4;
    c.make(s.triad(6, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Am5_4;
    c.make(s.triad(6, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Asm5_4;
    c.make(s.triad(6, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Bfm5_4;
    c.make(s.triad(6, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Bm5_4;

    c.make(s.triad(7, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Cm6_4;
    c.make(s.triad(7, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Csm6_4;
    c.make(s.triad(7, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Dm6_4;
    c.make(s.triad(7, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Dsm6_4;
    c.make(s.triad(7, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Efm6_4;
    c.make(s.triad(7, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Em6_4;
    c.make(s.triad(7, n.F, m), DEFAULT_GAIN, k.QRTR) @=> _Fm6_4;
    c.make(s.triad(7, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Fsm6_4;
    c.make(s.triad(7, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Gfm6_4;
    c.make(s.triad(7, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Gm6_4;
    c.make(s.triad(7, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Gsm6_4;
    c.make(s.triad(7, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Afm6_4;
    c.make(s.triad(7, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Am6_4;
    c.make(s.triad(7, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Asm6_4;
    c.make(s.triad(7, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Bfm6_4;
    c.make(s.triad(7, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Bm6_4;

    c.make(s.triad(8, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Cm7_4;
    c.make(s.triad(8, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Csm7_4;
    c.make(s.triad(8, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Dm7_4;
    c.make(s.triad(8, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Dsm7_4;
    c.make(s.triad(8, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Efm7_4;
    c.make(s.triad(8, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Em7_4;
    c.make(s.triad(8, n.F, m), DEFAULT_GAIN, k.QRTR) @=> _Fm7_4;
    c.make(s.triad(8, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Fsm7_4;
    c.make(s.triad(8, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Gfm7_4;
    c.make(s.triad(8, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Gm7_4;
    c.make(s.triad(8, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Gsm7_4;
    c.make(s.triad(8, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Afm7_4;
    c.make(s.triad(8, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Am7_4;
    c.make(s.triad(8, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Asm7_4;
    c.make(s.triad(8, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Bfm7_4;
    c.make(s.triad(8, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Bm7_4;

    c.make(s.triad(9, n.C, m), DEFAULT_GAIN, k.QRTR) @=> Cm8_4;
    c.make(s.triad(9, n.Cs, m), DEFAULT_GAIN, k.QRTR) @=> Csm8_4;
    c.make(s.triad(9, n.D, m), DEFAULT_GAIN, k.QRTR) @=> Dm8_4;
    c.make(s.triad(9, n.Ds, m), DEFAULT_GAIN, k.QRTR) @=> Dsm8_4;
    c.make(s.triad(9, n.Ef, m), DEFAULT_GAIN, k.QRTR) @=> Efm8_4;
    c.make(s.triad(9, n.E, m), DEFAULT_GAIN, k.QRTR) @=> Em8_4;
    c.make(s.triad(9, n.F, m), DEFAULT_GAIN, k.QRTR) @=> _Fm8_4;
    c.make(s.triad(9, n.Fs, m), DEFAULT_GAIN, k.QRTR) @=> Fsm8_4;
    c.make(s.triad(9, n.Gf, m), DEFAULT_GAIN, k.QRTR) @=> Gfm8_4;
    c.make(s.triad(9, n.G, m), DEFAULT_GAIN, k.QRTR) @=> Gm8_4;
    c.make(s.triad(9, n.Gs, m), DEFAULT_GAIN, k.QRTR) @=> Gsm8_4;
    c.make(s.triad(9, n.Af, m), DEFAULT_GAIN, k.QRTR) @=> Afm8_4;
    c.make(s.triad(9, n.A, m), DEFAULT_GAIN, k.QRTR) @=> Am8_4;
    c.make(s.triad(9, n.As, m), DEFAULT_GAIN, k.QRTR) @=> Asm8_4;
    c.make(s.triad(9, n.Bf, m), DEFAULT_GAIN, k.QRTR) @=> Bfm8_4;
    c.make(s.triad(9, n.B, m), DEFAULT_GAIN, k.QRTR) @=> Bm8_4;

    // Augmented
    c.make(s.triad(0, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Caug_4;
    c.make(s.triad(0, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Csaug_4;
    c.make(s.triad(0, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Daug_4;
    c.make(s.triad(0, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Dsaug_4;
    c.make(s.triad(0, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Efaug_4;
    c.make(s.triad(0, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Eaug_4;
    c.make(s.triad(0, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> _Faug_4;
    c.make(s.triad(0, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Fsaug_4;
    c.make(s.triad(0, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Gfaug_4;
    c.make(s.triad(0, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Gaug_4;
    c.make(s.triad(0, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Gsaug_4;
    c.make(s.triad(0, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Afaug_4;
    c.make(s.triad(0, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Aaug_4;
    c.make(s.triad(0, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Asaug_4;
    c.make(s.triad(0, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Bfaug_4;
    c.make(s.triad(0, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Baug_4;

    c.make(s.triad(1, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Caug0_4;
    c.make(s.triad(1, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Csaug0_4;
    c.make(s.triad(1, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Daug0_4;
    c.make(s.triad(1, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Dsaug0_4;
    c.make(s.triad(1, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Efaug0_4;
    c.make(s.triad(1, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Eaug0_4;
    c.make(s.triad(1, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> _Faug0_4;
    c.make(s.triad(1, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Fsaug0_4;
    c.make(s.triad(1, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Gfaug0_4;
    c.make(s.triad(1, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Gaug0_4;
    c.make(s.triad(1, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Gsaug0_4;
    c.make(s.triad(1, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Afaug0_4;
    c.make(s.triad(1, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Aaug0_4;
    c.make(s.triad(1, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Asaug0_4;
    c.make(s.triad(1, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Bfaug0_4;
    c.make(s.triad(1, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Baug0_4;

    c.make(s.triad(2, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Caug1_4;
    c.make(s.triad(2, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Csaug1_4;
    c.make(s.triad(2, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Daug1_4;
    c.make(s.triad(2, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Dsaug1_4;
    c.make(s.triad(2, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Efaug1_4;
    c.make(s.triad(2, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Eaug1_4;
    c.make(s.triad(2, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> _Faug1_4;
    c.make(s.triad(2, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Fsaug1_4;
    c.make(s.triad(2, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Gfaug1_4;
    c.make(s.triad(2, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Gaug1_4;
    c.make(s.triad(2, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Gsaug1_4;
    c.make(s.triad(2, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Afaug1_4;
    c.make(s.triad(2, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Aaug1_4;
    c.make(s.triad(2, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Asaug1_4;
    c.make(s.triad(2, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Bfaug1_4;
    c.make(s.triad(2, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Baug1_4;

    c.make(s.triad(3, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Caug2_4;
    c.make(s.triad(3, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Csaug2_4;
    c.make(s.triad(3, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Daug2_4;
    c.make(s.triad(3, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Dsaug2_4;
    c.make(s.triad(3, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Efaug2_4;
    c.make(s.triad(3, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Eaug2_4;
    c.make(s.triad(3, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> _Faug2_4;
    c.make(s.triad(3, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Fsaug2_4;
    c.make(s.triad(3, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Gfaug2_4;
    c.make(s.triad(3, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Gaug2_4;
    c.make(s.triad(3, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Gsaug2_4;
    c.make(s.triad(3, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Afaug2_4;
    c.make(s.triad(3, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Aaug2_4;
    c.make(s.triad(3, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Asaug2_4;
    c.make(s.triad(3, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Bfaug2_4;
    c.make(s.triad(3, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Baug2_4;

    c.make(s.triad(4, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Caug3_4;
    c.make(s.triad(4, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Csaug3_4;
    c.make(s.triad(4, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Daug3_4;
    c.make(s.triad(4, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Dsaug3_4;
    c.make(s.triad(4, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Efaug3_4;
    c.make(s.triad(4, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Eaug3_4;
    c.make(s.triad(4, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> _Faug3_4;
    c.make(s.triad(4, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Fsaug3_4;
    c.make(s.triad(4, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Gfaug3_4;
    c.make(s.triad(4, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Gaug3_4;
    c.make(s.triad(4, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Gsaug3_4;
    c.make(s.triad(4, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Afaug3_4;
    c.make(s.triad(4, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Aaug3_4;
    c.make(s.triad(4, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Asaug3_4;
    c.make(s.triad(4, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Bfaug3_4;
    c.make(s.triad(4, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Baug3_4;

    c.make(s.triad(5, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Caug4_4;
    c.make(s.triad(5, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Csaug4_4;
    c.make(s.triad(5, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Daug4_4;
    c.make(s.triad(5, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Dsaug4_4;
    c.make(s.triad(5, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Efaug4_4;
    c.make(s.triad(5, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Eaug4_4;
    c.make(s.triad(5, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> _Faug4_4;
    c.make(s.triad(5, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Fsaug4_4;
    c.make(s.triad(5, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Gfaug4_4;
    c.make(s.triad(5, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Gaug4_4;
    c.make(s.triad(5, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Gsaug4_4;
    c.make(s.triad(5, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Afaug4_4;
    c.make(s.triad(5, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Aaug4_4;
    c.make(s.triad(5, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Asaug4_4;
    c.make(s.triad(5, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Bfaug4_4;
    c.make(s.triad(5, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Baug4_4;

    c.make(s.triad(6, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Caug5_4;
    c.make(s.triad(6, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Csaug5_4;
    c.make(s.triad(6, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Daug5_4;
    c.make(s.triad(6, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Dsaug5_4;
    c.make(s.triad(6, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Efaug5_4;
    c.make(s.triad(6, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Eaug5_4;
    c.make(s.triad(6, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> _Faug5_4;
    c.make(s.triad(6, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Fsaug5_4;
    c.make(s.triad(6, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Gfaug5_4;
    c.make(s.triad(6, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Gaug5_4;
    c.make(s.triad(6, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Gsaug5_4;
    c.make(s.triad(6, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Afaug5_4;
    c.make(s.triad(6, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Aaug5_4;
    c.make(s.triad(6, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Asaug5_4;
    c.make(s.triad(6, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Bfaug5_4;
    c.make(s.triad(6, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Baug5_4;

    c.make(s.triad(7, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Caug6_4;
    c.make(s.triad(7, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Csaug6_4;
    c.make(s.triad(7, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Daug6_4;
    c.make(s.triad(7, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Dsaug6_4;
    c.make(s.triad(7, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Efaug6_4;
    c.make(s.triad(7, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Eaug6_4;
    c.make(s.triad(7, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> _Faug6_4;
    c.make(s.triad(7, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Fsaug6_4;
    c.make(s.triad(7, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Gfaug6_4;
    c.make(s.triad(7, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Gaug6_4;
    c.make(s.triad(7, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Gsaug6_4;
    c.make(s.triad(7, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Afaug6_4;
    c.make(s.triad(7, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Aaug6_4;
    c.make(s.triad(7, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Asaug6_4;
    c.make(s.triad(7, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Bfaug6_4;
    c.make(s.triad(7, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Baug6_4;

    c.make(s.triad(8, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Caug7_4;
    c.make(s.triad(8, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Csaug7_4;
    c.make(s.triad(8, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Daug7_4;
    c.make(s.triad(8, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Dsaug7_4;
    c.make(s.triad(8, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Efaug7_4;
    c.make(s.triad(8, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Eaug7_4;
    c.make(s.triad(8, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> _Faug7_4;
    c.make(s.triad(8, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Fsaug7_4;
    c.make(s.triad(8, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Gfaug7_4;
    c.make(s.triad(8, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Gaug7_4;
    c.make(s.triad(8, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Gsaug7_4;
    c.make(s.triad(8, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Afaug7_4;
    c.make(s.triad(8, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Aaug7_4;
    c.make(s.triad(8, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Asaug7_4;
    c.make(s.triad(8, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Bfaug7_4;
    c.make(s.triad(8, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Baug7_4;

    c.make(s.triad(9, n.C, aug), DEFAULT_GAIN, k.QRTR) @=> Caug8_4;
    c.make(s.triad(9, n.Cs, aug), DEFAULT_GAIN, k.QRTR) @=> Csaug8_4;
    c.make(s.triad(9, n.D, aug), DEFAULT_GAIN, k.QRTR) @=> Daug8_4;
    c.make(s.triad(9, n.Ds, aug), DEFAULT_GAIN, k.QRTR) @=> Dsaug8_4;
    c.make(s.triad(9, n.Ef, aug), DEFAULT_GAIN, k.QRTR) @=> Efaug8_4;
    c.make(s.triad(9, n.E, aug), DEFAULT_GAIN, k.QRTR) @=> Eaug8_4;
    c.make(s.triad(9, n.F, aug), DEFAULT_GAIN, k.QRTR) @=> _Faug8_4;
    c.make(s.triad(9, n.Fs, aug), DEFAULT_GAIN, k.QRTR) @=> Fsaug8_4;
    c.make(s.triad(9, n.Gf, aug), DEFAULT_GAIN, k.QRTR) @=> Gfaug8_4;
    c.make(s.triad(9, n.G, aug), DEFAULT_GAIN, k.QRTR) @=> Gaug8_4;
    c.make(s.triad(9, n.Gs, aug), DEFAULT_GAIN, k.QRTR) @=> Gsaug8_4;
    c.make(s.triad(9, n.Af, aug), DEFAULT_GAIN, k.QRTR) @=> Afaug8_4;
    c.make(s.triad(9, n.A, aug), DEFAULT_GAIN, k.QRTR) @=> Aaug8_4;
    c.make(s.triad(9, n.As, aug), DEFAULT_GAIN, k.QRTR) @=> Asaug8_4;
    c.make(s.triad(9, n.Bf, aug), DEFAULT_GAIN, k.QRTR) @=> Bfaug8_4;
    c.make(s.triad(9, n.B, aug), DEFAULT_GAIN, k.QRTR) @=> Baug8_4;

    // Diminished
    c.make(s.triad(0, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Cdim_4;
    c.make(s.triad(0, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Csdim_4;
    c.make(s.triad(0, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Ddim_4;
    c.make(s.triad(0, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Dsdim_4;
    c.make(s.triad(0, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Efdim_4;
    c.make(s.triad(0, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Edim_4;
    c.make(s.triad(0, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> _Fdim_4;
    c.make(s.triad(0, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Fsdim_4;
    c.make(s.triad(0, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Gfdim_4;
    c.make(s.triad(0, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Gdim_4;
    c.make(s.triad(0, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Gsdim_4;
    c.make(s.triad(0, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Afdim_4;
    c.make(s.triad(0, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Adim_4;
    c.make(s.triad(0, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Asdim_4;
    c.make(s.triad(0, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Bfdim_4;
    c.make(s.triad(0, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Bdim_4;

    c.make(s.triad(1, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Cdim0_4;
    c.make(s.triad(1, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Csdim0_4;
    c.make(s.triad(1, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Ddim0_4;
    c.make(s.triad(1, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Dsdim0_4;
    c.make(s.triad(1, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Efdim0_4;
    c.make(s.triad(1, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Edim0_4;
    c.make(s.triad(1, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> _Fdim0_4;
    c.make(s.triad(1, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Fsdim0_4;
    c.make(s.triad(1, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Gfdim0_4;
    c.make(s.triad(1, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Gdim0_4;
    c.make(s.triad(1, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Gsdim0_4;
    c.make(s.triad(1, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Afdim0_4;
    c.make(s.triad(1, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Adim0_4;
    c.make(s.triad(1, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Asdim0_4;
    c.make(s.triad(1, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Bfdim0_4;
    c.make(s.triad(1, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Bdim0_4;

    c.make(s.triad(2, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Cdim1_4;
    c.make(s.triad(2, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Csdim1_4;
    c.make(s.triad(2, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Ddim1_4;
    c.make(s.triad(2, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Dsdim1_4;
    c.make(s.triad(2, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Efdim1_4;
    c.make(s.triad(2, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Edim1_4;
    c.make(s.triad(2, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> _Fdim1_4;
    c.make(s.triad(2, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Fsdim1_4;
    c.make(s.triad(2, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Gfdim1_4;
    c.make(s.triad(2, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Gdim1_4;
    c.make(s.triad(2, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Gsdim1_4;
    c.make(s.triad(2, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Afdim1_4;
    c.make(s.triad(2, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Adim1_4;
    c.make(s.triad(2, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Asdim1_4;
    c.make(s.triad(2, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Bfdim1_4;
    c.make(s.triad(2, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Bdim1_4;

    c.make(s.triad(3, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Cdim2_4;
    c.make(s.triad(3, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Csdim2_4;
    c.make(s.triad(3, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Ddim2_4;
    c.make(s.triad(3, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Dsdim2_4;
    c.make(s.triad(3, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Efdim2_4;
    c.make(s.triad(3, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Edim2_4;
    c.make(s.triad(3, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> _Fdim2_4;
    c.make(s.triad(3, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Fsdim2_4;
    c.make(s.triad(3, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Gfdim2_4;
    c.make(s.triad(3, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Gdim2_4;
    c.make(s.triad(3, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Gsdim2_4;
    c.make(s.triad(3, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Afdim2_4;
    c.make(s.triad(3, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Adim2_4;
    c.make(s.triad(3, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Asdim2_4;
    c.make(s.triad(3, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Bfdim2_4;
    c.make(s.triad(3, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Bdim2_4;

    c.make(s.triad(4, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Cdim3_4;
    c.make(s.triad(4, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Csdim3_4;
    c.make(s.triad(4, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Ddim3_4;
    c.make(s.triad(4, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Dsdim3_4;
    c.make(s.triad(4, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Efdim3_4;
    c.make(s.triad(4, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Edim3_4;
    c.make(s.triad(4, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> _Fdim3_4;
    c.make(s.triad(4, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Fsdim3_4;
    c.make(s.triad(4, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Gfdim3_4;
    c.make(s.triad(4, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Gdim3_4;
    c.make(s.triad(4, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Gsdim3_4;
    c.make(s.triad(4, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Afdim3_4;
    c.make(s.triad(4, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Adim3_4;
    c.make(s.triad(4, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Asdim3_4;
    c.make(s.triad(4, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Bfdim3_4;
    c.make(s.triad(4, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Bdim3_4;

    c.make(s.triad(5, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Cdim4_4;
    c.make(s.triad(5, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Csdim4_4;
    c.make(s.triad(5, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Ddim4_4;
    c.make(s.triad(5, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Dsdim4_4;
    c.make(s.triad(5, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Efdim4_4;
    c.make(s.triad(5, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Edim4_4;
    c.make(s.triad(5, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> _Fdim4_4;
    c.make(s.triad(5, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Fsdim4_4;
    c.make(s.triad(5, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Gfdim4_4;
    c.make(s.triad(5, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Gdim4_4;
    c.make(s.triad(5, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Gsdim4_4;
    c.make(s.triad(5, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Afdim4_4;
    c.make(s.triad(5, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Adim4_4;
    c.make(s.triad(5, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Asdim4_4;
    c.make(s.triad(5, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Bfdim4_4;
    c.make(s.triad(5, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Bdim4_4;

    c.make(s.triad(6, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Cdim5_4;
    c.make(s.triad(6, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Csdim5_4;
    c.make(s.triad(6, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Ddim5_4;
    c.make(s.triad(6, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Dsdim5_4;
    c.make(s.triad(6, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Efdim5_4;
    c.make(s.triad(6, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Edim5_4;
    c.make(s.triad(6, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> _Fdim5_4;
    c.make(s.triad(6, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Fsdim5_4;
    c.make(s.triad(6, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Gfdim5_4;
    c.make(s.triad(6, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Gdim5_4;
    c.make(s.triad(6, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Gsdim5_4;
    c.make(s.triad(6, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Afdim5_4;
    c.make(s.triad(6, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Adim5_4;
    c.make(s.triad(6, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Asdim5_4;
    c.make(s.triad(6, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Bfdim5_4;
    c.make(s.triad(6, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Bdim5_4;

    c.make(s.triad(7, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Cdim6_4;
    c.make(s.triad(7, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Csdim6_4;
    c.make(s.triad(7, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Ddim6_4;
    c.make(s.triad(7, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Dsdim6_4;
    c.make(s.triad(7, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Efdim6_4;
    c.make(s.triad(7, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Edim6_4;
    c.make(s.triad(7, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> _Fdim6_4;
    c.make(s.triad(7, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Fsdim6_4;
    c.make(s.triad(7, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Gfdim6_4;
    c.make(s.triad(7, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Gdim6_4;
    c.make(s.triad(7, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Gsdim6_4;
    c.make(s.triad(7, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Afdim6_4;
    c.make(s.triad(7, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Adim6_4;
    c.make(s.triad(7, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Asdim6_4;
    c.make(s.triad(7, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Bfdim6_4;
    c.make(s.triad(7, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Bdim6_4;

    c.make(s.triad(8, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Cdim7_4;
    c.make(s.triad(8, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Csdim7_4;
    c.make(s.triad(8, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Ddim7_4;
    c.make(s.triad(8, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Dsdim7_4;
    c.make(s.triad(8, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Efdim7_4;
    c.make(s.triad(8, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Edim7_4;
    c.make(s.triad(8, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> _Fdim7_4;
    c.make(s.triad(8, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Fsdim7_4;
    c.make(s.triad(8, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Gfdim7_4;
    c.make(s.triad(8, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Gdim7_4;
    c.make(s.triad(8, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Gsdim7_4;
    c.make(s.triad(8, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Afdim7_4;
    c.make(s.triad(8, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Adim7_4;
    c.make(s.triad(8, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Asdim7_4;
    c.make(s.triad(8, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Bfdim7_4;
    c.make(s.triad(8, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Bdim7_4;

    c.make(s.triad(9, n.C, dim), DEFAULT_GAIN, k.QRTR) @=> Cdim8_4;
    c.make(s.triad(9, n.Cs, dim), DEFAULT_GAIN, k.QRTR) @=> Csdim8_4;
    c.make(s.triad(9, n.D, dim), DEFAULT_GAIN, k.QRTR) @=> Ddim8_4;
    c.make(s.triad(9, n.Ds, dim), DEFAULT_GAIN, k.QRTR) @=> Dsdim8_4;
    c.make(s.triad(9, n.Ef, dim), DEFAULT_GAIN, k.QRTR) @=> Efdim8_4;
    c.make(s.triad(9, n.E, dim), DEFAULT_GAIN, k.QRTR) @=> Edim8_4;
    c.make(s.triad(9, n.F, dim), DEFAULT_GAIN, k.QRTR) @=> _Fdim8_4;
    c.make(s.triad(9, n.Fs, dim), DEFAULT_GAIN, k.QRTR) @=> Fsdim8_4;
    c.make(s.triad(9, n.Gf, dim), DEFAULT_GAIN, k.QRTR) @=> Gfdim8_4;
    c.make(s.triad(9, n.G, dim), DEFAULT_GAIN, k.QRTR) @=> Gdim8_4;
    c.make(s.triad(9, n.Gs, dim), DEFAULT_GAIN, k.QRTR) @=> Gsdim8_4;
    c.make(s.triad(9, n.Af, dim), DEFAULT_GAIN, k.QRTR) @=> Afdim8_4;
    c.make(s.triad(9, n.A, dim), DEFAULT_GAIN, k.QRTR) @=> Adim8_4;
    c.make(s.triad(9, n.As, dim), DEFAULT_GAIN, k.QRTR) @=> Asdim8_4;
    c.make(s.triad(9, n.Bf, dim), DEFAULT_GAIN, k.QRTR) @=> Bfdim8_4;
    c.make(s.triad(9, n.B, dim), DEFAULT_GAIN, k.QRTR) @=> Bdim8_4;

    //
    // ETH
    //

    // Major
    // 0-based offsets
    c.make(s.triad(0, n.C, M), DEFAULT_GAIN, k.ETH) @=> CM_8;
    c.make(s.triad(0, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> CsM_8;
    c.make(s.triad(0, n.D, M), DEFAULT_GAIN, k.ETH) @=> DM_8;
    c.make(s.triad(0, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> DsM_8;
    c.make(s.triad(0, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> EfM_8;
    c.make(s.triad(0, n.E, M), DEFAULT_GAIN, k.ETH) @=> EM_8;
    c.make(s.triad(0, n.F, M), DEFAULT_GAIN, k.ETH) @=> FM_8;
    c.make(s.triad(0, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> FsM_8;
    c.make(s.triad(0, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> GfM_8;
    c.make(s.triad(0, n.G, M), DEFAULT_GAIN, k.ETH) @=> GM_8;
    c.make(s.triad(0, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> GsM_8;
    c.make(s.triad(0, n.Af, M), DEFAULT_GAIN, k.ETH) @=> AfM_8;
    c.make(s.triad(0, n.A, M), DEFAULT_GAIN, k.ETH) @=> AM_8;
    c.make(s.triad(0, n.As, M), DEFAULT_GAIN, k.ETH) @=> AsM_8;
    c.make(s.triad(0, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> BfM_8;
    c.make(s.triad(0, n.B, M), DEFAULT_GAIN, k.ETH) @=> BM_8;

    // constants predefined per octave
    c.make(s.triad(1, n.C, M), DEFAULT_GAIN, k.ETH) @=> CM0_8;
    c.make(s.triad(1, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> CsM0_8;
    c.make(s.triad(1, n.D, M), DEFAULT_GAIN, k.ETH) @=> DM0_8;
    c.make(s.triad(1, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> DsM0_8;
    c.make(s.triad(1, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> EfM0_8;
    c.make(s.triad(1, n.E, M), DEFAULT_GAIN, k.ETH) @=> EM0_8;
    c.make(s.triad(1, n.F, M), DEFAULT_GAIN, k.ETH) @=> FM0_8;
    c.make(s.triad(1, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> FsM0_8;
    c.make(s.triad(1, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> GfM0_8;
    c.make(s.triad(1, n.G, M), DEFAULT_GAIN, k.ETH) @=> GM0_8;
    c.make(s.triad(1, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> GsM0_8;
    c.make(s.triad(1, n.Af, M), DEFAULT_GAIN, k.ETH) @=> AfM0_8;
    c.make(s.triad(1, n.A, M), DEFAULT_GAIN, k.ETH) @=> AM0_8;
    c.make(s.triad(1, n.As, M), DEFAULT_GAIN, k.ETH) @=> AsM0_8;
    c.make(s.triad(1, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> BfM0_8;
    c.make(s.triad(1, n.B, M), DEFAULT_GAIN, k.ETH) @=> BM0_8;

    c.make(s.triad(2, n.C, M), DEFAULT_GAIN, k.ETH) @=> CM1_8;
    c.make(s.triad(2, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> CsM1_8;
    c.make(s.triad(2, n.D, M), DEFAULT_GAIN, k.ETH) @=> DM1_8;
    c.make(s.triad(2, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> DsM1_8;
    c.make(s.triad(2, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> EfM1_8;
    c.make(s.triad(2, n.E, M), DEFAULT_GAIN, k.ETH) @=> EM1_8;
    c.make(s.triad(2, n.F, M), DEFAULT_GAIN, k.ETH) @=> FM1_8;
    c.make(s.triad(2, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> FsM1_8;
    c.make(s.triad(2, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> GfM1_8;
    c.make(s.triad(2, n.G, M), DEFAULT_GAIN, k.ETH) @=> GM1_8;
    c.make(s.triad(2, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> GsM1_8;
    c.make(s.triad(2, n.Af, M), DEFAULT_GAIN, k.ETH) @=> AfM1_8;
    c.make(s.triad(2, n.A, M), DEFAULT_GAIN, k.ETH) @=> AM1_8;
    c.make(s.triad(2, n.As, M), DEFAULT_GAIN, k.ETH) @=> AsM1_8;
    c.make(s.triad(2, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> BfM1_8;
    c.make(s.triad(2, n.B, M), DEFAULT_GAIN, k.ETH) @=> BM1_8;

    c.make(s.triad(3, n.C, M), DEFAULT_GAIN, k.ETH) @=> CM2_8;
    c.make(s.triad(3, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> CsM2_8;
    c.make(s.triad(3, n.D, M), DEFAULT_GAIN, k.ETH) @=> DM2_8;
    c.make(s.triad(3, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> DsM2_8;
    c.make(s.triad(3, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> EfM2_8;
    c.make(s.triad(3, n.E, M), DEFAULT_GAIN, k.ETH) @=> EM2_8;
    c.make(s.triad(3, n.F, M), DEFAULT_GAIN, k.ETH) @=> FM2_8;
    c.make(s.triad(3, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> FsM2_8;
    c.make(s.triad(3, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> GfM2_8;
    c.make(s.triad(3, n.G, M), DEFAULT_GAIN, k.ETH) @=> GM2_8;
    c.make(s.triad(3, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> GsM2_8;
    c.make(s.triad(3, n.Af, M), DEFAULT_GAIN, k.ETH) @=> AfM2_8;
    c.make(s.triad(3, n.A, M), DEFAULT_GAIN, k.ETH) @=> AM2_8;
    c.make(s.triad(3, n.As, M), DEFAULT_GAIN, k.ETH) @=> AsM2_8;
    c.make(s.triad(3, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> BfM2_8;
    c.make(s.triad(3, n.B, M), DEFAULT_GAIN, k.ETH) @=> BM2_8;

    c.make(s.triad(4, n.C, M), DEFAULT_GAIN, k.ETH) @=> CM3_8;
    c.make(s.triad(4, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> CsM3_8;
    c.make(s.triad(4, n.D, M), DEFAULT_GAIN, k.ETH) @=> DM3_8;
    c.make(s.triad(4, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> DsM3_8;
    c.make(s.triad(4, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> EfM3_8;
    c.make(s.triad(4, n.E, M), DEFAULT_GAIN, k.ETH) @=> EM3_8;
    c.make(s.triad(4, n.F, M), DEFAULT_GAIN, k.ETH) @=> FM3_8;
    c.make(s.triad(4, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> FsM3_8;
    c.make(s.triad(4, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> GfM3_8;
    c.make(s.triad(4, n.G, M), DEFAULT_GAIN, k.ETH) @=> GM3_8;
    c.make(s.triad(4, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> GsM3_8;
    c.make(s.triad(4, n.Af, M), DEFAULT_GAIN, k.ETH) @=> AfM3_8;
    c.make(s.triad(4, n.A, M), DEFAULT_GAIN, k.ETH) @=> AM3_8;
    c.make(s.triad(4, n.As, M), DEFAULT_GAIN, k.ETH) @=> AsM3_8;
    c.make(s.triad(4, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> BfM3_8;
    c.make(s.triad(4, n.B, M), DEFAULT_GAIN, k.ETH) @=> BM3_8;

    c.make(s.triad(5, n.C, M), DEFAULT_GAIN, k.ETH) @=> CM4_8;
    c.make(s.triad(5, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> CsM4_8;
    c.make(s.triad(5, n.D, M), DEFAULT_GAIN, k.ETH) @=> DM4_8;
    c.make(s.triad(5, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> DsM4_8;
    c.make(s.triad(5, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> EfM4_8;
    c.make(s.triad(5, n.E, M), DEFAULT_GAIN, k.ETH) @=> EM4_8;
    c.make(s.triad(5, n.F, M), DEFAULT_GAIN, k.ETH) @=> FM4_8;
    c.make(s.triad(5, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> FsM4_8;
    c.make(s.triad(5, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> GfM4_8;
    c.make(s.triad(5, n.G, M), DEFAULT_GAIN, k.ETH) @=> GM4_8;
    c.make(s.triad(5, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> GsM4_8;
    c.make(s.triad(5, n.Af, M), DEFAULT_GAIN, k.ETH) @=> AfM4_8;
    c.make(s.triad(5, n.A, M), DEFAULT_GAIN, k.ETH) @=> AM4_8;
    c.make(s.triad(5, n.As, M), DEFAULT_GAIN, k.ETH) @=> AsM4_8;
    c.make(s.triad(5, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> BfM4_8;
    c.make(s.triad(5, n.B, M), DEFAULT_GAIN, k.ETH) @=> BM4_8;

    c.make(s.triad(6, n.C, M), DEFAULT_GAIN, k.ETH) @=> CM5_8;
    c.make(s.triad(6, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> CsM5_8;
    c.make(s.triad(6, n.D, M), DEFAULT_GAIN, k.ETH) @=> DM5_8;
    c.make(s.triad(6, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> DsM5_8;
    c.make(s.triad(6, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> EfM5_8;
    c.make(s.triad(6, n.E, M), DEFAULT_GAIN, k.ETH) @=> EM5_8;
    c.make(s.triad(6, n.F, M), DEFAULT_GAIN, k.ETH) @=> FM5_8;
    c.make(s.triad(6, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> FsM5_8;
    c.make(s.triad(6, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> GfM5_8;
    c.make(s.triad(6, n.G, M), DEFAULT_GAIN, k.ETH) @=> GM5_8;
    c.make(s.triad(6, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> GsM5_8;
    c.make(s.triad(6, n.Af, M), DEFAULT_GAIN, k.ETH) @=> AfM5_8;
    c.make(s.triad(6, n.A, M), DEFAULT_GAIN, k.ETH) @=> AM5_8;
    c.make(s.triad(6, n.As, M), DEFAULT_GAIN, k.ETH) @=> AsM5_8;
    c.make(s.triad(6, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> BfM5_8;
    c.make(s.triad(6, n.B, M), DEFAULT_GAIN, k.ETH) @=> BM5_8;

    c.make(s.triad(7, n.C, M), DEFAULT_GAIN, k.ETH) @=> CM6_8;
    c.make(s.triad(7, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> CsM6_8;
    c.make(s.triad(7, n.D, M), DEFAULT_GAIN, k.ETH) @=> DM6_8;
    c.make(s.triad(7, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> DsM6_8;
    c.make(s.triad(7, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> EfM6_8;
    c.make(s.triad(7, n.E, M), DEFAULT_GAIN, k.ETH) @=> EM6_8;
    c.make(s.triad(7, n.F, M), DEFAULT_GAIN, k.ETH) @=> FM6_8;
    c.make(s.triad(7, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> FsM6_8;
    c.make(s.triad(7, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> GfM6_8;
    c.make(s.triad(7, n.G, M), DEFAULT_GAIN, k.ETH) @=> GM6_8;
    c.make(s.triad(7, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> GsM6_8;
    c.make(s.triad(7, n.Af, M), DEFAULT_GAIN, k.ETH) @=> AfM6_8;
    c.make(s.triad(7, n.A, M), DEFAULT_GAIN, k.ETH) @=> AM6_8;
    c.make(s.triad(7, n.As, M), DEFAULT_GAIN, k.ETH) @=> AsM6_8;
    c.make(s.triad(7, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> BfM6_8;
    c.make(s.triad(7, n.B, M), DEFAULT_GAIN, k.ETH) @=> BM6_8;

    c.make(s.triad(8, n.C, M), DEFAULT_GAIN, k.ETH) @=> CM7_8;
    c.make(s.triad(8, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> CsM7_8;
    c.make(s.triad(8, n.D, M), DEFAULT_GAIN, k.ETH) @=> DM7_8;
    c.make(s.triad(8, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> DsM7_8;
    c.make(s.triad(8, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> EfM7_8;
    c.make(s.triad(8, n.E, M), DEFAULT_GAIN, k.ETH) @=> EM7_8;
    c.make(s.triad(8, n.F, M), DEFAULT_GAIN, k.ETH) @=> FM7_8;
    c.make(s.triad(8, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> FsM7_8;
    c.make(s.triad(8, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> GfM7_8;
    c.make(s.triad(8, n.G, M), DEFAULT_GAIN, k.ETH) @=> GM7_8;
    c.make(s.triad(8, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> GsM7_8;
    c.make(s.triad(8, n.Af, M), DEFAULT_GAIN, k.ETH) @=> AfM7_8;
    c.make(s.triad(8, n.A, M), DEFAULT_GAIN, k.ETH) @=> AM7_8;
    c.make(s.triad(8, n.As, M), DEFAULT_GAIN, k.ETH) @=> AsM7_8;
    c.make(s.triad(8, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> BfM7_8;
    c.make(s.triad(8, n.B, M), DEFAULT_GAIN, k.ETH) @=> BM7_8;

    c.make(s.triad(9, n.C, M), DEFAULT_GAIN, k.ETH) @=> CM8_8;
    c.make(s.triad(9, n.Cs, M), DEFAULT_GAIN, k.ETH) @=> CsM8_8;
    c.make(s.triad(9, n.D, M), DEFAULT_GAIN, k.ETH) @=> DM8_8;
    c.make(s.triad(9, n.Ds, M), DEFAULT_GAIN, k.ETH) @=> DsM8_8;
    c.make(s.triad(9, n.Ef, M), DEFAULT_GAIN, k.ETH) @=> EfM8_8;
    c.make(s.triad(9, n.E, M), DEFAULT_GAIN, k.ETH) @=> EM8_8;
    c.make(s.triad(9, n.F, M), DEFAULT_GAIN, k.ETH) @=> FM8_8;
    c.make(s.triad(9, n.Fs, M), DEFAULT_GAIN, k.ETH) @=> FsM8_8;
    c.make(s.triad(9, n.Gf, M), DEFAULT_GAIN, k.ETH) @=> GfM8_8;
    c.make(s.triad(9, n.G, M), DEFAULT_GAIN, k.ETH) @=> GM8_8;
    c.make(s.triad(9, n.Gs, M), DEFAULT_GAIN, k.ETH) @=> GsM8_8;
    c.make(s.triad(9, n.Af, M), DEFAULT_GAIN, k.ETH) @=> AfM8_8;
    c.make(s.triad(9, n.A, M), DEFAULT_GAIN, k.ETH) @=> AM8_8;
    c.make(s.triad(9, n.As, M), DEFAULT_GAIN, k.ETH) @=> AsM8_8;
    c.make(s.triad(9, n.Bf, M), DEFAULT_GAIN, k.ETH) @=> BfM8_8;
    c.make(s.triad(9, n.B, M), DEFAULT_GAIN, k.ETH) @=> BM8_8;

    // Minor
    c.make(s.triad(0, n.C, m), DEFAULT_GAIN, k.ETH) @=> Cm_8;
    c.make(s.triad(0, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Csm_8;
    c.make(s.triad(0, n.D, m), DEFAULT_GAIN, k.ETH) @=> Dm_8;
    c.make(s.triad(0, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Dsm_8;
    c.make(s.triad(0, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Efm_8;
    c.make(s.triad(0, n.E, m), DEFAULT_GAIN, k.ETH) @=> Em_8;
    c.make(s.triad(0, n.F, m), DEFAULT_GAIN, k.ETH) @=> _Fm_8;
    c.make(s.triad(0, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Fsm_8;
    c.make(s.triad(0, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Gfm_8;
    c.make(s.triad(0, n.G, m), DEFAULT_GAIN, k.ETH) @=> Gm_8;
    c.make(s.triad(0, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Gsm_8;
    c.make(s.triad(0, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Afm_8;
    c.make(s.triad(0, n.A, m), DEFAULT_GAIN, k.ETH) @=> Am_8;
    c.make(s.triad(0, n.As, m), DEFAULT_GAIN, k.ETH) @=> Asm_8;
    c.make(s.triad(0, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Bfm_8;
    c.make(s.triad(0, n.B, m), DEFAULT_GAIN, k.ETH) @=> Bm_8;

    c.make(s.triad(1, n.C, m), DEFAULT_GAIN, k.ETH) @=> Cm0_8;
    c.make(s.triad(1, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Csm0_8;
    c.make(s.triad(1, n.D, m), DEFAULT_GAIN, k.ETH) @=> Dm0_8;
    c.make(s.triad(1, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Dsm0_8;
    c.make(s.triad(1, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Efm0_8;
    c.make(s.triad(1, n.E, m), DEFAULT_GAIN, k.ETH) @=> Em0_8;
    c.make(s.triad(1, n.F, m), DEFAULT_GAIN, k.ETH) @=> _Fm0_8;
    c.make(s.triad(1, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Fsm0_8;
    c.make(s.triad(1, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Gfm0_8;
    c.make(s.triad(1, n.G, m), DEFAULT_GAIN, k.ETH) @=> Gm0_8;
    c.make(s.triad(1, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Gsm0_8;
    c.make(s.triad(1, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Afm0_8;
    c.make(s.triad(1, n.A, m), DEFAULT_GAIN, k.ETH) @=> Am0_8;
    c.make(s.triad(1, n.As, m), DEFAULT_GAIN, k.ETH) @=> Asm0_8;
    c.make(s.triad(1, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Bfm0_8;
    c.make(s.triad(1, n.B, m), DEFAULT_GAIN, k.ETH) @=> Bm0_8;

    c.make(s.triad(2, n.C, m), DEFAULT_GAIN, k.ETH) @=> Cm1_8;
    c.make(s.triad(2, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Csm1_8;
    c.make(s.triad(2, n.D, m), DEFAULT_GAIN, k.ETH) @=> Dm1_8;
    c.make(s.triad(2, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Dsm1_8;
    c.make(s.triad(2, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Efm1_8;
    c.make(s.triad(2, n.E, m), DEFAULT_GAIN, k.ETH) @=> Em1_8;
    c.make(s.triad(2, n.F, m), DEFAULT_GAIN, k.ETH) @=> _Fm1_8;
    c.make(s.triad(2, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Fsm1_8;
    c.make(s.triad(2, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Gfm1_8;
    c.make(s.triad(2, n.G, m), DEFAULT_GAIN, k.ETH) @=> Gm1_8;
    c.make(s.triad(2, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Gsm1_8;
    c.make(s.triad(2, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Afm1_8;
    c.make(s.triad(2, n.A, m), DEFAULT_GAIN, k.ETH) @=> Am1_8;
    c.make(s.triad(2, n.As, m), DEFAULT_GAIN, k.ETH) @=> Asm1_8;
    c.make(s.triad(2, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Bfm1_8;
    c.make(s.triad(2, n.B, m), DEFAULT_GAIN, k.ETH) @=> Bm1_8;

    c.make(s.triad(3, n.C, m), DEFAULT_GAIN, k.ETH) @=> Cm2_8;
    c.make(s.triad(3, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Csm2_8;
    c.make(s.triad(3, n.D, m), DEFAULT_GAIN, k.ETH) @=> Dm2_8;
    c.make(s.triad(3, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Dsm2_8;
    c.make(s.triad(3, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Efm2_8;
    c.make(s.triad(3, n.E, m), DEFAULT_GAIN, k.ETH) @=> Em2_8;
    c.make(s.triad(3, n.F, m), DEFAULT_GAIN, k.ETH) @=> _Fm2_8;
    c.make(s.triad(3, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Fsm2_8;
    c.make(s.triad(3, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Gfm2_8;
    c.make(s.triad(3, n.G, m), DEFAULT_GAIN, k.ETH) @=> Gm2_8;
    c.make(s.triad(3, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Gsm2_8;
    c.make(s.triad(3, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Afm2_8;
    c.make(s.triad(3, n.A, m), DEFAULT_GAIN, k.ETH) @=> Am2_8;
    c.make(s.triad(3, n.As, m), DEFAULT_GAIN, k.ETH) @=> Asm2_8;
    c.make(s.triad(3, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Bfm2_8;
    c.make(s.triad(3, n.B, m), DEFAULT_GAIN, k.ETH) @=> Bm2_8;

    c.make(s.triad(4, n.C, m), DEFAULT_GAIN, k.ETH) @=> Cm3_8;
    c.make(s.triad(4, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Csm3_8;
    c.make(s.triad(4, n.D, m), DEFAULT_GAIN, k.ETH) @=> Dm3_8;
    c.make(s.triad(4, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Dsm3_8;
    c.make(s.triad(4, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Efm3_8;
    c.make(s.triad(4, n.E, m), DEFAULT_GAIN, k.ETH) @=> Em3_8;
    c.make(s.triad(4, n.F, m), DEFAULT_GAIN, k.ETH) @=> _Fm3_8;
    c.make(s.triad(4, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Fsm3_8;
    c.make(s.triad(4, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Gfm3_8;
    c.make(s.triad(4, n.G, m), DEFAULT_GAIN, k.ETH) @=> Gm3_8;
    c.make(s.triad(4, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Gsm3_8;
    c.make(s.triad(4, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Afm3_8;
    c.make(s.triad(4, n.A, m), DEFAULT_GAIN, k.ETH) @=> Am3_8;
    c.make(s.triad(4, n.As, m), DEFAULT_GAIN, k.ETH) @=> Asm3_8;
    c.make(s.triad(4, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Bfm3_8;
    c.make(s.triad(4, n.B, m), DEFAULT_GAIN, k.ETH) @=> Bm3_8;

    c.make(s.triad(5, n.C, m), DEFAULT_GAIN, k.ETH) @=> Cm4_8;
    c.make(s.triad(5, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Csm4_8;
    c.make(s.triad(5, n.D, m), DEFAULT_GAIN, k.ETH) @=> Dm4_8;
    c.make(s.triad(5, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Dsm4_8;
    c.make(s.triad(5, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Efm4_8;
    c.make(s.triad(5, n.E, m), DEFAULT_GAIN, k.ETH) @=> Em4_8;
    c.make(s.triad(5, n.F, m), DEFAULT_GAIN, k.ETH) @=> _Fm4_8;
    c.make(s.triad(5, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Fsm4_8;
    c.make(s.triad(5, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Gfm4_8;
    c.make(s.triad(5, n.G, m), DEFAULT_GAIN, k.ETH) @=> Gm4_8;
    c.make(s.triad(5, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Gsm4_8;
    c.make(s.triad(5, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Afm4_8;
    c.make(s.triad(5, n.A, m), DEFAULT_GAIN, k.ETH) @=> Am4_8;
    c.make(s.triad(5, n.As, m), DEFAULT_GAIN, k.ETH) @=> Asm4_8;
    c.make(s.triad(5, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Bfm4_8;
    c.make(s.triad(5, n.B, m), DEFAULT_GAIN, k.ETH) @=> Bm4_8;

    c.make(s.triad(6, n.C, m), DEFAULT_GAIN, k.ETH) @=> Cm5_8;
    c.make(s.triad(6, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Csm5_8;
    c.make(s.triad(6, n.D, m), DEFAULT_GAIN, k.ETH) @=> Dm5_8;
    c.make(s.triad(6, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Dsm5_8;
    c.make(s.triad(6, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Efm5_8;
    c.make(s.triad(6, n.E, m), DEFAULT_GAIN, k.ETH) @=> Em5_8;
    c.make(s.triad(6, n.F, m), DEFAULT_GAIN, k.ETH) @=> _Fm5_8;
    c.make(s.triad(6, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Fsm5_8;
    c.make(s.triad(6, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Gfm5_8;
    c.make(s.triad(6, n.G, m), DEFAULT_GAIN, k.ETH) @=> Gm5_8;
    c.make(s.triad(6, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Gsm5_8;
    c.make(s.triad(6, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Afm5_8;
    c.make(s.triad(6, n.A, m), DEFAULT_GAIN, k.ETH) @=> Am5_8;
    c.make(s.triad(6, n.As, m), DEFAULT_GAIN, k.ETH) @=> Asm5_8;
    c.make(s.triad(6, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Bfm5_8;
    c.make(s.triad(6, n.B, m), DEFAULT_GAIN, k.ETH) @=> Bm5_8;

    c.make(s.triad(7, n.C, m), DEFAULT_GAIN, k.ETH) @=> Cm6_8;
    c.make(s.triad(7, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Csm6_8;
    c.make(s.triad(7, n.D, m), DEFAULT_GAIN, k.ETH) @=> Dm6_8;
    c.make(s.triad(7, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Dsm6_8;
    c.make(s.triad(7, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Efm6_8;
    c.make(s.triad(7, n.E, m), DEFAULT_GAIN, k.ETH) @=> Em6_8;
    c.make(s.triad(7, n.F, m), DEFAULT_GAIN, k.ETH) @=> _Fm6_8;
    c.make(s.triad(7, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Fsm6_8;
    c.make(s.triad(7, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Gfm6_8;
    c.make(s.triad(7, n.G, m), DEFAULT_GAIN, k.ETH) @=> Gm6_8;
    c.make(s.triad(7, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Gsm6_8;
    c.make(s.triad(7, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Afm6_8;
    c.make(s.triad(7, n.A, m), DEFAULT_GAIN, k.ETH) @=> Am6_8;
    c.make(s.triad(7, n.As, m), DEFAULT_GAIN, k.ETH) @=> Asm6_8;
    c.make(s.triad(7, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Bfm6_8;
    c.make(s.triad(7, n.B, m), DEFAULT_GAIN, k.ETH) @=> Bm6_8;

    c.make(s.triad(8, n.C, m), DEFAULT_GAIN, k.ETH) @=> Cm7_8;
    c.make(s.triad(8, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Csm7_8;
    c.make(s.triad(8, n.D, m), DEFAULT_GAIN, k.ETH) @=> Dm7_8;
    c.make(s.triad(8, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Dsm7_8;
    c.make(s.triad(8, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Efm7_8;
    c.make(s.triad(8, n.E, m), DEFAULT_GAIN, k.ETH) @=> Em7_8;
    c.make(s.triad(8, n.F, m), DEFAULT_GAIN, k.ETH) @=> _Fm7_8;
    c.make(s.triad(8, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Fsm7_8;
    c.make(s.triad(8, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Gfm7_8;
    c.make(s.triad(8, n.G, m), DEFAULT_GAIN, k.ETH) @=> Gm7_8;
    c.make(s.triad(8, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Gsm7_8;
    c.make(s.triad(8, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Afm7_8;
    c.make(s.triad(8, n.A, m), DEFAULT_GAIN, k.ETH) @=> Am7_8;
    c.make(s.triad(8, n.As, m), DEFAULT_GAIN, k.ETH) @=> Asm7_8;
    c.make(s.triad(8, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Bfm7_8;
    c.make(s.triad(8, n.B, m), DEFAULT_GAIN, k.ETH) @=> Bm7_8;

    c.make(s.triad(9, n.C, m), DEFAULT_GAIN, k.ETH) @=> Cm8_8;
    c.make(s.triad(9, n.Cs, m), DEFAULT_GAIN, k.ETH) @=> Csm8_8;
    c.make(s.triad(9, n.D, m), DEFAULT_GAIN, k.ETH) @=> Dm8_8;
    c.make(s.triad(9, n.Ds, m), DEFAULT_GAIN, k.ETH) @=> Dsm8_8;
    c.make(s.triad(9, n.Ef, m), DEFAULT_GAIN, k.ETH) @=> Efm8_8;
    c.make(s.triad(9, n.E, m), DEFAULT_GAIN, k.ETH) @=> Em8_8;
    c.make(s.triad(9, n.F, m), DEFAULT_GAIN, k.ETH) @=> _Fm8_8;
    c.make(s.triad(9, n.Fs, m), DEFAULT_GAIN, k.ETH) @=> Fsm8_8;
    c.make(s.triad(9, n.Gf, m), DEFAULT_GAIN, k.ETH) @=> Gfm8_8;
    c.make(s.triad(9, n.G, m), DEFAULT_GAIN, k.ETH) @=> Gm8_8;
    c.make(s.triad(9, n.Gs, m), DEFAULT_GAIN, k.ETH) @=> Gsm8_8;
    c.make(s.triad(9, n.Af, m), DEFAULT_GAIN, k.ETH) @=> Afm8_8;
    c.make(s.triad(9, n.A, m), DEFAULT_GAIN, k.ETH) @=> Am8_8;
    c.make(s.triad(9, n.As, m), DEFAULT_GAIN, k.ETH) @=> Asm8_8;
    c.make(s.triad(9, n.Bf, m), DEFAULT_GAIN, k.ETH) @=> Bfm8_8;
    c.make(s.triad(9, n.B, m), DEFAULT_GAIN, k.ETH) @=> Bm8_8;

    // Augmented
    c.make(s.triad(0, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Caug_8;
    c.make(s.triad(0, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Csaug_8;
    c.make(s.triad(0, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Daug_8;
    c.make(s.triad(0, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Dsaug_8;
    c.make(s.triad(0, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Efaug_8;
    c.make(s.triad(0, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Eaug_8;
    c.make(s.triad(0, n.F, aug), DEFAULT_GAIN, k.ETH) @=> _Faug_8;
    c.make(s.triad(0, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Fsaug_8;
    c.make(s.triad(0, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Gfaug_8;
    c.make(s.triad(0, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Gaug_8;
    c.make(s.triad(0, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Gsaug_8;
    c.make(s.triad(0, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Afaug_8;
    c.make(s.triad(0, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Aaug_8;
    c.make(s.triad(0, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Asaug_8;
    c.make(s.triad(0, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Bfaug_8;
    c.make(s.triad(0, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Baug_8;

    c.make(s.triad(1, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Caug0_8;
    c.make(s.triad(1, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Csaug0_8;
    c.make(s.triad(1, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Daug0_8;
    c.make(s.triad(1, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Dsaug0_8;
    c.make(s.triad(1, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Efaug0_8;
    c.make(s.triad(1, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Eaug0_8;
    c.make(s.triad(1, n.F, aug), DEFAULT_GAIN, k.ETH) @=> _Faug0_8;
    c.make(s.triad(1, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Fsaug0_8;
    c.make(s.triad(1, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Gfaug0_8;
    c.make(s.triad(1, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Gaug0_8;
    c.make(s.triad(1, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Gsaug0_8;
    c.make(s.triad(1, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Afaug0_8;
    c.make(s.triad(1, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Aaug0_8;
    c.make(s.triad(1, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Asaug0_8;
    c.make(s.triad(1, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Bfaug0_8;
    c.make(s.triad(1, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Baug0_8;

    c.make(s.triad(2, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Caug1_8;
    c.make(s.triad(2, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Csaug1_8;
    c.make(s.triad(2, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Daug1_8;
    c.make(s.triad(2, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Dsaug1_8;
    c.make(s.triad(2, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Efaug1_8;
    c.make(s.triad(2, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Eaug1_8;
    c.make(s.triad(2, n.F, aug), DEFAULT_GAIN, k.ETH) @=> _Faug1_8;
    c.make(s.triad(2, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Fsaug1_8;
    c.make(s.triad(2, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Gfaug1_8;
    c.make(s.triad(2, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Gaug1_8;
    c.make(s.triad(2, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Gsaug1_8;
    c.make(s.triad(2, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Afaug1_8;
    c.make(s.triad(2, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Aaug1_8;
    c.make(s.triad(2, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Asaug1_8;
    c.make(s.triad(2, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Bfaug1_8;
    c.make(s.triad(2, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Baug1_8;

    c.make(s.triad(3, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Caug2_8;
    c.make(s.triad(3, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Csaug2_8;
    c.make(s.triad(3, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Daug2_8;
    c.make(s.triad(3, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Dsaug2_8;
    c.make(s.triad(3, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Efaug2_8;
    c.make(s.triad(3, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Eaug2_8;
    c.make(s.triad(3, n.F, aug), DEFAULT_GAIN, k.ETH) @=> _Faug2_8;
    c.make(s.triad(3, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Fsaug2_8;
    c.make(s.triad(3, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Gfaug2_8;
    c.make(s.triad(3, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Gaug2_8;
    c.make(s.triad(3, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Gsaug2_8;
    c.make(s.triad(3, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Afaug2_8;
    c.make(s.triad(3, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Aaug2_8;
    c.make(s.triad(3, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Asaug2_8;
    c.make(s.triad(3, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Bfaug2_8;
    c.make(s.triad(3, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Baug2_8;

    c.make(s.triad(4, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Caug3_8;
    c.make(s.triad(4, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Csaug3_8;
    c.make(s.triad(4, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Daug3_8;
    c.make(s.triad(4, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Dsaug3_8;
    c.make(s.triad(4, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Efaug3_8;
    c.make(s.triad(4, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Eaug3_8;
    c.make(s.triad(4, n.F, aug), DEFAULT_GAIN, k.ETH) @=> _Faug3_8;
    c.make(s.triad(4, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Fsaug3_8;
    c.make(s.triad(4, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Gfaug3_8;
    c.make(s.triad(4, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Gaug3_8;
    c.make(s.triad(4, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Gsaug3_8;
    c.make(s.triad(4, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Afaug3_8;
    c.make(s.triad(4, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Aaug3_8;
    c.make(s.triad(4, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Asaug3_8;
    c.make(s.triad(4, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Bfaug3_8;
    c.make(s.triad(4, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Baug3_8;

    c.make(s.triad(5, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Caug4_8;
    c.make(s.triad(5, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Csaug4_8;
    c.make(s.triad(5, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Daug4_8;
    c.make(s.triad(5, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Dsaug4_8;
    c.make(s.triad(5, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Efaug4_8;
    c.make(s.triad(5, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Eaug4_8;
    c.make(s.triad(5, n.F, aug), DEFAULT_GAIN, k.ETH) @=> _Faug4_8;
    c.make(s.triad(5, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Fsaug4_8;
    c.make(s.triad(5, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Gfaug4_8;
    c.make(s.triad(5, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Gaug4_8;
    c.make(s.triad(5, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Gsaug4_8;
    c.make(s.triad(5, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Afaug4_8;
    c.make(s.triad(5, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Aaug4_8;
    c.make(s.triad(5, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Asaug4_8;
    c.make(s.triad(5, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Bfaug4_8;
    c.make(s.triad(5, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Baug4_8;

    c.make(s.triad(6, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Caug5_8;
    c.make(s.triad(6, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Csaug5_8;
    c.make(s.triad(6, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Daug5_8;
    c.make(s.triad(6, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Dsaug5_8;
    c.make(s.triad(6, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Efaug5_8;
    c.make(s.triad(6, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Eaug5_8;
    c.make(s.triad(6, n.F, aug), DEFAULT_GAIN, k.ETH) @=> _Faug5_8;
    c.make(s.triad(6, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Fsaug5_8;
    c.make(s.triad(6, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Gfaug5_8;
    c.make(s.triad(6, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Gaug5_8;
    c.make(s.triad(6, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Gsaug5_8;
    c.make(s.triad(6, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Afaug5_8;
    c.make(s.triad(6, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Aaug5_8;
    c.make(s.triad(6, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Asaug5_8;
    c.make(s.triad(6, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Bfaug5_8;
    c.make(s.triad(6, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Baug5_8;

    c.make(s.triad(7, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Caug6_8;
    c.make(s.triad(7, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Csaug6_8;
    c.make(s.triad(7, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Daug6_8;
    c.make(s.triad(7, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Dsaug6_8;
    c.make(s.triad(7, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Efaug6_8;
    c.make(s.triad(7, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Eaug6_8;
    c.make(s.triad(7, n.F, aug), DEFAULT_GAIN, k.ETH) @=> _Faug6_8;
    c.make(s.triad(7, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Fsaug6_8;
    c.make(s.triad(7, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Gfaug6_8;
    c.make(s.triad(7, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Gaug6_8;
    c.make(s.triad(7, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Gsaug6_8;
    c.make(s.triad(7, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Afaug6_8;
    c.make(s.triad(7, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Aaug6_8;
    c.make(s.triad(7, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Asaug6_8;
    c.make(s.triad(7, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Bfaug6_8;
    c.make(s.triad(7, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Baug6_8;

    c.make(s.triad(8, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Caug7_8;
    c.make(s.triad(8, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Csaug7_8;
    c.make(s.triad(8, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Daug7_8;
    c.make(s.triad(8, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Dsaug7_8;
    c.make(s.triad(8, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Efaug7_8;
    c.make(s.triad(8, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Eaug7_8;
    c.make(s.triad(8, n.F, aug), DEFAULT_GAIN, k.ETH) @=> _Faug7_8;
    c.make(s.triad(8, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Fsaug7_8;
    c.make(s.triad(8, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Gfaug7_8;
    c.make(s.triad(8, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Gaug7_8;
    c.make(s.triad(8, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Gsaug7_8;
    c.make(s.triad(8, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Afaug7_8;
    c.make(s.triad(8, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Aaug7_8;
    c.make(s.triad(8, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Asaug7_8;
    c.make(s.triad(8, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Bfaug7_8;
    c.make(s.triad(8, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Baug7_8;

    c.make(s.triad(9, n.C, aug), DEFAULT_GAIN, k.ETH) @=> Caug8_8;
    c.make(s.triad(9, n.Cs, aug), DEFAULT_GAIN, k.ETH) @=> Csaug8_8;
    c.make(s.triad(9, n.D, aug), DEFAULT_GAIN, k.ETH) @=> Daug8_8;
    c.make(s.triad(9, n.Ds, aug), DEFAULT_GAIN, k.ETH) @=> Dsaug8_8;
    c.make(s.triad(9, n.Ef, aug), DEFAULT_GAIN, k.ETH) @=> Efaug8_8;
    c.make(s.triad(9, n.E, aug), DEFAULT_GAIN, k.ETH) @=> Eaug8_8;
    c.make(s.triad(9, n.F, aug), DEFAULT_GAIN, k.ETH) @=> _Faug8_8;
    c.make(s.triad(9, n.Fs, aug), DEFAULT_GAIN, k.ETH) @=> Fsaug8_8;
    c.make(s.triad(9, n.Gf, aug), DEFAULT_GAIN, k.ETH) @=> Gfaug8_8;
    c.make(s.triad(9, n.G, aug), DEFAULT_GAIN, k.ETH) @=> Gaug8_8;
    c.make(s.triad(9, n.Gs, aug), DEFAULT_GAIN, k.ETH) @=> Gsaug8_8;
    c.make(s.triad(9, n.Af, aug), DEFAULT_GAIN, k.ETH) @=> Afaug8_8;
    c.make(s.triad(9, n.A, aug), DEFAULT_GAIN, k.ETH) @=> Aaug8_8;
    c.make(s.triad(9, n.As, aug), DEFAULT_GAIN, k.ETH) @=> Asaug8_8;
    c.make(s.triad(9, n.Bf, aug), DEFAULT_GAIN, k.ETH) @=> Bfaug8_8;
    c.make(s.triad(9, n.B, aug), DEFAULT_GAIN, k.ETH) @=> Baug8_8;

    // Diminished
    c.make(s.triad(0, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Cdim_8;
    c.make(s.triad(0, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Csdim_8;
    c.make(s.triad(0, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Ddim_8;
    c.make(s.triad(0, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Dsdim_8;
    c.make(s.triad(0, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Efdim_8;
    c.make(s.triad(0, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Edim_8;
    c.make(s.triad(0, n.F, dim), DEFAULT_GAIN, k.ETH) @=> _Fdim_8;
    c.make(s.triad(0, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Fsdim_8;
    c.make(s.triad(0, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Gfdim_8;
    c.make(s.triad(0, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Gdim_8;
    c.make(s.triad(0, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Gsdim_8;
    c.make(s.triad(0, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Afdim_8;
    c.make(s.triad(0, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Adim_8;
    c.make(s.triad(0, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Asdim_8;
    c.make(s.triad(0, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Bfdim_8;
    c.make(s.triad(0, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Bdim_8;

    c.make(s.triad(1, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Cdim0_8;
    c.make(s.triad(1, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Csdim0_8;
    c.make(s.triad(1, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Ddim0_8;
    c.make(s.triad(1, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Dsdim0_8;
    c.make(s.triad(1, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Efdim0_8;
    c.make(s.triad(1, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Edim0_8;
    c.make(s.triad(1, n.F, dim), DEFAULT_GAIN, k.ETH) @=> _Fdim0_8;
    c.make(s.triad(1, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Fsdim0_8;
    c.make(s.triad(1, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Gfdim0_8;
    c.make(s.triad(1, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Gdim0_8;
    c.make(s.triad(1, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Gsdim0_8;
    c.make(s.triad(1, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Afdim0_8;
    c.make(s.triad(1, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Adim0_8;
    c.make(s.triad(1, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Asdim0_8;
    c.make(s.triad(1, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Bfdim0_8;
    c.make(s.triad(1, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Bdim0_8;

    c.make(s.triad(2, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Cdim1_8;
    c.make(s.triad(2, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Csdim1_8;
    c.make(s.triad(2, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Ddim1_8;
    c.make(s.triad(2, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Dsdim1_8;
    c.make(s.triad(2, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Efdim1_8;
    c.make(s.triad(2, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Edim1_8;
    c.make(s.triad(2, n.F, dim), DEFAULT_GAIN, k.ETH) @=> _Fdim1_8;
    c.make(s.triad(2, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Fsdim1_8;
    c.make(s.triad(2, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Gfdim1_8;
    c.make(s.triad(2, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Gdim1_8;
    c.make(s.triad(2, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Gsdim1_8;
    c.make(s.triad(2, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Afdim1_8;
    c.make(s.triad(2, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Adim1_8;
    c.make(s.triad(2, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Asdim1_8;
    c.make(s.triad(2, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Bfdim1_8;
    c.make(s.triad(2, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Bdim1_8;

    c.make(s.triad(3, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Cdim2_8;
    c.make(s.triad(3, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Csdim2_8;
    c.make(s.triad(3, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Ddim2_8;
    c.make(s.triad(3, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Dsdim2_8;
    c.make(s.triad(3, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Efdim2_8;
    c.make(s.triad(3, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Edim2_8;
    c.make(s.triad(3, n.F, dim), DEFAULT_GAIN, k.ETH) @=> _Fdim2_8;
    c.make(s.triad(3, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Fsdim2_8;
    c.make(s.triad(3, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Gfdim2_8;
    c.make(s.triad(3, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Gdim2_8;
    c.make(s.triad(3, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Gsdim2_8;
    c.make(s.triad(3, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Afdim2_8;
    c.make(s.triad(3, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Adim2_8;
    c.make(s.triad(3, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Asdim2_8;
    c.make(s.triad(3, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Bfdim2_8;
    c.make(s.triad(3, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Bdim2_8;

    c.make(s.triad(4, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Cdim3_8;
    c.make(s.triad(4, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Csdim3_8;
    c.make(s.triad(4, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Ddim3_8;
    c.make(s.triad(4, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Dsdim3_8;
    c.make(s.triad(4, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Efdim3_8;
    c.make(s.triad(4, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Edim3_8;
    c.make(s.triad(4, n.F, dim), DEFAULT_GAIN, k.ETH) @=> _Fdim3_8;
    c.make(s.triad(4, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Fsdim3_8;
    c.make(s.triad(4, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Gfdim3_8;
    c.make(s.triad(4, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Gdim3_8;
    c.make(s.triad(4, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Gsdim3_8;
    c.make(s.triad(4, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Afdim3_8;
    c.make(s.triad(4, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Adim3_8;
    c.make(s.triad(4, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Asdim3_8;
    c.make(s.triad(4, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Bfdim3_8;
    c.make(s.triad(4, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Bdim3_8;

    c.make(s.triad(5, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Cdim4_8;
    c.make(s.triad(5, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Csdim4_8;
    c.make(s.triad(5, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Ddim4_8;
    c.make(s.triad(5, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Dsdim4_8;
    c.make(s.triad(5, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Efdim4_8;
    c.make(s.triad(5, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Edim4_8;
    c.make(s.triad(5, n.F, dim), DEFAULT_GAIN, k.ETH) @=> _Fdim4_8;
    c.make(s.triad(5, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Fsdim4_8;
    c.make(s.triad(5, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Gfdim4_8;
    c.make(s.triad(5, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Gdim4_8;
    c.make(s.triad(5, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Gsdim4_8;
    c.make(s.triad(5, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Afdim4_8;
    c.make(s.triad(5, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Adim4_8;
    c.make(s.triad(5, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Asdim4_8;
    c.make(s.triad(5, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Bfdim4_8;
    c.make(s.triad(5, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Bdim4_8;

    c.make(s.triad(6, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Cdim5_8;
    c.make(s.triad(6, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Csdim5_8;
    c.make(s.triad(6, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Ddim5_8;
    c.make(s.triad(6, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Dsdim5_8;
    c.make(s.triad(6, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Efdim5_8;
    c.make(s.triad(6, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Edim5_8;
    c.make(s.triad(6, n.F, dim), DEFAULT_GAIN, k.ETH) @=> _Fdim5_8;
    c.make(s.triad(6, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Fsdim5_8;
    c.make(s.triad(6, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Gfdim5_8;
    c.make(s.triad(6, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Gdim5_8;
    c.make(s.triad(6, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Gsdim5_8;
    c.make(s.triad(6, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Afdim5_8;
    c.make(s.triad(6, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Adim5_8;
    c.make(s.triad(6, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Asdim5_8;
    c.make(s.triad(6, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Bfdim5_8;
    c.make(s.triad(6, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Bdim5_8;

    c.make(s.triad(7, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Cdim6_8;
    c.make(s.triad(7, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Csdim6_8;
    c.make(s.triad(7, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Ddim6_8;
    c.make(s.triad(7, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Dsdim6_8;
    c.make(s.triad(7, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Efdim6_8;
    c.make(s.triad(7, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Edim6_8;
    c.make(s.triad(7, n.F, dim), DEFAULT_GAIN, k.ETH) @=> _Fdim6_8;
    c.make(s.triad(7, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Fsdim6_8;
    c.make(s.triad(7, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Gfdim6_8;
    c.make(s.triad(7, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Gdim6_8;
    c.make(s.triad(7, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Gsdim6_8;
    c.make(s.triad(7, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Afdim6_8;
    c.make(s.triad(7, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Adim6_8;
    c.make(s.triad(7, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Asdim6_8;
    c.make(s.triad(7, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Bfdim6_8;
    c.make(s.triad(7, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Bdim6_8;

    c.make(s.triad(8, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Cdim7_8;
    c.make(s.triad(8, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Csdim7_8;
    c.make(s.triad(8, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Ddim7_8;
    c.make(s.triad(8, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Dsdim7_8;
    c.make(s.triad(8, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Efdim7_8;
    c.make(s.triad(8, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Edim7_8;
    c.make(s.triad(8, n.F, dim), DEFAULT_GAIN, k.ETH) @=> _Fdim7_8;
    c.make(s.triad(8, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Fsdim7_8;
    c.make(s.triad(8, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Gfdim7_8;
    c.make(s.triad(8, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Gdim7_8;
    c.make(s.triad(8, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Gsdim7_8;
    c.make(s.triad(8, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Afdim7_8;
    c.make(s.triad(8, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Adim7_8;
    c.make(s.triad(8, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Asdim7_8;
    c.make(s.triad(8, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Bfdim7_8;
    c.make(s.triad(8, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Bdim7_8;

    c.make(s.triad(9, n.C, dim), DEFAULT_GAIN, k.ETH) @=> Cdim8_8;
    c.make(s.triad(9, n.Cs, dim), DEFAULT_GAIN, k.ETH) @=> Csdim8_8;
    c.make(s.triad(9, n.D, dim), DEFAULT_GAIN, k.ETH) @=> Ddim8_8;
    c.make(s.triad(9, n.Ds, dim), DEFAULT_GAIN, k.ETH) @=> Dsdim8_8;
    c.make(s.triad(9, n.Ef, dim), DEFAULT_GAIN, k.ETH) @=> Efdim8_8;
    c.make(s.triad(9, n.E, dim), DEFAULT_GAIN, k.ETH) @=> Edim8_8;
    c.make(s.triad(9, n.F, dim), DEFAULT_GAIN, k.ETH) @=> _Fdim8_8;
    c.make(s.triad(9, n.Fs, dim), DEFAULT_GAIN, k.ETH) @=> Fsdim8_8;
    c.make(s.triad(9, n.Gf, dim), DEFAULT_GAIN, k.ETH) @=> Gfdim8_8;
    c.make(s.triad(9, n.G, dim), DEFAULT_GAIN, k.ETH) @=> Gdim8_8;
    c.make(s.triad(9, n.Gs, dim), DEFAULT_GAIN, k.ETH) @=> Gsdim8_8;
    c.make(s.triad(9, n.Af, dim), DEFAULT_GAIN, k.ETH) @=> Afdim8_8;
    c.make(s.triad(9, n.A, dim), DEFAULT_GAIN, k.ETH) @=> Adim8_8;
    c.make(s.triad(9, n.As, dim), DEFAULT_GAIN, k.ETH) @=> Asdim8_8;
    c.make(s.triad(9, n.Bf, dim), DEFAULT_GAIN, k.ETH) @=> Bfdim8_8;
    c.make(s.triad(9, n.B, dim), DEFAULT_GAIN, k.ETH) @=> Bdim8_8;

    //
    // SXTNTH
    //

    // Major
    // 0-based offsets
    c.make(s.triad(0, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> CM_16;
    c.make(s.triad(0, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> CsM_16;
    c.make(s.triad(0, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> DM_16;
    c.make(s.triad(0, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> DsM_16;
    c.make(s.triad(0, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> EfM_16;
    c.make(s.triad(0, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> EM_16;
    c.make(s.triad(0, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> FM_16;
    c.make(s.triad(0, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> FsM_16;
    c.make(s.triad(0, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> GfM_16;
    c.make(s.triad(0, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> GM_16;
    c.make(s.triad(0, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> GsM_16;
    c.make(s.triad(0, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> AfM_16;
    c.make(s.triad(0, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> AM_16;
    c.make(s.triad(0, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> AsM_16;
    c.make(s.triad(0, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> BfM_16;
    c.make(s.triad(0, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> BM_16;

    // constants predefined per octave
    c.make(s.triad(1, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> CM0_16;
    c.make(s.triad(1, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> CsM0_16;
    c.make(s.triad(1, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> DM0_16;
    c.make(s.triad(1, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> DsM0_16;
    c.make(s.triad(1, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> EfM0_16;
    c.make(s.triad(1, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> EM0_16;
    c.make(s.triad(1, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> FM0_16;
    c.make(s.triad(1, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> FsM0_16;
    c.make(s.triad(1, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> GfM0_16;
    c.make(s.triad(1, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> GM0_16;
    c.make(s.triad(1, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> GsM0_16;
    c.make(s.triad(1, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> AfM0_16;
    c.make(s.triad(1, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> AM0_16;
    c.make(s.triad(1, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> AsM0_16;
    c.make(s.triad(1, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> BfM0_16;
    c.make(s.triad(1, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> BM0_16;

    c.make(s.triad(2, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> CM1_16;
    c.make(s.triad(2, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> CsM1_16;
    c.make(s.triad(2, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> DM1_16;
    c.make(s.triad(2, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> DsM1_16;
    c.make(s.triad(2, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> EfM1_16;
    c.make(s.triad(2, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> EM1_16;
    c.make(s.triad(2, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> FM1_16;
    c.make(s.triad(2, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> FsM1_16;
    c.make(s.triad(2, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> GfM1_16;
    c.make(s.triad(2, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> GM1_16;
    c.make(s.triad(2, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> GsM1_16;
    c.make(s.triad(2, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> AfM1_16;
    c.make(s.triad(2, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> AM1_16;
    c.make(s.triad(2, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> AsM1_16;
    c.make(s.triad(2, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> BfM1_16;
    c.make(s.triad(2, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> BM1_16;

    c.make(s.triad(3, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> CM2_16;
    c.make(s.triad(3, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> CsM2_16;
    c.make(s.triad(3, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> DM2_16;
    c.make(s.triad(3, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> DsM2_16;
    c.make(s.triad(3, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> EfM2_16;
    c.make(s.triad(3, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> EM2_16;
    c.make(s.triad(3, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> FM2_16;
    c.make(s.triad(3, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> FsM2_16;
    c.make(s.triad(3, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> GfM2_16;
    c.make(s.triad(3, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> GM2_16;
    c.make(s.triad(3, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> GsM2_16;
    c.make(s.triad(3, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> AfM2_16;
    c.make(s.triad(3, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> AM2_16;
    c.make(s.triad(3, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> AsM2_16;
    c.make(s.triad(3, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> BfM2_16;
    c.make(s.triad(3, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> BM2_16;

    c.make(s.triad(4, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> CM3_16;
    c.make(s.triad(4, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> CsM3_16;
    c.make(s.triad(4, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> DM3_16;
    c.make(s.triad(4, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> DsM3_16;
    c.make(s.triad(4, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> EfM3_16;
    c.make(s.triad(4, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> EM3_16;
    c.make(s.triad(4, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> FM3_16;
    c.make(s.triad(4, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> FsM3_16;
    c.make(s.triad(4, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> GfM3_16;
    c.make(s.triad(4, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> GM3_16;
    c.make(s.triad(4, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> GsM3_16;
    c.make(s.triad(4, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> AfM3_16;
    c.make(s.triad(4, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> AM3_16;
    c.make(s.triad(4, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> AsM3_16;
    c.make(s.triad(4, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> BfM3_16;
    c.make(s.triad(4, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> BM3_16;

    c.make(s.triad(5, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> CM4_16;
    c.make(s.triad(5, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> CsM4_16;
    c.make(s.triad(5, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> DM4_16;
    c.make(s.triad(5, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> DsM4_16;
    c.make(s.triad(5, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> EfM4_16;
    c.make(s.triad(5, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> EM4_16;
    c.make(s.triad(5, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> FM4_16;
    c.make(s.triad(5, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> FsM4_16;
    c.make(s.triad(5, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> GfM4_16;
    c.make(s.triad(5, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> GM4_16;
    c.make(s.triad(5, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> GsM4_16;
    c.make(s.triad(5, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> AfM4_16;
    c.make(s.triad(5, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> AM4_16;
    c.make(s.triad(5, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> AsM4_16;
    c.make(s.triad(5, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> BfM4_16;
    c.make(s.triad(5, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> BM4_16;

    c.make(s.triad(6, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> CM5_16;
    c.make(s.triad(6, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> CsM5_16;
    c.make(s.triad(6, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> DM5_16;
    c.make(s.triad(6, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> DsM5_16;
    c.make(s.triad(6, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> EfM5_16;
    c.make(s.triad(6, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> EM5_16;
    c.make(s.triad(6, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> FM5_16;
    c.make(s.triad(6, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> FsM5_16;
    c.make(s.triad(6, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> GfM5_16;
    c.make(s.triad(6, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> GM5_16;
    c.make(s.triad(6, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> GsM5_16;
    c.make(s.triad(6, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> AfM5_16;
    c.make(s.triad(6, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> AM5_16;
    c.make(s.triad(6, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> AsM5_16;
    c.make(s.triad(6, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> BfM5_16;
    c.make(s.triad(6, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> BM5_16;

    c.make(s.triad(7, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> CM6_16;
    c.make(s.triad(7, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> CsM6_16;
    c.make(s.triad(7, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> DM6_16;
    c.make(s.triad(7, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> DsM6_16;
    c.make(s.triad(7, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> EfM6_16;
    c.make(s.triad(7, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> EM6_16;
    c.make(s.triad(7, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> FM6_16;
    c.make(s.triad(7, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> FsM6_16;
    c.make(s.triad(7, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> GfM6_16;
    c.make(s.triad(7, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> GM6_16;
    c.make(s.triad(7, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> GsM6_16;
    c.make(s.triad(7, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> AfM6_16;
    c.make(s.triad(7, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> AM6_16;
    c.make(s.triad(7, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> AsM6_16;
    c.make(s.triad(7, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> BfM6_16;
    c.make(s.triad(7, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> BM6_16;

    c.make(s.triad(8, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> CM7_16;
    c.make(s.triad(8, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> CsM7_16;
    c.make(s.triad(8, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> DM7_16;
    c.make(s.triad(8, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> DsM7_16;
    c.make(s.triad(8, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> EfM7_16;
    c.make(s.triad(8, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> EM7_16;
    c.make(s.triad(8, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> FM7_16;
    c.make(s.triad(8, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> FsM7_16;
    c.make(s.triad(8, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> GfM7_16;
    c.make(s.triad(8, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> GM7_16;
    c.make(s.triad(8, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> GsM7_16;
    c.make(s.triad(8, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> AfM7_16;
    c.make(s.triad(8, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> AM7_16;
    c.make(s.triad(8, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> AsM7_16;
    c.make(s.triad(8, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> BfM7_16;
    c.make(s.triad(8, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> BM7_16;

    c.make(s.triad(9, n.C, M), DEFAULT_GAIN, k.SXTNTH) @=> CM8_16;
    c.make(s.triad(9, n.Cs, M), DEFAULT_GAIN, k.SXTNTH) @=> CsM8_16;
    c.make(s.triad(9, n.D, M), DEFAULT_GAIN, k.SXTNTH) @=> DM8_16;
    c.make(s.triad(9, n.Ds, M), DEFAULT_GAIN, k.SXTNTH) @=> DsM8_16;
    c.make(s.triad(9, n.Ef, M), DEFAULT_GAIN, k.SXTNTH) @=> EfM8_16;
    c.make(s.triad(9, n.E, M), DEFAULT_GAIN, k.SXTNTH) @=> EM8_16;
    c.make(s.triad(9, n.F, M), DEFAULT_GAIN, k.SXTNTH) @=> FM8_16;
    c.make(s.triad(9, n.Fs, M), DEFAULT_GAIN, k.SXTNTH) @=> FsM8_16;
    c.make(s.triad(9, n.Gf, M), DEFAULT_GAIN, k.SXTNTH) @=> GfM8_16;
    c.make(s.triad(9, n.G, M), DEFAULT_GAIN, k.SXTNTH) @=> GM8_16;
    c.make(s.triad(9, n.Gs, M), DEFAULT_GAIN, k.SXTNTH) @=> GsM8_16;
    c.make(s.triad(9, n.Af, M), DEFAULT_GAIN, k.SXTNTH) @=> AfM8_16;
    c.make(s.triad(9, n.A, M), DEFAULT_GAIN, k.SXTNTH) @=> AM8_16;
    c.make(s.triad(9, n.As, M), DEFAULT_GAIN, k.SXTNTH) @=> AsM8_16;
    c.make(s.triad(9, n.Bf, M), DEFAULT_GAIN, k.SXTNTH) @=> BfM8_16;
    c.make(s.triad(9, n.B, M), DEFAULT_GAIN, k.SXTNTH) @=> BM8_16;

    // Minor
    c.make(s.triad(0, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Cm_16;
    c.make(s.triad(0, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Csm_16;
    c.make(s.triad(0, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Dm_16;
    c.make(s.triad(0, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Dsm_16;
    c.make(s.triad(0, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Efm_16;
    c.make(s.triad(0, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Em_16;
    c.make(s.triad(0, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> _Fm_16;
    c.make(s.triad(0, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Fsm_16;
    c.make(s.triad(0, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Gfm_16;
    c.make(s.triad(0, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Gm_16;
    c.make(s.triad(0, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Gsm_16;
    c.make(s.triad(0, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Afm_16;
    c.make(s.triad(0, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Am_16;
    c.make(s.triad(0, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Asm_16;
    c.make(s.triad(0, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Bfm_16;
    c.make(s.triad(0, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Bm_16;

    c.make(s.triad(1, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Cm0_16;
    c.make(s.triad(1, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Csm0_16;
    c.make(s.triad(1, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Dm0_16;
    c.make(s.triad(1, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Dsm0_16;
    c.make(s.triad(1, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Efm0_16;
    c.make(s.triad(1, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Em0_16;
    c.make(s.triad(1, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> _Fm0_16;
    c.make(s.triad(1, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Fsm0_16;
    c.make(s.triad(1, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Gfm0_16;
    c.make(s.triad(1, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Gm0_16;
    c.make(s.triad(1, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Gsm0_16;
    c.make(s.triad(1, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Afm0_16;
    c.make(s.triad(1, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Am0_16;
    c.make(s.triad(1, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Asm0_16;
    c.make(s.triad(1, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Bfm0_16;
    c.make(s.triad(1, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Bm0_16;

    c.make(s.triad(2, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Cm1_16;
    c.make(s.triad(2, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Csm1_16;
    c.make(s.triad(2, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Dm1_16;
    c.make(s.triad(2, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Dsm1_16;
    c.make(s.triad(2, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Efm1_16;
    c.make(s.triad(2, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Em1_16;
    c.make(s.triad(2, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> _Fm1_16;
    c.make(s.triad(2, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Fsm1_16;
    c.make(s.triad(2, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Gfm1_16;
    c.make(s.triad(2, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Gm1_16;
    c.make(s.triad(2, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Gsm1_16;
    c.make(s.triad(2, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Afm1_16;
    c.make(s.triad(2, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Am1_16;
    c.make(s.triad(2, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Asm1_16;
    c.make(s.triad(2, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Bfm1_16;
    c.make(s.triad(2, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Bm1_16;

    c.make(s.triad(3, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Cm2_16;
    c.make(s.triad(3, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Csm2_16;
    c.make(s.triad(3, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Dm2_16;
    c.make(s.triad(3, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Dsm2_16;
    c.make(s.triad(3, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Efm2_16;
    c.make(s.triad(3, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Em2_16;
    c.make(s.triad(3, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> _Fm2_16;
    c.make(s.triad(3, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Fsm2_16;
    c.make(s.triad(3, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Gfm2_16;
    c.make(s.triad(3, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Gm2_16;
    c.make(s.triad(3, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Gsm2_16;
    c.make(s.triad(3, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Afm2_16;
    c.make(s.triad(3, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Am2_16;
    c.make(s.triad(3, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Asm2_16;
    c.make(s.triad(3, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Bfm2_16;
    c.make(s.triad(3, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Bm2_16;

    c.make(s.triad(4, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Cm3_16;
    c.make(s.triad(4, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Csm3_16;
    c.make(s.triad(4, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Dm3_16;
    c.make(s.triad(4, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Dsm3_16;
    c.make(s.triad(4, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Efm3_16;
    c.make(s.triad(4, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Em3_16;
    c.make(s.triad(4, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> _Fm3_16;
    c.make(s.triad(4, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Fsm3_16;
    c.make(s.triad(4, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Gfm3_16;
    c.make(s.triad(4, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Gm3_16;
    c.make(s.triad(4, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Gsm3_16;
    c.make(s.triad(4, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Afm3_16;
    c.make(s.triad(4, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Am3_16;
    c.make(s.triad(4, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Asm3_16;
    c.make(s.triad(4, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Bfm3_16;
    c.make(s.triad(4, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Bm3_16;

    c.make(s.triad(5, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Cm4_16;
    c.make(s.triad(5, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Csm4_16;
    c.make(s.triad(5, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Dm4_16;
    c.make(s.triad(5, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Dsm4_16;
    c.make(s.triad(5, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Efm4_16;
    c.make(s.triad(5, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Em4_16;
    c.make(s.triad(5, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> _Fm4_16;
    c.make(s.triad(5, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Fsm4_16;
    c.make(s.triad(5, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Gfm4_16;
    c.make(s.triad(5, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Gm4_16;
    c.make(s.triad(5, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Gsm4_16;
    c.make(s.triad(5, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Afm4_16;
    c.make(s.triad(5, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Am4_16;
    c.make(s.triad(5, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Asm4_16;
    c.make(s.triad(5, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Bfm4_16;
    c.make(s.triad(5, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Bm4_16;

    c.make(s.triad(6, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Cm5_16;
    c.make(s.triad(6, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Csm5_16;
    c.make(s.triad(6, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Dm5_16;
    c.make(s.triad(6, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Dsm5_16;
    c.make(s.triad(6, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Efm5_16;
    c.make(s.triad(6, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Em5_16;
    c.make(s.triad(6, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> _Fm5_16;
    c.make(s.triad(6, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Fsm5_16;
    c.make(s.triad(6, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Gfm5_16;
    c.make(s.triad(6, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Gm5_16;
    c.make(s.triad(6, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Gsm5_16;
    c.make(s.triad(6, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Afm5_16;
    c.make(s.triad(6, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Am5_16;
    c.make(s.triad(6, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Asm5_16;
    c.make(s.triad(6, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Bfm5_16;
    c.make(s.triad(6, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Bm5_16;

    c.make(s.triad(7, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Cm6_16;
    c.make(s.triad(7, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Csm6_16;
    c.make(s.triad(7, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Dm6_16;
    c.make(s.triad(7, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Dsm6_16;
    c.make(s.triad(7, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Efm6_16;
    c.make(s.triad(7, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Em6_16;
    c.make(s.triad(7, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> _Fm6_16;
    c.make(s.triad(7, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Fsm6_16;
    c.make(s.triad(7, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Gfm6_16;
    c.make(s.triad(7, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Gm6_16;
    c.make(s.triad(7, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Gsm6_16;
    c.make(s.triad(7, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Afm6_16;
    c.make(s.triad(7, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Am6_16;
    c.make(s.triad(7, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Asm6_16;
    c.make(s.triad(7, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Bfm6_16;
    c.make(s.triad(7, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Bm6_16;

    c.make(s.triad(8, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Cm7_16;
    c.make(s.triad(8, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Csm7_16;
    c.make(s.triad(8, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Dm7_16;
    c.make(s.triad(8, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Dsm7_16;
    c.make(s.triad(8, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Efm7_16;
    c.make(s.triad(8, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Em7_16;
    c.make(s.triad(8, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> _Fm7_16;
    c.make(s.triad(8, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Fsm7_16;
    c.make(s.triad(8, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Gfm7_16;
    c.make(s.triad(8, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Gm7_16;
    c.make(s.triad(8, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Gsm7_16;
    c.make(s.triad(8, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Afm7_16;
    c.make(s.triad(8, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Am7_16;
    c.make(s.triad(8, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Asm7_16;
    c.make(s.triad(8, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Bfm7_16;
    c.make(s.triad(8, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Bm7_16;

    c.make(s.triad(9, n.C, m), DEFAULT_GAIN, k.SXTNTH) @=> Cm8_16;
    c.make(s.triad(9, n.Cs, m), DEFAULT_GAIN, k.SXTNTH) @=> Csm8_16;
    c.make(s.triad(9, n.D, m), DEFAULT_GAIN, k.SXTNTH) @=> Dm8_16;
    c.make(s.triad(9, n.Ds, m), DEFAULT_GAIN, k.SXTNTH) @=> Dsm8_16;
    c.make(s.triad(9, n.Ef, m), DEFAULT_GAIN, k.SXTNTH) @=> Efm8_16;
    c.make(s.triad(9, n.E, m), DEFAULT_GAIN, k.SXTNTH) @=> Em8_16;
    c.make(s.triad(9, n.F, m), DEFAULT_GAIN, k.SXTNTH) @=> _Fm8_16;
    c.make(s.triad(9, n.Fs, m), DEFAULT_GAIN, k.SXTNTH) @=> Fsm8_16;
    c.make(s.triad(9, n.Gf, m), DEFAULT_GAIN, k.SXTNTH) @=> Gfm8_16;
    c.make(s.triad(9, n.G, m), DEFAULT_GAIN, k.SXTNTH) @=> Gm8_16;
    c.make(s.triad(9, n.Gs, m), DEFAULT_GAIN, k.SXTNTH) @=> Gsm8_16;
    c.make(s.triad(9, n.Af, m), DEFAULT_GAIN, k.SXTNTH) @=> Afm8_16;
    c.make(s.triad(9, n.A, m), DEFAULT_GAIN, k.SXTNTH) @=> Am8_16;
    c.make(s.triad(9, n.As, m), DEFAULT_GAIN, k.SXTNTH) @=> Asm8_16;
    c.make(s.triad(9, n.Bf, m), DEFAULT_GAIN, k.SXTNTH) @=> Bfm8_16;
    c.make(s.triad(9, n.B, m), DEFAULT_GAIN, k.SXTNTH) @=> Bm8_16;

    // Augmented
    c.make(s.triad(0, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Caug_16;
    c.make(s.triad(0, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Csaug_16;
    c.make(s.triad(0, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Daug_16;
    c.make(s.triad(0, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Dsaug_16;
    c.make(s.triad(0, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Efaug_16;
    c.make(s.triad(0, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Eaug_16;
    c.make(s.triad(0, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> _Faug_16;
    c.make(s.triad(0, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Fsaug_16;
    c.make(s.triad(0, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gfaug_16;
    c.make(s.triad(0, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gaug_16;
    c.make(s.triad(0, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gsaug_16;
    c.make(s.triad(0, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Afaug_16;
    c.make(s.triad(0, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Aaug_16;
    c.make(s.triad(0, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Asaug_16;
    c.make(s.triad(0, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Bfaug_16;
    c.make(s.triad(0, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Baug_16;

    c.make(s.triad(1, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Caug0_16;
    c.make(s.triad(1, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Csaug0_16;
    c.make(s.triad(1, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Daug0_16;
    c.make(s.triad(1, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Dsaug0_16;
    c.make(s.triad(1, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Efaug0_16;
    c.make(s.triad(1, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Eaug0_16;
    c.make(s.triad(1, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> _Faug0_16;
    c.make(s.triad(1, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Fsaug0_16;
    c.make(s.triad(1, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gfaug0_16;
    c.make(s.triad(1, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gaug0_16;
    c.make(s.triad(1, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gsaug0_16;
    c.make(s.triad(1, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Afaug0_16;
    c.make(s.triad(1, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Aaug0_16;
    c.make(s.triad(1, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Asaug0_16;
    c.make(s.triad(1, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Bfaug0_16;
    c.make(s.triad(1, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Baug0_16;

    c.make(s.triad(2, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Caug1_16;
    c.make(s.triad(2, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Csaug1_16;
    c.make(s.triad(2, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Daug1_16;
    c.make(s.triad(2, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Dsaug1_16;
    c.make(s.triad(2, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Efaug1_16;
    c.make(s.triad(2, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Eaug1_16;
    c.make(s.triad(2, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> _Faug1_16;
    c.make(s.triad(2, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Fsaug1_16;
    c.make(s.triad(2, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gfaug1_16;
    c.make(s.triad(2, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gaug1_16;
    c.make(s.triad(2, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gsaug1_16;
    c.make(s.triad(2, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Afaug1_16;
    c.make(s.triad(2, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Aaug1_16;
    c.make(s.triad(2, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Asaug1_16;
    c.make(s.triad(2, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Bfaug1_16;
    c.make(s.triad(2, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Baug1_16;

    c.make(s.triad(3, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Caug2_16;
    c.make(s.triad(3, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Csaug2_16;
    c.make(s.triad(3, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Daug2_16;
    c.make(s.triad(3, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Dsaug2_16;
    c.make(s.triad(3, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Efaug2_16;
    c.make(s.triad(3, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Eaug2_16;
    c.make(s.triad(3, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> _Faug2_16;
    c.make(s.triad(3, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Fsaug2_16;
    c.make(s.triad(3, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gfaug2_16;
    c.make(s.triad(3, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gaug2_16;
    c.make(s.triad(3, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gsaug2_16;
    c.make(s.triad(3, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Afaug2_16;
    c.make(s.triad(3, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Aaug2_16;
    c.make(s.triad(3, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Asaug2_16;
    c.make(s.triad(3, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Bfaug2_16;
    c.make(s.triad(3, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Baug2_16;

    c.make(s.triad(4, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Caug3_16;
    c.make(s.triad(4, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Csaug3_16;
    c.make(s.triad(4, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Daug3_16;
    c.make(s.triad(4, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Dsaug3_16;
    c.make(s.triad(4, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Efaug3_16;
    c.make(s.triad(4, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Eaug3_16;
    c.make(s.triad(4, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> _Faug3_16;
    c.make(s.triad(4, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Fsaug3_16;
    c.make(s.triad(4, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gfaug3_16;
    c.make(s.triad(4, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gaug3_16;
    c.make(s.triad(4, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gsaug3_16;
    c.make(s.triad(4, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Afaug3_16;
    c.make(s.triad(4, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Aaug3_16;
    c.make(s.triad(4, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Asaug3_16;
    c.make(s.triad(4, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Bfaug3_16;
    c.make(s.triad(4, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Baug3_16;

    c.make(s.triad(5, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Caug4_16;
    c.make(s.triad(5, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Csaug4_16;
    c.make(s.triad(5, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Daug4_16;
    c.make(s.triad(5, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Dsaug4_16;
    c.make(s.triad(5, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Efaug4_16;
    c.make(s.triad(5, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Eaug4_16;
    c.make(s.triad(5, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> _Faug4_16;
    c.make(s.triad(5, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Fsaug4_16;
    c.make(s.triad(5, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gfaug4_16;
    c.make(s.triad(5, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gaug4_16;
    c.make(s.triad(5, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gsaug4_16;
    c.make(s.triad(5, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Afaug4_16;
    c.make(s.triad(5, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Aaug4_16;
    c.make(s.triad(5, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Asaug4_16;
    c.make(s.triad(5, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Bfaug4_16;
    c.make(s.triad(5, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Baug4_16;

    c.make(s.triad(6, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Caug5_16;
    c.make(s.triad(6, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Csaug5_16;
    c.make(s.triad(6, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Daug5_16;
    c.make(s.triad(6, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Dsaug5_16;
    c.make(s.triad(6, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Efaug5_16;
    c.make(s.triad(6, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Eaug5_16;
    c.make(s.triad(6, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> _Faug5_16;
    c.make(s.triad(6, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Fsaug5_16;
    c.make(s.triad(6, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gfaug5_16;
    c.make(s.triad(6, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gaug5_16;
    c.make(s.triad(6, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gsaug5_16;
    c.make(s.triad(6, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Afaug5_16;
    c.make(s.triad(6, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Aaug5_16;
    c.make(s.triad(6, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Asaug5_16;
    c.make(s.triad(6, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Bfaug5_16;
    c.make(s.triad(6, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Baug5_16;

    c.make(s.triad(7, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Caug6_16;
    c.make(s.triad(7, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Csaug6_16;
    c.make(s.triad(7, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Daug6_16;
    c.make(s.triad(7, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Dsaug6_16;
    c.make(s.triad(7, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Efaug6_16;
    c.make(s.triad(7, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Eaug6_16;
    c.make(s.triad(7, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> _Faug6_16;
    c.make(s.triad(7, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Fsaug6_16;
    c.make(s.triad(7, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gfaug6_16;
    c.make(s.triad(7, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gaug6_16;
    c.make(s.triad(7, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gsaug6_16;
    c.make(s.triad(7, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Afaug6_16;
    c.make(s.triad(7, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Aaug6_16;
    c.make(s.triad(7, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Asaug6_16;
    c.make(s.triad(7, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Bfaug6_16;
    c.make(s.triad(7, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Baug6_16;

    c.make(s.triad(8, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Caug7_16;
    c.make(s.triad(8, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Csaug7_16;
    c.make(s.triad(8, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Daug7_16;
    c.make(s.triad(8, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Dsaug7_16;
    c.make(s.triad(8, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Efaug7_16;
    c.make(s.triad(8, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Eaug7_16;
    c.make(s.triad(8, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> _Faug7_16;
    c.make(s.triad(8, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Fsaug7_16;
    c.make(s.triad(8, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gfaug7_16;
    c.make(s.triad(8, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gaug7_16;
    c.make(s.triad(8, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gsaug7_16;
    c.make(s.triad(8, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Afaug7_16;
    c.make(s.triad(8, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Aaug7_16;
    c.make(s.triad(8, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Asaug7_16;
    c.make(s.triad(8, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Bfaug7_16;
    c.make(s.triad(8, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Baug7_16;

    c.make(s.triad(9, n.C, aug), DEFAULT_GAIN, k.SXTNTH) @=> Caug8_16;
    c.make(s.triad(9, n.Cs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Csaug8_16;
    c.make(s.triad(9, n.D, aug), DEFAULT_GAIN, k.SXTNTH) @=> Daug8_16;
    c.make(s.triad(9, n.Ds, aug), DEFAULT_GAIN, k.SXTNTH) @=> Dsaug8_16;
    c.make(s.triad(9, n.Ef, aug), DEFAULT_GAIN, k.SXTNTH) @=> Efaug8_16;
    c.make(s.triad(9, n.E, aug), DEFAULT_GAIN, k.SXTNTH) @=> Eaug8_16;
    c.make(s.triad(9, n.F, aug), DEFAULT_GAIN, k.SXTNTH) @=> _Faug8_16;
    c.make(s.triad(9, n.Fs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Fsaug8_16;
    c.make(s.triad(9, n.Gf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gfaug8_16;
    c.make(s.triad(9, n.G, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gaug8_16;
    c.make(s.triad(9, n.Gs, aug), DEFAULT_GAIN, k.SXTNTH) @=> Gsaug8_16;
    c.make(s.triad(9, n.Af, aug), DEFAULT_GAIN, k.SXTNTH) @=> Afaug8_16;
    c.make(s.triad(9, n.A, aug), DEFAULT_GAIN, k.SXTNTH) @=> Aaug8_16;
    c.make(s.triad(9, n.As, aug), DEFAULT_GAIN, k.SXTNTH) @=> Asaug8_16;
    c.make(s.triad(9, n.Bf, aug), DEFAULT_GAIN, k.SXTNTH) @=> Bfaug8_16;
    c.make(s.triad(9, n.B, aug), DEFAULT_GAIN, k.SXTNTH) @=> Baug8_16;

    // Diminished
    c.make(s.triad(0, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Cdim_16;
    c.make(s.triad(0, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Csdim_16;
    c.make(s.triad(0, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Ddim_16;
    c.make(s.triad(0, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Dsdim_16;
    c.make(s.triad(0, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Efdim_16;
    c.make(s.triad(0, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Edim_16;
    c.make(s.triad(0, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> _Fdim_16;
    c.make(s.triad(0, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Fsdim_16;
    c.make(s.triad(0, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gfdim_16;
    c.make(s.triad(0, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gdim_16;
    c.make(s.triad(0, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gsdim_16;
    c.make(s.triad(0, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Afdim_16;
    c.make(s.triad(0, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Adim_16;
    c.make(s.triad(0, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Asdim_16;
    c.make(s.triad(0, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bfdim_16;
    c.make(s.triad(0, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bdim_16;

    c.make(s.triad(1, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Cdim0_16;
    c.make(s.triad(1, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Csdim0_16;
    c.make(s.triad(1, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Ddim0_16;
    c.make(s.triad(1, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Dsdim0_16;
    c.make(s.triad(1, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Efdim0_16;
    c.make(s.triad(1, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Edim0_16;
    c.make(s.triad(1, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> _Fdim0_16;
    c.make(s.triad(1, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Fsdim0_16;
    c.make(s.triad(1, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gfdim0_16;
    c.make(s.triad(1, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gdim0_16;
    c.make(s.triad(1, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gsdim0_16;
    c.make(s.triad(1, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Afdim0_16;
    c.make(s.triad(1, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Adim0_16;
    c.make(s.triad(1, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Asdim0_16;
    c.make(s.triad(1, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bfdim0_16;
    c.make(s.triad(1, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bdim0_16;

    c.make(s.triad(2, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Cdim1_16;
    c.make(s.triad(2, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Csdim1_16;
    c.make(s.triad(2, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Ddim1_16;
    c.make(s.triad(2, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Dsdim1_16;
    c.make(s.triad(2, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Efdim1_16;
    c.make(s.triad(2, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Edim1_16;
    c.make(s.triad(2, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> _Fdim1_16;
    c.make(s.triad(2, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Fsdim1_16;
    c.make(s.triad(2, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gfdim1_16;
    c.make(s.triad(2, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gdim1_16;
    c.make(s.triad(2, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gsdim1_16;
    c.make(s.triad(2, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Afdim1_16;
    c.make(s.triad(2, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Adim1_16;
    c.make(s.triad(2, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Asdim1_16;
    c.make(s.triad(2, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bfdim1_16;
    c.make(s.triad(2, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bdim1_16;

    c.make(s.triad(3, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Cdim2_16;
    c.make(s.triad(3, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Csdim2_16;
    c.make(s.triad(3, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Ddim2_16;
    c.make(s.triad(3, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Dsdim2_16;
    c.make(s.triad(3, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Efdim2_16;
    c.make(s.triad(3, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Edim2_16;
    c.make(s.triad(3, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> _Fdim2_16;
    c.make(s.triad(3, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Fsdim2_16;
    c.make(s.triad(3, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gfdim2_16;
    c.make(s.triad(3, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gdim2_16;
    c.make(s.triad(3, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gsdim2_16;
    c.make(s.triad(3, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Afdim2_16;
    c.make(s.triad(3, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Adim2_16;
    c.make(s.triad(3, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Asdim2_16;
    c.make(s.triad(3, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bfdim2_16;
    c.make(s.triad(3, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bdim2_16;

    c.make(s.triad(4, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Cdim3_16;
    c.make(s.triad(4, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Csdim3_16;
    c.make(s.triad(4, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Ddim3_16;
    c.make(s.triad(4, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Dsdim3_16;
    c.make(s.triad(4, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Efdim3_16;
    c.make(s.triad(4, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Edim3_16;
    c.make(s.triad(4, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> _Fdim3_16;
    c.make(s.triad(4, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Fsdim3_16;
    c.make(s.triad(4, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gfdim3_16;
    c.make(s.triad(4, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gdim3_16;
    c.make(s.triad(4, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gsdim3_16;
    c.make(s.triad(4, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Afdim3_16;
    c.make(s.triad(4, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Adim3_16;
    c.make(s.triad(4, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Asdim3_16;
    c.make(s.triad(4, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bfdim3_16;
    c.make(s.triad(4, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bdim3_16;

    c.make(s.triad(5, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Cdim4_16;
    c.make(s.triad(5, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Csdim4_16;
    c.make(s.triad(5, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Ddim4_16;
    c.make(s.triad(5, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Dsdim4_16;
    c.make(s.triad(5, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Efdim4_16;
    c.make(s.triad(5, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Edim4_16;
    c.make(s.triad(5, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> _Fdim4_16;
    c.make(s.triad(5, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Fsdim4_16;
    c.make(s.triad(5, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gfdim4_16;
    c.make(s.triad(5, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gdim4_16;
    c.make(s.triad(5, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gsdim4_16;
    c.make(s.triad(5, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Afdim4_16;
    c.make(s.triad(5, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Adim4_16;
    c.make(s.triad(5, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Asdim4_16;
    c.make(s.triad(5, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bfdim4_16;
    c.make(s.triad(5, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bdim4_16;

    c.make(s.triad(6, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Cdim5_16;
    c.make(s.triad(6, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Csdim5_16;
    c.make(s.triad(6, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Ddim5_16;
    c.make(s.triad(6, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Dsdim5_16;
    c.make(s.triad(6, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Efdim5_16;
    c.make(s.triad(6, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Edim5_16;
    c.make(s.triad(6, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> _Fdim5_16;
    c.make(s.triad(6, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Fsdim5_16;
    c.make(s.triad(6, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gfdim5_16;
    c.make(s.triad(6, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gdim5_16;
    c.make(s.triad(6, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gsdim5_16;
    c.make(s.triad(6, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Afdim5_16;
    c.make(s.triad(6, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Adim5_16;
    c.make(s.triad(6, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Asdim5_16;
    c.make(s.triad(6, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bfdim5_16;
    c.make(s.triad(6, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bdim5_16;

    c.make(s.triad(7, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Cdim6_16;
    c.make(s.triad(7, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Csdim6_16;
    c.make(s.triad(7, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Ddim6_16;
    c.make(s.triad(7, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Dsdim6_16;
    c.make(s.triad(7, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Efdim6_16;
    c.make(s.triad(7, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Edim6_16;
    c.make(s.triad(7, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> _Fdim6_16;
    c.make(s.triad(7, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Fsdim6_16;
    c.make(s.triad(7, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gfdim6_16;
    c.make(s.triad(7, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gdim6_16;
    c.make(s.triad(7, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gsdim6_16;
    c.make(s.triad(7, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Afdim6_16;
    c.make(s.triad(7, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Adim6_16;
    c.make(s.triad(7, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Asdim6_16;
    c.make(s.triad(7, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bfdim6_16;
    c.make(s.triad(7, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bdim6_16;

    c.make(s.triad(8, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Cdim7_16;
    c.make(s.triad(8, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Csdim7_16;
    c.make(s.triad(8, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Ddim7_16;
    c.make(s.triad(8, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Dsdim7_16;
    c.make(s.triad(8, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Efdim7_16;
    c.make(s.triad(8, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Edim7_16;
    c.make(s.triad(8, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> _Fdim7_16;
    c.make(s.triad(8, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Fsdim7_16;
    c.make(s.triad(8, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gfdim7_16;
    c.make(s.triad(8, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gdim7_16;
    c.make(s.triad(8, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gsdim7_16;
    c.make(s.triad(8, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Afdim7_16;
    c.make(s.triad(8, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Adim7_16;
    c.make(s.triad(8, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Asdim7_16;
    c.make(s.triad(8, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bfdim7_16;
    c.make(s.triad(8, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bdim7_16;

    c.make(s.triad(9, n.C, dim), DEFAULT_GAIN, k.SXTNTH) @=> Cdim8_16;
    c.make(s.triad(9, n.Cs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Csdim8_16;
    c.make(s.triad(9, n.D, dim), DEFAULT_GAIN, k.SXTNTH) @=> Ddim8_16;
    c.make(s.triad(9, n.Ds, dim), DEFAULT_GAIN, k.SXTNTH) @=> Dsdim8_16;
    c.make(s.triad(9, n.Ef, dim), DEFAULT_GAIN, k.SXTNTH) @=> Efdim8_16;
    c.make(s.triad(9, n.E, dim), DEFAULT_GAIN, k.SXTNTH) @=> Edim8_16;
    c.make(s.triad(9, n.F, dim), DEFAULT_GAIN, k.SXTNTH) @=> _Fdim8_16;
    c.make(s.triad(9, n.Fs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Fsdim8_16;
    c.make(s.triad(9, n.Gf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gfdim8_16;
    c.make(s.triad(9, n.G, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gdim8_16;
    c.make(s.triad(9, n.Gs, dim), DEFAULT_GAIN, k.SXTNTH) @=> Gsdim8_16;
    c.make(s.triad(9, n.Af, dim), DEFAULT_GAIN, k.SXTNTH) @=> Afdim8_16;
    c.make(s.triad(9, n.A, dim), DEFAULT_GAIN, k.SXTNTH) @=> Adim8_16;
    c.make(s.triad(9, n.As, dim), DEFAULT_GAIN, k.SXTNTH) @=> Asdim8_16;
    c.make(s.triad(9, n.Bf, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bfdim8_16;
    c.make(s.triad(9, n.B, dim), DEFAULT_GAIN, k.SXTNTH) @=> Bdim8_16;

    //
    // THRTYSCND
    //

    // Major
    // 0-based offsets
    c.make(s.triad(0, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> CM_32;
    c.make(s.triad(0, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> CsM_32;
    c.make(s.triad(0, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> DM_32;
    c.make(s.triad(0, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> DsM_32;
    c.make(s.triad(0, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> EfM_32;
    c.make(s.triad(0, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> EM_32;
    c.make(s.triad(0, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> FM_32;
    c.make(s.triad(0, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> FsM_32;
    c.make(s.triad(0, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> GfM_32;
    c.make(s.triad(0, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> GM_32;
    c.make(s.triad(0, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> GsM_32;
    c.make(s.triad(0, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> AfM_32;
    c.make(s.triad(0, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> AM_32;
    c.make(s.triad(0, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> AsM_32;
    c.make(s.triad(0, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> BfM_32;
    c.make(s.triad(0, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> BM_32;

    // constants predefined per octave
    c.make(s.triad(1, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> CM0_32;
    c.make(s.triad(1, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> CsM0_32;
    c.make(s.triad(1, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> DM0_32;
    c.make(s.triad(1, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> DsM0_32;
    c.make(s.triad(1, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> EfM0_32;
    c.make(s.triad(1, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> EM0_32;
    c.make(s.triad(1, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> FM0_32;
    c.make(s.triad(1, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> FsM0_32;
    c.make(s.triad(1, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> GfM0_32;
    c.make(s.triad(1, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> GM0_32;
    c.make(s.triad(1, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> GsM0_32;
    c.make(s.triad(1, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> AfM0_32;
    c.make(s.triad(1, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> AM0_32;
    c.make(s.triad(1, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> AsM0_32;
    c.make(s.triad(1, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> BfM0_32;
    c.make(s.triad(1, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> BM0_32;

    c.make(s.triad(2, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> CM1_32;
    c.make(s.triad(2, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> CsM1_32;
    c.make(s.triad(2, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> DM1_32;
    c.make(s.triad(2, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> DsM1_32;
    c.make(s.triad(2, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> EfM1_32;
    c.make(s.triad(2, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> EM1_32;
    c.make(s.triad(2, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> FM1_32;
    c.make(s.triad(2, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> FsM1_32;
    c.make(s.triad(2, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> GfM1_32;
    c.make(s.triad(2, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> GM1_32;
    c.make(s.triad(2, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> GsM1_32;
    c.make(s.triad(2, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> AfM1_32;
    c.make(s.triad(2, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> AM1_32;
    c.make(s.triad(2, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> AsM1_32;
    c.make(s.triad(2, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> BfM1_32;
    c.make(s.triad(2, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> BM1_32;

    c.make(s.triad(3, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> CM2_32;
    c.make(s.triad(3, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> CsM2_32;
    c.make(s.triad(3, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> DM2_32;
    c.make(s.triad(3, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> DsM2_32;
    c.make(s.triad(3, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> EfM2_32;
    c.make(s.triad(3, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> EM2_32;
    c.make(s.triad(3, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> FM2_32;
    c.make(s.triad(3, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> FsM2_32;
    c.make(s.triad(3, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> GfM2_32;
    c.make(s.triad(3, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> GM2_32;
    c.make(s.triad(3, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> GsM2_32;
    c.make(s.triad(3, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> AfM2_32;
    c.make(s.triad(3, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> AM2_32;
    c.make(s.triad(3, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> AsM2_32;
    c.make(s.triad(3, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> BfM2_32;
    c.make(s.triad(3, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> BM2_32;

    c.make(s.triad(4, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> CM3_32;
    c.make(s.triad(4, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> CsM3_32;
    c.make(s.triad(4, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> DM3_32;
    c.make(s.triad(4, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> DsM3_32;
    c.make(s.triad(4, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> EfM3_32;
    c.make(s.triad(4, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> EM3_32;
    c.make(s.triad(4, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> FM3_32;
    c.make(s.triad(4, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> FsM3_32;
    c.make(s.triad(4, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> GfM3_32;
    c.make(s.triad(4, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> GM3_32;
    c.make(s.triad(4, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> GsM3_32;
    c.make(s.triad(4, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> AfM3_32;
    c.make(s.triad(4, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> AM3_32;
    c.make(s.triad(4, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> AsM3_32;
    c.make(s.triad(4, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> BfM3_32;
    c.make(s.triad(4, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> BM3_32;

    c.make(s.triad(5, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> CM4_32;
    c.make(s.triad(5, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> CsM4_32;
    c.make(s.triad(5, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> DM4_32;
    c.make(s.triad(5, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> DsM4_32;
    c.make(s.triad(5, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> EfM4_32;
    c.make(s.triad(5, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> EM4_32;
    c.make(s.triad(5, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> FM4_32;
    c.make(s.triad(5, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> FsM4_32;
    c.make(s.triad(5, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> GfM4_32;
    c.make(s.triad(5, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> GM4_32;
    c.make(s.triad(5, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> GsM4_32;
    c.make(s.triad(5, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> AfM4_32;
    c.make(s.triad(5, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> AM4_32;
    c.make(s.triad(5, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> AsM4_32;
    c.make(s.triad(5, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> BfM4_32;
    c.make(s.triad(5, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> BM4_32;

    c.make(s.triad(6, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> CM5_32;
    c.make(s.triad(6, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> CsM5_32;
    c.make(s.triad(6, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> DM5_32;
    c.make(s.triad(6, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> DsM5_32;
    c.make(s.triad(6, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> EfM5_32;
    c.make(s.triad(6, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> EM5_32;
    c.make(s.triad(6, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> FM5_32;
    c.make(s.triad(6, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> FsM5_32;
    c.make(s.triad(6, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> GfM5_32;
    c.make(s.triad(6, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> GM5_32;
    c.make(s.triad(6, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> GsM5_32;
    c.make(s.triad(6, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> AfM5_32;
    c.make(s.triad(6, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> AM5_32;
    c.make(s.triad(6, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> AsM5_32;
    c.make(s.triad(6, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> BfM5_32;
    c.make(s.triad(6, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> BM5_32;

    c.make(s.triad(7, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> CM6_32;
    c.make(s.triad(7, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> CsM6_32;
    c.make(s.triad(7, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> DM6_32;
    c.make(s.triad(7, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> DsM6_32;
    c.make(s.triad(7, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> EfM6_32;
    c.make(s.triad(7, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> EM6_32;
    c.make(s.triad(7, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> FM6_32;
    c.make(s.triad(7, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> FsM6_32;
    c.make(s.triad(7, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> GfM6_32;
    c.make(s.triad(7, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> GM6_32;
    c.make(s.triad(7, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> GsM6_32;
    c.make(s.triad(7, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> AfM6_32;
    c.make(s.triad(7, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> AM6_32;
    c.make(s.triad(7, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> AsM6_32;
    c.make(s.triad(7, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> BfM6_32;
    c.make(s.triad(7, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> BM6_32;

    c.make(s.triad(8, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> CM7_32;
    c.make(s.triad(8, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> CsM7_32;
    c.make(s.triad(8, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> DM7_32;
    c.make(s.triad(8, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> DsM7_32;
    c.make(s.triad(8, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> EfM7_32;
    c.make(s.triad(8, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> EM7_32;
    c.make(s.triad(8, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> FM7_32;
    c.make(s.triad(8, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> FsM7_32;
    c.make(s.triad(8, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> GfM7_32;
    c.make(s.triad(8, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> GM7_32;
    c.make(s.triad(8, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> GsM7_32;
    c.make(s.triad(8, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> AfM7_32;
    c.make(s.triad(8, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> AM7_32;
    c.make(s.triad(8, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> AsM7_32;
    c.make(s.triad(8, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> BfM7_32;
    c.make(s.triad(8, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> BM7_32;

    c.make(s.triad(9, n.C, M), DEFAULT_GAIN, k.THRTYSCND) @=> CM8_32;
    c.make(s.triad(9, n.Cs, M), DEFAULT_GAIN, k.THRTYSCND) @=> CsM8_32;
    c.make(s.triad(9, n.D, M), DEFAULT_GAIN, k.THRTYSCND) @=> DM8_32;
    c.make(s.triad(9, n.Ds, M), DEFAULT_GAIN, k.THRTYSCND) @=> DsM8_32;
    c.make(s.triad(9, n.Ef, M), DEFAULT_GAIN, k.THRTYSCND) @=> EfM8_32;
    c.make(s.triad(9, n.E, M), DEFAULT_GAIN, k.THRTYSCND) @=> EM8_32;
    c.make(s.triad(9, n.F, M), DEFAULT_GAIN, k.THRTYSCND) @=> FM8_32;
    c.make(s.triad(9, n.Fs, M), DEFAULT_GAIN, k.THRTYSCND) @=> FsM8_32;
    c.make(s.triad(9, n.Gf, M), DEFAULT_GAIN, k.THRTYSCND) @=> GfM8_32;
    c.make(s.triad(9, n.G, M), DEFAULT_GAIN, k.THRTYSCND) @=> GM8_32;
    c.make(s.triad(9, n.Gs, M), DEFAULT_GAIN, k.THRTYSCND) @=> GsM8_32;
    c.make(s.triad(9, n.Af, M), DEFAULT_GAIN, k.THRTYSCND) @=> AfM8_32;
    c.make(s.triad(9, n.A, M), DEFAULT_GAIN, k.THRTYSCND) @=> AM8_32;
    c.make(s.triad(9, n.As, M), DEFAULT_GAIN, k.THRTYSCND) @=> AsM8_32;
    c.make(s.triad(9, n.Bf, M), DEFAULT_GAIN, k.THRTYSCND) @=> BfM8_32;
    c.make(s.triad(9, n.B, M), DEFAULT_GAIN, k.THRTYSCND) @=> BM8_32;

    // Minor
    c.make(s.triad(0, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Cm_32;
    c.make(s.triad(0, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Csm_32;
    c.make(s.triad(0, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dm_32;
    c.make(s.triad(0, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dsm_32;
    c.make(s.triad(0, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Efm_32;
    c.make(s.triad(0, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Em_32;
    c.make(s.triad(0, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> _Fm_32;
    c.make(s.triad(0, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Fsm_32;
    c.make(s.triad(0, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gfm_32;
    c.make(s.triad(0, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gm_32;
    c.make(s.triad(0, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gsm_32;
    c.make(s.triad(0, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Afm_32;
    c.make(s.triad(0, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Am_32;
    c.make(s.triad(0, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Asm_32;
    c.make(s.triad(0, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bfm_32;
    c.make(s.triad(0, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bm_32;

    c.make(s.triad(1, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Cm0_32;
    c.make(s.triad(1, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Csm0_32;
    c.make(s.triad(1, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dm0_32;
    c.make(s.triad(1, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dsm0_32;
    c.make(s.triad(1, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Efm0_32;
    c.make(s.triad(1, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Em0_32;
    c.make(s.triad(1, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> _Fm0_32;
    c.make(s.triad(1, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Fsm0_32;
    c.make(s.triad(1, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gfm0_32;
    c.make(s.triad(1, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gm0_32;
    c.make(s.triad(1, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gsm0_32;
    c.make(s.triad(1, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Afm0_32;
    c.make(s.triad(1, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Am0_32;
    c.make(s.triad(1, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Asm0_32;
    c.make(s.triad(1, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bfm0_32;
    c.make(s.triad(1, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bm0_32;

    c.make(s.triad(2, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Cm1_32;
    c.make(s.triad(2, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Csm1_32;
    c.make(s.triad(2, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dm1_32;
    c.make(s.triad(2, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dsm1_32;
    c.make(s.triad(2, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Efm1_32;
    c.make(s.triad(2, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Em1_32;
    c.make(s.triad(2, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> _Fm1_32;
    c.make(s.triad(2, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Fsm1_32;
    c.make(s.triad(2, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gfm1_32;
    c.make(s.triad(2, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gm1_32;
    c.make(s.triad(2, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gsm1_32;
    c.make(s.triad(2, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Afm1_32;
    c.make(s.triad(2, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Am1_32;
    c.make(s.triad(2, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Asm1_32;
    c.make(s.triad(2, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bfm1_32;
    c.make(s.triad(2, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bm1_32;

    c.make(s.triad(3, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Cm2_32;
    c.make(s.triad(3, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Csm2_32;
    c.make(s.triad(3, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dm2_32;
    c.make(s.triad(3, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dsm2_32;
    c.make(s.triad(3, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Efm2_32;
    c.make(s.triad(3, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Em2_32;
    c.make(s.triad(3, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> _Fm2_32;
    c.make(s.triad(3, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Fsm2_32;
    c.make(s.triad(3, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gfm2_32;
    c.make(s.triad(3, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gm2_32;
    c.make(s.triad(3, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gsm2_32;
    c.make(s.triad(3, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Afm2_32;
    c.make(s.triad(3, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Am2_32;
    c.make(s.triad(3, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Asm2_32;
    c.make(s.triad(3, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bfm2_32;
    c.make(s.triad(3, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bm2_32;

    c.make(s.triad(4, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Cm3_32;
    c.make(s.triad(4, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Csm3_32;
    c.make(s.triad(4, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dm3_32;
    c.make(s.triad(4, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dsm3_32;
    c.make(s.triad(4, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Efm3_32;
    c.make(s.triad(4, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Em3_32;
    c.make(s.triad(4, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> _Fm3_32;
    c.make(s.triad(4, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Fsm3_32;
    c.make(s.triad(4, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gfm3_32;
    c.make(s.triad(4, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gm3_32;
    c.make(s.triad(4, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gsm3_32;
    c.make(s.triad(4, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Afm3_32;
    c.make(s.triad(4, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Am3_32;
    c.make(s.triad(4, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Asm3_32;
    c.make(s.triad(4, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bfm3_32;
    c.make(s.triad(4, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bm3_32;

    c.make(s.triad(5, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Cm4_32;
    c.make(s.triad(5, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Csm4_32;
    c.make(s.triad(5, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dm4_32;
    c.make(s.triad(5, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dsm4_32;
    c.make(s.triad(5, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Efm4_32;
    c.make(s.triad(5, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Em4_32;
    c.make(s.triad(5, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> _Fm4_32;
    c.make(s.triad(5, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Fsm4_32;
    c.make(s.triad(5, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gfm4_32;
    c.make(s.triad(5, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gm4_32;
    c.make(s.triad(5, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gsm4_32;
    c.make(s.triad(5, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Afm4_32;
    c.make(s.triad(5, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Am4_32;
    c.make(s.triad(5, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Asm4_32;
    c.make(s.triad(5, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bfm4_32;
    c.make(s.triad(5, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bm4_32;

    c.make(s.triad(6, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Cm5_32;
    c.make(s.triad(6, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Csm5_32;
    c.make(s.triad(6, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dm5_32;
    c.make(s.triad(6, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dsm5_32;
    c.make(s.triad(6, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Efm5_32;
    c.make(s.triad(6, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Em5_32;
    c.make(s.triad(6, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> _Fm5_32;
    c.make(s.triad(6, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Fsm5_32;
    c.make(s.triad(6, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gfm5_32;
    c.make(s.triad(6, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gm5_32;
    c.make(s.triad(6, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gsm5_32;
    c.make(s.triad(6, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Afm5_32;
    c.make(s.triad(6, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Am5_32;
    c.make(s.triad(6, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Asm5_32;
    c.make(s.triad(6, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bfm5_32;
    c.make(s.triad(6, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bm5_32;

    c.make(s.triad(7, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Cm6_32;
    c.make(s.triad(7, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Csm6_32;
    c.make(s.triad(7, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dm6_32;
    c.make(s.triad(7, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dsm6_32;
    c.make(s.triad(7, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Efm6_32;
    c.make(s.triad(7, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Em6_32;
    c.make(s.triad(7, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> _Fm6_32;
    c.make(s.triad(7, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Fsm6_32;
    c.make(s.triad(7, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gfm6_32;
    c.make(s.triad(7, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gm6_32;
    c.make(s.triad(7, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gsm6_32;
    c.make(s.triad(7, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Afm6_32;
    c.make(s.triad(7, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Am6_32;
    c.make(s.triad(7, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Asm6_32;
    c.make(s.triad(7, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bfm6_32;
    c.make(s.triad(7, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bm6_32;

    c.make(s.triad(8, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Cm7_32;
    c.make(s.triad(8, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Csm7_32;
    c.make(s.triad(8, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dm7_32;
    c.make(s.triad(8, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dsm7_32;
    c.make(s.triad(8, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Efm7_32;
    c.make(s.triad(8, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Em7_32;
    c.make(s.triad(8, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> _Fm7_32;
    c.make(s.triad(8, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Fsm7_32;
    c.make(s.triad(8, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gfm7_32;
    c.make(s.triad(8, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gm7_32;
    c.make(s.triad(8, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gsm7_32;
    c.make(s.triad(8, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Afm7_32;
    c.make(s.triad(8, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Am7_32;
    c.make(s.triad(8, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Asm7_32;
    c.make(s.triad(8, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bfm7_32;
    c.make(s.triad(8, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bm7_32;

    c.make(s.triad(9, n.C, m), DEFAULT_GAIN, k.THRTYSCND) @=> Cm8_32;
    c.make(s.triad(9, n.Cs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Csm8_32;
    c.make(s.triad(9, n.D, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dm8_32;
    c.make(s.triad(9, n.Ds, m), DEFAULT_GAIN, k.THRTYSCND) @=> Dsm8_32;
    c.make(s.triad(9, n.Ef, m), DEFAULT_GAIN, k.THRTYSCND) @=> Efm8_32;
    c.make(s.triad(9, n.E, m), DEFAULT_GAIN, k.THRTYSCND) @=> Em8_32;
    c.make(s.triad(9, n.F, m), DEFAULT_GAIN, k.THRTYSCND) @=> _Fm8_32;
    c.make(s.triad(9, n.Fs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Fsm8_32;
    c.make(s.triad(9, n.Gf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gfm8_32;
    c.make(s.triad(9, n.G, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gm8_32;
    c.make(s.triad(9, n.Gs, m), DEFAULT_GAIN, k.THRTYSCND) @=> Gsm8_32;
    c.make(s.triad(9, n.Af, m), DEFAULT_GAIN, k.THRTYSCND) @=> Afm8_32;
    c.make(s.triad(9, n.A, m), DEFAULT_GAIN, k.THRTYSCND) @=> Am8_32;
    c.make(s.triad(9, n.As, m), DEFAULT_GAIN, k.THRTYSCND) @=> Asm8_32;
    c.make(s.triad(9, n.Bf, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bfm8_32;
    c.make(s.triad(9, n.B, m), DEFAULT_GAIN, k.THRTYSCND) @=> Bm8_32;

    // Augmented
    c.make(s.triad(0, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Caug_32;
    c.make(s.triad(0, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Csaug_32;
    c.make(s.triad(0, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Daug_32;
    c.make(s.triad(0, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Dsaug_32;
    c.make(s.triad(0, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Efaug_32;
    c.make(s.triad(0, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Eaug_32;
    c.make(s.triad(0, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> _Faug_32;
    c.make(s.triad(0, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Fsaug_32;
    c.make(s.triad(0, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gfaug_32;
    c.make(s.triad(0, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gaug_32;
    c.make(s.triad(0, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gsaug_32;
    c.make(s.triad(0, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Afaug_32;
    c.make(s.triad(0, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Aaug_32;
    c.make(s.triad(0, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Asaug_32;
    c.make(s.triad(0, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Bfaug_32;
    c.make(s.triad(0, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Baug_32;

    c.make(s.triad(1, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Caug0_32;
    c.make(s.triad(1, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Csaug0_32;
    c.make(s.triad(1, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Daug0_32;
    c.make(s.triad(1, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Dsaug0_32;
    c.make(s.triad(1, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Efaug0_32;
    c.make(s.triad(1, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Eaug0_32;
    c.make(s.triad(1, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> _Faug0_32;
    c.make(s.triad(1, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Fsaug0_32;
    c.make(s.triad(1, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gfaug0_32;
    c.make(s.triad(1, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gaug0_32;
    c.make(s.triad(1, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gsaug0_32;
    c.make(s.triad(1, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Afaug0_32;
    c.make(s.triad(1, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Aaug0_32;
    c.make(s.triad(1, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Asaug0_32;
    c.make(s.triad(1, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Bfaug0_32;
    c.make(s.triad(1, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Baug0_32;

    c.make(s.triad(2, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Caug1_32;
    c.make(s.triad(2, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Csaug1_32;
    c.make(s.triad(2, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Daug1_32;
    c.make(s.triad(2, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Dsaug1_32;
    c.make(s.triad(2, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Efaug1_32;
    c.make(s.triad(2, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Eaug1_32;
    c.make(s.triad(2, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> _Faug1_32;
    c.make(s.triad(2, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Fsaug1_32;
    c.make(s.triad(2, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gfaug1_32;
    c.make(s.triad(2, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gaug1_32;
    c.make(s.triad(2, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gsaug1_32;
    c.make(s.triad(2, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Afaug1_32;
    c.make(s.triad(2, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Aaug1_32;
    c.make(s.triad(2, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Asaug1_32;
    c.make(s.triad(2, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Bfaug1_32;
    c.make(s.triad(2, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Baug1_32;

    c.make(s.triad(3, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Caug2_32;
    c.make(s.triad(3, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Csaug2_32;
    c.make(s.triad(3, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Daug2_32;
    c.make(s.triad(3, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Dsaug2_32;
    c.make(s.triad(3, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Efaug2_32;
    c.make(s.triad(3, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Eaug2_32;
    c.make(s.triad(3, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> _Faug2_32;
    c.make(s.triad(3, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Fsaug2_32;
    c.make(s.triad(3, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gfaug2_32;
    c.make(s.triad(3, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gaug2_32;
    c.make(s.triad(3, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gsaug2_32;
    c.make(s.triad(3, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Afaug2_32;
    c.make(s.triad(3, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Aaug2_32;
    c.make(s.triad(3, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Asaug2_32;
    c.make(s.triad(3, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Bfaug2_32;
    c.make(s.triad(3, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Baug2_32;

    c.make(s.triad(4, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Caug3_32;
    c.make(s.triad(4, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Csaug3_32;
    c.make(s.triad(4, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Daug3_32;
    c.make(s.triad(4, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Dsaug3_32;
    c.make(s.triad(4, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Efaug3_32;
    c.make(s.triad(4, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Eaug3_32;
    c.make(s.triad(4, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> _Faug3_32;
    c.make(s.triad(4, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Fsaug3_32;
    c.make(s.triad(4, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gfaug3_32;
    c.make(s.triad(4, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gaug3_32;
    c.make(s.triad(4, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gsaug3_32;
    c.make(s.triad(4, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Afaug3_32;
    c.make(s.triad(4, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Aaug3_32;
    c.make(s.triad(4, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Asaug3_32;
    c.make(s.triad(4, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Bfaug3_32;
    c.make(s.triad(4, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Baug3_32;

    c.make(s.triad(5, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Caug4_32;
    c.make(s.triad(5, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Csaug4_32;
    c.make(s.triad(5, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Daug4_32;
    c.make(s.triad(5, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Dsaug4_32;
    c.make(s.triad(5, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Efaug4_32;
    c.make(s.triad(5, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Eaug4_32;
    c.make(s.triad(5, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> _Faug4_32;
    c.make(s.triad(5, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Fsaug4_32;
    c.make(s.triad(5, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gfaug4_32;
    c.make(s.triad(5, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gaug4_32;
    c.make(s.triad(5, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gsaug4_32;
    c.make(s.triad(5, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Afaug4_32;
    c.make(s.triad(5, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Aaug4_32;
    c.make(s.triad(5, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Asaug4_32;
    c.make(s.triad(5, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Bfaug4_32;
    c.make(s.triad(5, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Baug4_32;

    c.make(s.triad(6, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Caug5_32;
    c.make(s.triad(6, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Csaug5_32;
    c.make(s.triad(6, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Daug5_32;
    c.make(s.triad(6, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Dsaug5_32;
    c.make(s.triad(6, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Efaug5_32;
    c.make(s.triad(6, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Eaug5_32;
    c.make(s.triad(6, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> _Faug5_32;
    c.make(s.triad(6, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Fsaug5_32;
    c.make(s.triad(6, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gfaug5_32;
    c.make(s.triad(6, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gaug5_32;
    c.make(s.triad(6, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gsaug5_32;
    c.make(s.triad(6, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Afaug5_32;
    c.make(s.triad(6, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Aaug5_32;
    c.make(s.triad(6, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Asaug5_32;
    c.make(s.triad(6, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Bfaug5_32;
    c.make(s.triad(6, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Baug5_32;

    c.make(s.triad(7, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Caug6_32;
    c.make(s.triad(7, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Csaug6_32;
    c.make(s.triad(7, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Daug6_32;
    c.make(s.triad(7, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Dsaug6_32;
    c.make(s.triad(7, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Efaug6_32;
    c.make(s.triad(7, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Eaug6_32;
    c.make(s.triad(7, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> _Faug6_32;
    c.make(s.triad(7, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Fsaug6_32;
    c.make(s.triad(7, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gfaug6_32;
    c.make(s.triad(7, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gaug6_32;
    c.make(s.triad(7, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gsaug6_32;
    c.make(s.triad(7, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Afaug6_32;
    c.make(s.triad(7, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Aaug6_32;
    c.make(s.triad(7, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Asaug6_32;
    c.make(s.triad(7, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Bfaug6_32;
    c.make(s.triad(7, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Baug6_32;

    c.make(s.triad(8, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Caug7_32;
    c.make(s.triad(8, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Csaug7_32;
    c.make(s.triad(8, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Daug7_32;
    c.make(s.triad(8, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Dsaug7_32;
    c.make(s.triad(8, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Efaug7_32;
    c.make(s.triad(8, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Eaug7_32;
    c.make(s.triad(8, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> _Faug7_32;
    c.make(s.triad(8, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Fsaug7_32;
    c.make(s.triad(8, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gfaug7_32;
    c.make(s.triad(8, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gaug7_32;
    c.make(s.triad(8, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gsaug7_32;
    c.make(s.triad(8, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Afaug7_32;
    c.make(s.triad(8, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Aaug7_32;
    c.make(s.triad(8, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Asaug7_32;
    c.make(s.triad(8, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Bfaug7_32;
    c.make(s.triad(8, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Baug7_32;

    c.make(s.triad(9, n.C, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Caug8_32;
    c.make(s.triad(9, n.Cs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Csaug8_32;
    c.make(s.triad(9, n.D, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Daug8_32;
    c.make(s.triad(9, n.Ds, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Dsaug8_32;
    c.make(s.triad(9, n.Ef, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Efaug8_32;
    c.make(s.triad(9, n.E, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Eaug8_32;
    c.make(s.triad(9, n.F, aug), DEFAULT_GAIN, k.THRTYSCND) @=> _Faug8_32;
    c.make(s.triad(9, n.Fs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Fsaug8_32;
    c.make(s.triad(9, n.Gf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gfaug8_32;
    c.make(s.triad(9, n.G, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gaug8_32;
    c.make(s.triad(9, n.Gs, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Gsaug8_32;
    c.make(s.triad(9, n.Af, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Afaug8_32;
    c.make(s.triad(9, n.A, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Aaug8_32;
    c.make(s.triad(9, n.As, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Asaug8_32;
    c.make(s.triad(9, n.Bf, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Bfaug8_32;
    c.make(s.triad(9, n.B, aug), DEFAULT_GAIN, k.THRTYSCND) @=> Baug8_32;

    // Diminished
    c.make(s.triad(0, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Cdim_32;
    c.make(s.triad(0, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Csdim_32;
    c.make(s.triad(0, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Ddim_32;
    c.make(s.triad(0, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Dsdim_32;
    c.make(s.triad(0, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Efdim_32;
    c.make(s.triad(0, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Edim_32;
    c.make(s.triad(0, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> _Fdim_32;
    c.make(s.triad(0, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Fsdim_32;
    c.make(s.triad(0, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gfdim_32;
    c.make(s.triad(0, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gdim_32;
    c.make(s.triad(0, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gsdim_32;
    c.make(s.triad(0, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Afdim_32;
    c.make(s.triad(0, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Adim_32;
    c.make(s.triad(0, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Asdim_32;
    c.make(s.triad(0, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bfdim_32;
    c.make(s.triad(0, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bdim_32;

    c.make(s.triad(1, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Cdim0_32;
    c.make(s.triad(1, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Csdim0_32;
    c.make(s.triad(1, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Ddim0_32;
    c.make(s.triad(1, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Dsdim0_32;
    c.make(s.triad(1, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Efdim0_32;
    c.make(s.triad(1, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Edim0_32;
    c.make(s.triad(1, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> _Fdim0_32;
    c.make(s.triad(1, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Fsdim0_32;
    c.make(s.triad(1, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gfdim0_32;
    c.make(s.triad(1, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gdim0_32;
    c.make(s.triad(1, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gsdim0_32;
    c.make(s.triad(1, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Afdim0_32;
    c.make(s.triad(1, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Adim0_32;
    c.make(s.triad(1, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Asdim0_32;
    c.make(s.triad(1, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bfdim0_32;
    c.make(s.triad(1, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bdim0_32;

    c.make(s.triad(2, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Cdim1_32;
    c.make(s.triad(2, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Csdim1_32;
    c.make(s.triad(2, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Ddim1_32;
    c.make(s.triad(2, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Dsdim1_32;
    c.make(s.triad(2, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Efdim1_32;
    c.make(s.triad(2, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Edim1_32;
    c.make(s.triad(2, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> _Fdim1_32;
    c.make(s.triad(2, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Fsdim1_32;
    c.make(s.triad(2, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gfdim1_32;
    c.make(s.triad(2, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gdim1_32;
    c.make(s.triad(2, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gsdim1_32;
    c.make(s.triad(2, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Afdim1_32;
    c.make(s.triad(2, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Adim1_32;
    c.make(s.triad(2, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Asdim1_32;
    c.make(s.triad(2, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bfdim1_32;
    c.make(s.triad(2, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bdim1_32;

    c.make(s.triad(3, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Cdim2_32;
    c.make(s.triad(3, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Csdim2_32;
    c.make(s.triad(3, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Ddim2_32;
    c.make(s.triad(3, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Dsdim2_32;
    c.make(s.triad(3, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Efdim2_32;
    c.make(s.triad(3, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Edim2_32;
    c.make(s.triad(3, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> _Fdim2_32;
    c.make(s.triad(3, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Fsdim2_32;
    c.make(s.triad(3, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gfdim2_32;
    c.make(s.triad(3, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gdim2_32;
    c.make(s.triad(3, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gsdim2_32;
    c.make(s.triad(3, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Afdim2_32;
    c.make(s.triad(3, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Adim2_32;
    c.make(s.triad(3, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Asdim2_32;
    c.make(s.triad(3, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bfdim2_32;
    c.make(s.triad(3, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bdim2_32;

    c.make(s.triad(4, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Cdim3_32;
    c.make(s.triad(4, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Csdim3_32;
    c.make(s.triad(4, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Ddim3_32;
    c.make(s.triad(4, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Dsdim3_32;
    c.make(s.triad(4, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Efdim3_32;
    c.make(s.triad(4, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Edim3_32;
    c.make(s.triad(4, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> _Fdim3_32;
    c.make(s.triad(4, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Fsdim3_32;
    c.make(s.triad(4, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gfdim3_32;
    c.make(s.triad(4, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gdim3_32;
    c.make(s.triad(4, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gsdim3_32;
    c.make(s.triad(4, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Afdim3_32;
    c.make(s.triad(4, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Adim3_32;
    c.make(s.triad(4, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Asdim3_32;
    c.make(s.triad(4, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bfdim3_32;
    c.make(s.triad(4, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bdim3_32;

    c.make(s.triad(5, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Cdim4_32;
    c.make(s.triad(5, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Csdim4_32;
    c.make(s.triad(5, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Ddim4_32;
    c.make(s.triad(5, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Dsdim4_32;
    c.make(s.triad(5, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Efdim4_32;
    c.make(s.triad(5, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Edim4_32;
    c.make(s.triad(5, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> _Fdim4_32;
    c.make(s.triad(5, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Fsdim4_32;
    c.make(s.triad(5, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gfdim4_32;
    c.make(s.triad(5, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gdim4_32;
    c.make(s.triad(5, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gsdim4_32;
    c.make(s.triad(5, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Afdim4_32;
    c.make(s.triad(5, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Adim4_32;
    c.make(s.triad(5, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Asdim4_32;
    c.make(s.triad(5, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bfdim4_32;
    c.make(s.triad(5, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bdim4_32;

    c.make(s.triad(6, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Cdim5_32;
    c.make(s.triad(6, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Csdim5_32;
    c.make(s.triad(6, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Ddim5_32;
    c.make(s.triad(6, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Dsdim5_32;
    c.make(s.triad(6, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Efdim5_32;
    c.make(s.triad(6, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Edim5_32;
    c.make(s.triad(6, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> _Fdim5_32;
    c.make(s.triad(6, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Fsdim5_32;
    c.make(s.triad(6, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gfdim5_32;
    c.make(s.triad(6, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gdim5_32;
    c.make(s.triad(6, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gsdim5_32;
    c.make(s.triad(6, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Afdim5_32;
    c.make(s.triad(6, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Adim5_32;
    c.make(s.triad(6, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Asdim5_32;
    c.make(s.triad(6, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bfdim5_32;
    c.make(s.triad(6, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bdim5_32;

    c.make(s.triad(7, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Cdim6_32;
    c.make(s.triad(7, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Csdim6_32;
    c.make(s.triad(7, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Ddim6_32;
    c.make(s.triad(7, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Dsdim6_32;
    c.make(s.triad(7, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Efdim6_32;
    c.make(s.triad(7, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Edim6_32;
    c.make(s.triad(7, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> _Fdim6_32;
    c.make(s.triad(7, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Fsdim6_32;
    c.make(s.triad(7, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gfdim6_32;
    c.make(s.triad(7, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gdim6_32;
    c.make(s.triad(7, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gsdim6_32;
    c.make(s.triad(7, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Afdim6_32;
    c.make(s.triad(7, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Adim6_32;
    c.make(s.triad(7, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Asdim6_32;
    c.make(s.triad(7, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bfdim6_32;
    c.make(s.triad(7, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bdim6_32;

    c.make(s.triad(8, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Cdim7_32;
    c.make(s.triad(8, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Csdim7_32;
    c.make(s.triad(8, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Ddim7_32;
    c.make(s.triad(8, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Dsdim7_32;
    c.make(s.triad(8, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Efdim7_32;
    c.make(s.triad(8, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Edim7_32;
    c.make(s.triad(8, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> _Fdim7_32;
    c.make(s.triad(8, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Fsdim7_32;
    c.make(s.triad(8, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gfdim7_32;
    c.make(s.triad(8, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gdim7_32;
    c.make(s.triad(8, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gsdim7_32;
    c.make(s.triad(8, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Afdim7_32;
    c.make(s.triad(8, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Adim7_32;
    c.make(s.triad(8, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Asdim7_32;
    c.make(s.triad(8, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bfdim7_32;
    c.make(s.triad(8, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bdim7_32;

    c.make(s.triad(9, n.C, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Cdim8_32;
    c.make(s.triad(9, n.Cs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Csdim8_32;
    c.make(s.triad(9, n.D, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Ddim8_32;
    c.make(s.triad(9, n.Ds, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Dsdim8_32;
    c.make(s.triad(9, n.Ef, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Efdim8_32;
    c.make(s.triad(9, n.E, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Edim8_32;
    c.make(s.triad(9, n.F, dim), DEFAULT_GAIN, k.THRTYSCND) @=> _Fdim8_32;
    c.make(s.triad(9, n.Fs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Fsdim8_32;
    c.make(s.triad(9, n.Gf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gfdim8_32;
    c.make(s.triad(9, n.G, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gdim8_32;
    c.make(s.triad(9, n.Gs, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Gsdim8_32;
    c.make(s.triad(9, n.Af, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Afdim8_32;
    c.make(s.triad(9, n.A, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Adim8_32;
    c.make(s.triad(9, n.As, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Asdim8_32;
    c.make(s.triad(9, n.Bf, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bfdim8_32;
    c.make(s.triad(9, n.B, dim), DEFAULT_GAIN, k.THRTYSCND) @=> Bdim8_32;

    //
    // SXTYFRTH
    //

    // Major
    // 0-based offsets
    c.make(s.triad(0, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CM_64;
    c.make(s.triad(0, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CsM_64;
    c.make(s.triad(0, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DM_64;
    c.make(s.triad(0, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DsM_64;
    c.make(s.triad(0, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EfM_64;
    c.make(s.triad(0, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EM_64;
    c.make(s.triad(0, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FM_64;
    c.make(s.triad(0, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FsM_64;
    c.make(s.triad(0, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GfM_64;
    c.make(s.triad(0, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GM_64;
    c.make(s.triad(0, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GsM_64;
    c.make(s.triad(0, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AfM_64;
    c.make(s.triad(0, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AM_64;
    c.make(s.triad(0, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AsM_64;
    c.make(s.triad(0, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BfM_64;
    c.make(s.triad(0, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BM_64;

    // constants predefined per octave
    c.make(s.triad(1, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CM0_64;
    c.make(s.triad(1, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CsM0_64;
    c.make(s.triad(1, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DM0_64;
    c.make(s.triad(1, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DsM0_64;
    c.make(s.triad(1, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EfM0_64;
    c.make(s.triad(1, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EM0_64;
    c.make(s.triad(1, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FM0_64;
    c.make(s.triad(1, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FsM0_64;
    c.make(s.triad(1, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GfM0_64;
    c.make(s.triad(1, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GM0_64;
    c.make(s.triad(1, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GsM0_64;
    c.make(s.triad(1, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AfM0_64;
    c.make(s.triad(1, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AM0_64;
    c.make(s.triad(1, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AsM0_64;
    c.make(s.triad(1, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BfM0_64;
    c.make(s.triad(1, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BM0_64;

    c.make(s.triad(2, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CM1_64;
    c.make(s.triad(2, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CsM1_64;
    c.make(s.triad(2, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DM1_64;
    c.make(s.triad(2, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DsM1_64;
    c.make(s.triad(2, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EfM1_64;
    c.make(s.triad(2, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EM1_64;
    c.make(s.triad(2, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FM1_64;
    c.make(s.triad(2, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FsM1_64;
    c.make(s.triad(2, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GfM1_64;
    c.make(s.triad(2, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GM1_64;
    c.make(s.triad(2, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GsM1_64;
    c.make(s.triad(2, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AfM1_64;
    c.make(s.triad(2, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AM1_64;
    c.make(s.triad(2, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AsM1_64;
    c.make(s.triad(2, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BfM1_64;
    c.make(s.triad(2, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BM1_64;

    c.make(s.triad(3, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CM2_64;
    c.make(s.triad(3, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CsM2_64;
    c.make(s.triad(3, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DM2_64;
    c.make(s.triad(3, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DsM2_64;
    c.make(s.triad(3, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EfM2_64;
    c.make(s.triad(3, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EM2_64;
    c.make(s.triad(3, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FM2_64;
    c.make(s.triad(3, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FsM2_64;
    c.make(s.triad(3, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GfM2_64;
    c.make(s.triad(3, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GM2_64;
    c.make(s.triad(3, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GsM2_64;
    c.make(s.triad(3, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AfM2_64;
    c.make(s.triad(3, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AM2_64;
    c.make(s.triad(3, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AsM2_64;
    c.make(s.triad(3, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BfM2_64;
    c.make(s.triad(3, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BM2_64;

    c.make(s.triad(4, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CM3_64;
    c.make(s.triad(4, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CsM3_64;
    c.make(s.triad(4, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DM3_64;
    c.make(s.triad(4, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DsM3_64;
    c.make(s.triad(4, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EfM3_64;
    c.make(s.triad(4, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EM3_64;
    c.make(s.triad(4, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FM3_64;
    c.make(s.triad(4, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FsM3_64;
    c.make(s.triad(4, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GfM3_64;
    c.make(s.triad(4, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GM3_64;
    c.make(s.triad(4, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GsM3_64;
    c.make(s.triad(4, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AfM3_64;
    c.make(s.triad(4, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AM3_64;
    c.make(s.triad(4, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AsM3_64;
    c.make(s.triad(4, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BfM3_64;
    c.make(s.triad(4, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BM3_64;

    c.make(s.triad(5, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CM4_64;
    c.make(s.triad(5, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CsM4_64;
    c.make(s.triad(5, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DM4_64;
    c.make(s.triad(5, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DsM4_64;
    c.make(s.triad(5, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EfM4_64;
    c.make(s.triad(5, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EM4_64;
    c.make(s.triad(5, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FM4_64;
    c.make(s.triad(5, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FsM4_64;
    c.make(s.triad(5, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GfM4_64;
    c.make(s.triad(5, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GM4_64;
    c.make(s.triad(5, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GsM4_64;
    c.make(s.triad(5, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AfM4_64;
    c.make(s.triad(5, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AM4_64;
    c.make(s.triad(5, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AsM4_64;
    c.make(s.triad(5, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BfM4_64;
    c.make(s.triad(5, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BM4_64;

    c.make(s.triad(6, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CM5_64;
    c.make(s.triad(6, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CsM5_64;
    c.make(s.triad(6, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DM5_64;
    c.make(s.triad(6, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DsM5_64;
    c.make(s.triad(6, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EfM5_64;
    c.make(s.triad(6, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EM5_64;
    c.make(s.triad(6, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FM5_64;
    c.make(s.triad(6, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FsM5_64;
    c.make(s.triad(6, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GfM5_64;
    c.make(s.triad(6, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GM5_64;
    c.make(s.triad(6, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GsM5_64;
    c.make(s.triad(6, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AfM5_64;
    c.make(s.triad(6, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AM5_64;
    c.make(s.triad(6, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AsM5_64;
    c.make(s.triad(6, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BfM5_64;
    c.make(s.triad(6, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BM5_64;

    c.make(s.triad(7, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CM6_64;
    c.make(s.triad(7, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CsM6_64;
    c.make(s.triad(7, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DM6_64;
    c.make(s.triad(7, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DsM6_64;
    c.make(s.triad(7, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EfM6_64;
    c.make(s.triad(7, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EM6_64;
    c.make(s.triad(7, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FM6_64;
    c.make(s.triad(7, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FsM6_64;
    c.make(s.triad(7, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GfM6_64;
    c.make(s.triad(7, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GM6_64;
    c.make(s.triad(7, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GsM6_64;
    c.make(s.triad(7, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AfM6_64;
    c.make(s.triad(7, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AM6_64;
    c.make(s.triad(7, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AsM6_64;
    c.make(s.triad(7, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BfM6_64;
    c.make(s.triad(7, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BM6_64;

    c.make(s.triad(8, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CM7_64;
    c.make(s.triad(8, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CsM7_64;
    c.make(s.triad(8, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DM7_64;
    c.make(s.triad(8, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DsM7_64;
    c.make(s.triad(8, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EfM7_64;
    c.make(s.triad(8, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EM7_64;
    c.make(s.triad(8, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FM7_64;
    c.make(s.triad(8, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FsM7_64;
    c.make(s.triad(8, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GfM7_64;
    c.make(s.triad(8, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GM7_64;
    c.make(s.triad(8, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GsM7_64;
    c.make(s.triad(8, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AfM7_64;
    c.make(s.triad(8, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AM7_64;
    c.make(s.triad(8, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AsM7_64;
    c.make(s.triad(8, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BfM7_64;
    c.make(s.triad(8, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BM7_64;

    c.make(s.triad(9, n.C, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CM8_64;
    c.make(s.triad(9, n.Cs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> CsM8_64;
    c.make(s.triad(9, n.D, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DM8_64;
    c.make(s.triad(9, n.Ds, M), DEFAULT_GAIN, k.SXTYFRTH) @=> DsM8_64;
    c.make(s.triad(9, n.Ef, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EfM8_64;
    c.make(s.triad(9, n.E, M), DEFAULT_GAIN, k.SXTYFRTH) @=> EM8_64;
    c.make(s.triad(9, n.F, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FM8_64;
    c.make(s.triad(9, n.Fs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> FsM8_64;
    c.make(s.triad(9, n.Gf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GfM8_64;
    c.make(s.triad(9, n.G, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GM8_64;
    c.make(s.triad(9, n.Gs, M), DEFAULT_GAIN, k.SXTYFRTH) @=> GsM8_64;
    c.make(s.triad(9, n.Af, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AfM8_64;
    c.make(s.triad(9, n.A, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AM8_64;
    c.make(s.triad(9, n.As, M), DEFAULT_GAIN, k.SXTYFRTH) @=> AsM8_64;
    c.make(s.triad(9, n.Bf, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BfM8_64;
    c.make(s.triad(9, n.B, M), DEFAULT_GAIN, k.SXTYFRTH) @=> BM8_64;

    // Minor
    c.make(s.triad(0, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Cm_64;
    c.make(s.triad(0, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Csm_64;
    c.make(s.triad(0, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dm_64;
    c.make(s.triad(0, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsm_64;
    c.make(s.triad(0, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Efm_64;
    c.make(s.triad(0, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Em_64;
    c.make(s.triad(0, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fm_64;
    c.make(s.triad(0, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsm_64;
    c.make(s.triad(0, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfm_64;
    c.make(s.triad(0, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gm_64;
    c.make(s.triad(0, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsm_64;
    c.make(s.triad(0, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Afm_64;
    c.make(s.triad(0, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Am_64;
    c.make(s.triad(0, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Asm_64;
    c.make(s.triad(0, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfm_64;
    c.make(s.triad(0, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bm_64;

    c.make(s.triad(1, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Cm0_64;
    c.make(s.triad(1, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Csm0_64;
    c.make(s.triad(1, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dm0_64;
    c.make(s.triad(1, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsm0_64;
    c.make(s.triad(1, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Efm0_64;
    c.make(s.triad(1, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Em0_64;
    c.make(s.triad(1, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fm0_64;
    c.make(s.triad(1, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsm0_64;
    c.make(s.triad(1, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfm0_64;
    c.make(s.triad(1, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gm0_64;
    c.make(s.triad(1, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsm0_64;
    c.make(s.triad(1, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Afm0_64;
    c.make(s.triad(1, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Am0_64;
    c.make(s.triad(1, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Asm0_64;
    c.make(s.triad(1, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfm0_64;
    c.make(s.triad(1, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bm0_64;

    c.make(s.triad(2, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Cm1_64;
    c.make(s.triad(2, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Csm1_64;
    c.make(s.triad(2, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dm1_64;
    c.make(s.triad(2, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsm1_64;
    c.make(s.triad(2, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Efm1_64;
    c.make(s.triad(2, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Em1_64;
    c.make(s.triad(2, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fm1_64;
    c.make(s.triad(2, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsm1_64;
    c.make(s.triad(2, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfm1_64;
    c.make(s.triad(2, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gm1_64;
    c.make(s.triad(2, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsm1_64;
    c.make(s.triad(2, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Afm1_64;
    c.make(s.triad(2, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Am1_64;
    c.make(s.triad(2, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Asm1_64;
    c.make(s.triad(2, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfm1_64;
    c.make(s.triad(2, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bm1_64;

    c.make(s.triad(3, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Cm2_64;
    c.make(s.triad(3, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Csm2_64;
    c.make(s.triad(3, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dm2_64;
    c.make(s.triad(3, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsm2_64;
    c.make(s.triad(3, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Efm2_64;
    c.make(s.triad(3, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Em2_64;
    c.make(s.triad(3, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fm2_64;
    c.make(s.triad(3, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsm2_64;
    c.make(s.triad(3, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfm2_64;
    c.make(s.triad(3, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gm2_64;
    c.make(s.triad(3, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsm2_64;
    c.make(s.triad(3, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Afm2_64;
    c.make(s.triad(3, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Am2_64;
    c.make(s.triad(3, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Asm2_64;
    c.make(s.triad(3, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfm2_64;
    c.make(s.triad(3, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bm2_64;

    c.make(s.triad(4, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Cm3_64;
    c.make(s.triad(4, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Csm3_64;
    c.make(s.triad(4, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dm3_64;
    c.make(s.triad(4, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsm3_64;
    c.make(s.triad(4, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Efm3_64;
    c.make(s.triad(4, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Em3_64;
    c.make(s.triad(4, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fm3_64;
    c.make(s.triad(4, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsm3_64;
    c.make(s.triad(4, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfm3_64;
    c.make(s.triad(4, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gm3_64;
    c.make(s.triad(4, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsm3_64;
    c.make(s.triad(4, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Afm3_64;
    c.make(s.triad(4, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Am3_64;
    c.make(s.triad(4, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Asm3_64;
    c.make(s.triad(4, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfm3_64;
    c.make(s.triad(4, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bm3_64;

    c.make(s.triad(5, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Cm4_64;
    c.make(s.triad(5, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Csm4_64;
    c.make(s.triad(5, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dm4_64;
    c.make(s.triad(5, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsm4_64;
    c.make(s.triad(5, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Efm4_64;
    c.make(s.triad(5, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Em4_64;
    c.make(s.triad(5, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fm4_64;
    c.make(s.triad(5, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsm4_64;
    c.make(s.triad(5, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfm4_64;
    c.make(s.triad(5, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gm4_64;
    c.make(s.triad(5, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsm4_64;
    c.make(s.triad(5, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Afm4_64;
    c.make(s.triad(5, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Am4_64;
    c.make(s.triad(5, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Asm4_64;
    c.make(s.triad(5, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfm4_64;
    c.make(s.triad(5, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bm4_64;

    c.make(s.triad(6, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Cm5_64;
    c.make(s.triad(6, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Csm5_64;
    c.make(s.triad(6, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dm5_64;
    c.make(s.triad(6, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsm5_64;
    c.make(s.triad(6, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Efm5_64;
    c.make(s.triad(6, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Em5_64;
    c.make(s.triad(6, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fm5_64;
    c.make(s.triad(6, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsm5_64;
    c.make(s.triad(6, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfm5_64;
    c.make(s.triad(6, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gm5_64;
    c.make(s.triad(6, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsm5_64;
    c.make(s.triad(6, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Afm5_64;
    c.make(s.triad(6, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Am5_64;
    c.make(s.triad(6, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Asm5_64;
    c.make(s.triad(6, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfm5_64;
    c.make(s.triad(6, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bm5_64;

    c.make(s.triad(7, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Cm6_64;
    c.make(s.triad(7, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Csm6_64;
    c.make(s.triad(7, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dm6_64;
    c.make(s.triad(7, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsm6_64;
    c.make(s.triad(7, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Efm6_64;
    c.make(s.triad(7, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Em6_64;
    c.make(s.triad(7, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fm6_64;
    c.make(s.triad(7, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsm6_64;
    c.make(s.triad(7, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfm6_64;
    c.make(s.triad(7, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gm6_64;
    c.make(s.triad(7, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsm6_64;
    c.make(s.triad(7, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Afm6_64;
    c.make(s.triad(7, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Am6_64;
    c.make(s.triad(7, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Asm6_64;
    c.make(s.triad(7, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfm6_64;
    c.make(s.triad(7, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bm6_64;

    c.make(s.triad(8, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Cm7_64;
    c.make(s.triad(8, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Csm7_64;
    c.make(s.triad(8, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dm7_64;
    c.make(s.triad(8, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsm7_64;
    c.make(s.triad(8, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Efm7_64;
    c.make(s.triad(8, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Em7_64;
    c.make(s.triad(8, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fm7_64;
    c.make(s.triad(8, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsm7_64;
    c.make(s.triad(8, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfm7_64;
    c.make(s.triad(8, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gm7_64;
    c.make(s.triad(8, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsm7_64;
    c.make(s.triad(8, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Afm7_64;
    c.make(s.triad(8, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Am7_64;
    c.make(s.triad(8, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Asm7_64;
    c.make(s.triad(8, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfm7_64;
    c.make(s.triad(8, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bm7_64;

    c.make(s.triad(9, n.C, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Cm8_64;
    c.make(s.triad(9, n.Cs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Csm8_64;
    c.make(s.triad(9, n.D, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dm8_64;
    c.make(s.triad(9, n.Ds, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsm8_64;
    c.make(s.triad(9, n.Ef, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Efm8_64;
    c.make(s.triad(9, n.E, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Em8_64;
    c.make(s.triad(9, n.F, m), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fm8_64;
    c.make(s.triad(9, n.Fs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsm8_64;
    c.make(s.triad(9, n.Gf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfm8_64;
    c.make(s.triad(9, n.G, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gm8_64;
    c.make(s.triad(9, n.Gs, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsm8_64;
    c.make(s.triad(9, n.Af, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Afm8_64;
    c.make(s.triad(9, n.A, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Am8_64;
    c.make(s.triad(9, n.As, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Asm8_64;
    c.make(s.triad(9, n.Bf, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfm8_64;
    c.make(s.triad(9, n.B, m), DEFAULT_GAIN, k.SXTYFRTH) @=> Bm8_64;

    // Augmented
    c.make(s.triad(0, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Caug_64;
    c.make(s.triad(0, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Csaug_64;
    c.make(s.triad(0, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Daug_64;
    c.make(s.triad(0, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsaug_64;
    c.make(s.triad(0, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Efaug_64;
    c.make(s.triad(0, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Eaug_64;
    c.make(s.triad(0, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> _Faug_64;
    c.make(s.triad(0, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsaug_64;
    c.make(s.triad(0, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfaug_64;
    c.make(s.triad(0, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gaug_64;
    c.make(s.triad(0, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsaug_64;
    c.make(s.triad(0, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Afaug_64;
    c.make(s.triad(0, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Aaug_64;
    c.make(s.triad(0, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Asaug_64;
    c.make(s.triad(0, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfaug_64;
    c.make(s.triad(0, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Baug_64;

    c.make(s.triad(1, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Caug0_64;
    c.make(s.triad(1, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Csaug0_64;
    c.make(s.triad(1, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Daug0_64;
    c.make(s.triad(1, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsaug0_64;
    c.make(s.triad(1, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Efaug0_64;
    c.make(s.triad(1, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Eaug0_64;
    c.make(s.triad(1, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> _Faug0_64;
    c.make(s.triad(1, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsaug0_64;
    c.make(s.triad(1, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfaug0_64;
    c.make(s.triad(1, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gaug0_64;
    c.make(s.triad(1, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsaug0_64;
    c.make(s.triad(1, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Afaug0_64;
    c.make(s.triad(1, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Aaug0_64;
    c.make(s.triad(1, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Asaug0_64;
    c.make(s.triad(1, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfaug0_64;
    c.make(s.triad(1, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Baug0_64;

    c.make(s.triad(2, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Caug1_64;
    c.make(s.triad(2, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Csaug1_64;
    c.make(s.triad(2, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Daug1_64;
    c.make(s.triad(2, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsaug1_64;
    c.make(s.triad(2, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Efaug1_64;
    c.make(s.triad(2, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Eaug1_64;
    c.make(s.triad(2, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> _Faug1_64;
    c.make(s.triad(2, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsaug1_64;
    c.make(s.triad(2, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfaug1_64;
    c.make(s.triad(2, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gaug1_64;
    c.make(s.triad(2, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsaug1_64;
    c.make(s.triad(2, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Afaug1_64;
    c.make(s.triad(2, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Aaug1_64;
    c.make(s.triad(2, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Asaug1_64;
    c.make(s.triad(2, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfaug1_64;
    c.make(s.triad(2, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Baug1_64;

    c.make(s.triad(3, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Caug2_64;
    c.make(s.triad(3, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Csaug2_64;
    c.make(s.triad(3, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Daug2_64;
    c.make(s.triad(3, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsaug2_64;
    c.make(s.triad(3, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Efaug2_64;
    c.make(s.triad(3, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Eaug2_64;
    c.make(s.triad(3, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> _Faug2_64;
    c.make(s.triad(3, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsaug2_64;
    c.make(s.triad(3, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfaug2_64;
    c.make(s.triad(3, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gaug2_64;
    c.make(s.triad(3, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsaug2_64;
    c.make(s.triad(3, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Afaug2_64;
    c.make(s.triad(3, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Aaug2_64;
    c.make(s.triad(3, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Asaug2_64;
    c.make(s.triad(3, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfaug2_64;
    c.make(s.triad(3, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Baug2_64;

    c.make(s.triad(4, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Caug3_64;
    c.make(s.triad(4, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Csaug3_64;
    c.make(s.triad(4, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Daug3_64;
    c.make(s.triad(4, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsaug3_64;
    c.make(s.triad(4, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Efaug3_64;
    c.make(s.triad(4, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Eaug3_64;
    c.make(s.triad(4, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> _Faug3_64;
    c.make(s.triad(4, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsaug3_64;
    c.make(s.triad(4, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfaug3_64;
    c.make(s.triad(4, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gaug3_64;
    c.make(s.triad(4, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsaug3_64;
    c.make(s.triad(4, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Afaug3_64;
    c.make(s.triad(4, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Aaug3_64;
    c.make(s.triad(4, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Asaug3_64;
    c.make(s.triad(4, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfaug3_64;
    c.make(s.triad(4, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Baug3_64;

    c.make(s.triad(5, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Caug4_64;
    c.make(s.triad(5, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Csaug4_64;
    c.make(s.triad(5, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Daug4_64;
    c.make(s.triad(5, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsaug4_64;
    c.make(s.triad(5, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Efaug4_64;
    c.make(s.triad(5, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Eaug4_64;
    c.make(s.triad(5, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> _Faug4_64;
    c.make(s.triad(5, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsaug4_64;
    c.make(s.triad(5, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfaug4_64;
    c.make(s.triad(5, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gaug4_64;
    c.make(s.triad(5, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsaug4_64;
    c.make(s.triad(5, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Afaug4_64;
    c.make(s.triad(5, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Aaug4_64;
    c.make(s.triad(5, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Asaug4_64;
    c.make(s.triad(5, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfaug4_64;
    c.make(s.triad(5, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Baug4_64;

    c.make(s.triad(6, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Caug5_64;
    c.make(s.triad(6, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Csaug5_64;
    c.make(s.triad(6, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Daug5_64;
    c.make(s.triad(6, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsaug5_64;
    c.make(s.triad(6, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Efaug5_64;
    c.make(s.triad(6, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Eaug5_64;
    c.make(s.triad(6, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> _Faug5_64;
    c.make(s.triad(6, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsaug5_64;
    c.make(s.triad(6, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfaug5_64;
    c.make(s.triad(6, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gaug5_64;
    c.make(s.triad(6, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsaug5_64;
    c.make(s.triad(6, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Afaug5_64;
    c.make(s.triad(6, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Aaug5_64;
    c.make(s.triad(6, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Asaug5_64;
    c.make(s.triad(6, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfaug5_64;
    c.make(s.triad(6, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Baug5_64;

    c.make(s.triad(7, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Caug6_64;
    c.make(s.triad(7, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Csaug6_64;
    c.make(s.triad(7, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Daug6_64;
    c.make(s.triad(7, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsaug6_64;
    c.make(s.triad(7, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Efaug6_64;
    c.make(s.triad(7, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Eaug6_64;
    c.make(s.triad(7, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> _Faug6_64;
    c.make(s.triad(7, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsaug6_64;
    c.make(s.triad(7, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfaug6_64;
    c.make(s.triad(7, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gaug6_64;
    c.make(s.triad(7, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsaug6_64;
    c.make(s.triad(7, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Afaug6_64;
    c.make(s.triad(7, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Aaug6_64;
    c.make(s.triad(7, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Asaug6_64;
    c.make(s.triad(7, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfaug6_64;
    c.make(s.triad(7, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Baug6_64;

    c.make(s.triad(8, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Caug7_64;
    c.make(s.triad(8, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Csaug7_64;
    c.make(s.triad(8, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Daug7_64;
    c.make(s.triad(8, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsaug7_64;
    c.make(s.triad(8, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Efaug7_64;
    c.make(s.triad(8, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Eaug7_64;
    c.make(s.triad(8, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> _Faug7_64;
    c.make(s.triad(8, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsaug7_64;
    c.make(s.triad(8, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfaug7_64;
    c.make(s.triad(8, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gaug7_64;
    c.make(s.triad(8, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsaug7_64;
    c.make(s.triad(8, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Afaug7_64;
    c.make(s.triad(8, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Aaug7_64;
    c.make(s.triad(8, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Asaug7_64;
    c.make(s.triad(8, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfaug7_64;
    c.make(s.triad(8, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Baug7_64;

    c.make(s.triad(9, n.C, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Caug8_64;
    c.make(s.triad(9, n.Cs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Csaug8_64;
    c.make(s.triad(9, n.D, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Daug8_64;
    c.make(s.triad(9, n.Ds, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsaug8_64;
    c.make(s.triad(9, n.Ef, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Efaug8_64;
    c.make(s.triad(9, n.E, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Eaug8_64;
    c.make(s.triad(9, n.F, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> _Faug8_64;
    c.make(s.triad(9, n.Fs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsaug8_64;
    c.make(s.triad(9, n.Gf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfaug8_64;
    c.make(s.triad(9, n.G, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gaug8_64;
    c.make(s.triad(9, n.Gs, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsaug8_64;
    c.make(s.triad(9, n.Af, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Afaug8_64;
    c.make(s.triad(9, n.A, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Aaug8_64;
    c.make(s.triad(9, n.As, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Asaug8_64;
    c.make(s.triad(9, n.Bf, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfaug8_64;
    c.make(s.triad(9, n.B, aug), DEFAULT_GAIN, k.SXTYFRTH) @=> Baug8_64;

    // Diminished
    c.make(s.triad(0, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Cdim_64;
    c.make(s.triad(0, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Csdim_64;
    c.make(s.triad(0, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Ddim_64;
    c.make(s.triad(0, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsdim_64;
    c.make(s.triad(0, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Efdim_64;
    c.make(s.triad(0, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Edim_64;
    c.make(s.triad(0, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fdim_64;
    c.make(s.triad(0, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsdim_64;
    c.make(s.triad(0, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfdim_64;
    c.make(s.triad(0, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gdim_64;
    c.make(s.triad(0, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsdim_64;
    c.make(s.triad(0, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Afdim_64;
    c.make(s.triad(0, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Adim_64;
    c.make(s.triad(0, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Asdim_64;
    c.make(s.triad(0, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfdim_64;
    c.make(s.triad(0, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bdim_64;

    c.make(s.triad(1, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Cdim0_64;
    c.make(s.triad(1, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Csdim0_64;
    c.make(s.triad(1, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Ddim0_64;
    c.make(s.triad(1, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsdim0_64;
    c.make(s.triad(1, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Efdim0_64;
    c.make(s.triad(1, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Edim0_64;
    c.make(s.triad(1, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fdim0_64;
    c.make(s.triad(1, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsdim0_64;
    c.make(s.triad(1, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfdim0_64;
    c.make(s.triad(1, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gdim0_64;
    c.make(s.triad(1, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsdim0_64;
    c.make(s.triad(1, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Afdim0_64;
    c.make(s.triad(1, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Adim0_64;
    c.make(s.triad(1, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Asdim0_64;
    c.make(s.triad(1, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfdim0_64;
    c.make(s.triad(1, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bdim0_64;

    c.make(s.triad(2, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Cdim1_64;
    c.make(s.triad(2, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Csdim1_64;
    c.make(s.triad(2, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Ddim1_64;
    c.make(s.triad(2, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsdim1_64;
    c.make(s.triad(2, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Efdim1_64;
    c.make(s.triad(2, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Edim1_64;
    c.make(s.triad(2, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fdim1_64;
    c.make(s.triad(2, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsdim1_64;
    c.make(s.triad(2, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfdim1_64;
    c.make(s.triad(2, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gdim1_64;
    c.make(s.triad(2, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsdim1_64;
    c.make(s.triad(2, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Afdim1_64;
    c.make(s.triad(2, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Adim1_64;
    c.make(s.triad(2, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Asdim1_64;
    c.make(s.triad(2, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfdim1_64;
    c.make(s.triad(2, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bdim1_64;

    c.make(s.triad(3, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Cdim2_64;
    c.make(s.triad(3, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Csdim2_64;
    c.make(s.triad(3, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Ddim2_64;
    c.make(s.triad(3, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsdim2_64;
    c.make(s.triad(3, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Efdim2_64;
    c.make(s.triad(3, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Edim2_64;
    c.make(s.triad(3, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fdim2_64;
    c.make(s.triad(3, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsdim2_64;
    c.make(s.triad(3, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfdim2_64;
    c.make(s.triad(3, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gdim2_64;
    c.make(s.triad(3, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsdim2_64;
    c.make(s.triad(3, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Afdim2_64;
    c.make(s.triad(3, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Adim2_64;
    c.make(s.triad(3, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Asdim2_64;
    c.make(s.triad(3, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfdim2_64;
    c.make(s.triad(3, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bdim2_64;

    c.make(s.triad(4, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Cdim3_64;
    c.make(s.triad(4, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Csdim3_64;
    c.make(s.triad(4, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Ddim3_64;
    c.make(s.triad(4, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsdim3_64;
    c.make(s.triad(4, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Efdim3_64;
    c.make(s.triad(4, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Edim3_64;
    c.make(s.triad(4, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fdim3_64;
    c.make(s.triad(4, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsdim3_64;
    c.make(s.triad(4, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfdim3_64;
    c.make(s.triad(4, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gdim3_64;
    c.make(s.triad(4, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsdim3_64;
    c.make(s.triad(4, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Afdim3_64;
    c.make(s.triad(4, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Adim3_64;
    c.make(s.triad(4, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Asdim3_64;
    c.make(s.triad(4, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfdim3_64;
    c.make(s.triad(4, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bdim3_64;

    c.make(s.triad(5, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Cdim4_64;
    c.make(s.triad(5, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Csdim4_64;
    c.make(s.triad(5, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Ddim4_64;
    c.make(s.triad(5, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsdim4_64;
    c.make(s.triad(5, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Efdim4_64;
    c.make(s.triad(5, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Edim4_64;
    c.make(s.triad(5, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fdim4_64;
    c.make(s.triad(5, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsdim4_64;
    c.make(s.triad(5, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfdim4_64;
    c.make(s.triad(5, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gdim4_64;
    c.make(s.triad(5, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsdim4_64;
    c.make(s.triad(5, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Afdim4_64;
    c.make(s.triad(5, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Adim4_64;
    c.make(s.triad(5, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Asdim4_64;
    c.make(s.triad(5, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfdim4_64;
    c.make(s.triad(5, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bdim4_64;

    c.make(s.triad(6, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Cdim5_64;
    c.make(s.triad(6, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Csdim5_64;
    c.make(s.triad(6, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Ddim5_64;
    c.make(s.triad(6, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsdim5_64;
    c.make(s.triad(6, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Efdim5_64;
    c.make(s.triad(6, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Edim5_64;
    c.make(s.triad(6, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fdim5_64;
    c.make(s.triad(6, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsdim5_64;
    c.make(s.triad(6, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfdim5_64;
    c.make(s.triad(6, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gdim5_64;
    c.make(s.triad(6, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsdim5_64;
    c.make(s.triad(6, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Afdim5_64;
    c.make(s.triad(6, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Adim5_64;
    c.make(s.triad(6, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Asdim5_64;
    c.make(s.triad(6, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfdim5_64;
    c.make(s.triad(6, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bdim5_64;

    c.make(s.triad(7, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Cdim6_64;
    c.make(s.triad(7, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Csdim6_64;
    c.make(s.triad(7, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Ddim6_64;
    c.make(s.triad(7, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsdim6_64;
    c.make(s.triad(7, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Efdim6_64;
    c.make(s.triad(7, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Edim6_64;
    c.make(s.triad(7, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fdim6_64;
    c.make(s.triad(7, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsdim6_64;
    c.make(s.triad(7, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfdim6_64;
    c.make(s.triad(7, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gdim6_64;
    c.make(s.triad(7, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsdim6_64;
    c.make(s.triad(7, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Afdim6_64;
    c.make(s.triad(7, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Adim6_64;
    c.make(s.triad(7, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Asdim6_64;
    c.make(s.triad(7, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfdim6_64;
    c.make(s.triad(7, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bdim6_64;

    c.make(s.triad(8, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Cdim7_64;
    c.make(s.triad(8, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Csdim7_64;
    c.make(s.triad(8, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Ddim7_64;
    c.make(s.triad(8, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsdim7_64;
    c.make(s.triad(8, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Efdim7_64;
    c.make(s.triad(8, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Edim7_64;
    c.make(s.triad(8, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fdim7_64;
    c.make(s.triad(8, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsdim7_64;
    c.make(s.triad(8, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfdim7_64;
    c.make(s.triad(8, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gdim7_64;
    c.make(s.triad(8, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsdim7_64;
    c.make(s.triad(8, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Afdim7_64;
    c.make(s.triad(8, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Adim7_64;
    c.make(s.triad(8, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Asdim7_64;
    c.make(s.triad(8, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfdim7_64;
    c.make(s.triad(8, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bdim7_64;

    c.make(s.triad(9, n.C, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Cdim8_64;
    c.make(s.triad(9, n.Cs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Csdim8_64;
    c.make(s.triad(9, n.D, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Ddim8_64;
    c.make(s.triad(9, n.Ds, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Dsdim8_64;
    c.make(s.triad(9, n.Ef, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Efdim8_64;
    c.make(s.triad(9, n.E, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Edim8_64;
    c.make(s.triad(9, n.F, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> _Fdim8_64;
    c.make(s.triad(9, n.Fs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Fsdim8_64;
    c.make(s.triad(9, n.Gf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gfdim8_64;
    c.make(s.triad(9, n.G, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gdim8_64;
    c.make(s.triad(9, n.Gs, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Gsdim8_64;
    c.make(s.triad(9, n.Af, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Afdim8_64;
    c.make(s.triad(9, n.A, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Adim8_64;
    c.make(s.triad(9, n.As, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Asdim8_64;
    c.make(s.triad(9, n.Bf, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bfdim8_64;
    c.make(s.triad(9, n.B, dim), DEFAULT_GAIN, k.SXTYFRTH) @=> Bdim8_64;
  }
}
